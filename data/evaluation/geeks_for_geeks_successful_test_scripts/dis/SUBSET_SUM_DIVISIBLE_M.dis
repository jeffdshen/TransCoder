{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , m ) :\n    if ( n > m ) :\n        return True\n    DP = [ False for i in range ( m ) ]\n    for i in range ( n ) :\n        if ( DP [ 0 ] ) :\n            return True\n        temp = [ False for i in range ( m ) ]\n        for j in range ( m ) :\n            if ( DP [ j ] == True ) :\n                if ( DP [ ( j + arr [ i ] ) % m ] == False ) :\n                    temp [ ( j + arr [ i ] ) % m ] = True\n        for j in range ( m ) :\n            if ( temp [ j ] ) :\n                DP [ j ] = True\n        DP [ arr [ i ] % m ] = True\n    return DP [ 0 ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([2, 5, 7, 12, 13, 13, 15, 18, 20, 21, 22, 26, 27, 41, 41, 50, 53, 57, 58, 58, 61, 62, 62, 64, 70, 75, 78, 79, 81, 81, 81, 83, 86, 91, 93, 95, 97, 99, 99],36,35,),\n    ([8, 16, 62, -24, 14, -4, 2, 50, -64, -76, 78, 66, -64, 18],12,11,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],32,27,),\n    ([50, 20, 79, 42, 85, 24, 20, 76, 36, 88, 40, 5, 24, 85, 7, 19, 43, 51, 94, 13, 53, 93, 92, 43, 97, 38, 80, 48, 52, 47, 77, 56, 41, 80, 32, 34, 77, 14, 70, 3],29,27,),\n    ([-96, -94, -72, -58, -48, -36, -28, -26, -10, -10, -8, -8, -6, 2, 14, 30, 30, 54, 58, 60, 64, 68, 78, 84, 96, 98],16,18,),\n    ([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0],7,8,),\n    ([2, 7, 8, 15, 18, 23, 24, 25, 27, 35, 40, 42, 43, 46, 48, 50, 53, 64, 66, 69, 70, 71, 72, 77, 78, 80, 81, 81, 81, 82, 82, 82, 84, 87, 97, 98],23,32,),\n    ([46, 54, 24, -10],3,3,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],21,34,),\n    ([39, 21, 38, 6, 38, 44, 96, 1, 16, 1, 28, 4, 55, 8],12,11,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def modularSum ( arr , n , m ) :\n    if ( n > m ) :\n        return True\n    DP = [ False for i in range ( m ) ]\n    for i in range ( n ) :\n        if ( DP [ 0 ] ) :\n            return True\n        temp = [ False for i in range ( m ) ]\n        for j in range ( m ) :\n            if ( DP [ j ] == True ) :\n                if ( DP [ ( j + arr [ i ] ) % m ] == False ) :\n                    temp [ ( j + arr [ i ] ) % m ] = True\n        for j in range ( m ) :\n            if ( temp [ j ] ) :\n                DP [ j ] = True\n        DP [ arr [ i ] % m ] = True\n    return DP [ 0 ]\n"}
###TOFILL