{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( s ) :\n    n = len ( s )\n    a = [ 0 ] * n\n    for i in range ( n - 1 , - 1 , - 1 ) :\n        back_up = 0\n        for j in range ( i , n ) :\n            if j == i :\n                a [ j ] = 1\n            elif s [ i ] == s [ j ] :\n                temp = a [ j ]\n                a [ j ] = back_up + 2\n                back_up = temp\n            else :\n                back_up = a [ j ]\n                a [ j ] = max ( a [ j - 1 ] , a [ j ] )\n    return a [ n - 1 ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (' E',),\n    ('0845591950',),\n    ('00101011',),\n    ('pLSvlwrACvFaoT',),\n    ('7246',),\n    ('1010101100000',),\n    ('obPkcLSFp',),\n    ('914757557818',),\n    ('1',),\n    ('PKvUWIQ',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def lps ( s ) :\n    n = len ( s )\n    a = [ 0 ] * n\n    for i in range ( n - 1 , - 1 , - 1 ) :\n        back_up = 0\n        for j in range ( i , n ) :\n            if j == i :\n                a [ j ] = 1\n            elif s [ i ] == s [ j ] :\n                temp = a [ j ]\n                a [ j ] = back_up + 2\n                back_up = temp\n            else :\n                back_up = a [ j ]\n                a [ j ] = max ( a [ j - 1 ] , a [ j ] )\n    return a [ n - 1 ]\n"}
###TOFILL