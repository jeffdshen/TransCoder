{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( n ) :\n    count = 0\n    ans = 1\n    while n % 2 == 0 :\n        count += 1\n        n //= 2\n    if count % 2 is not 0 :\n        ans *= 2\n    for i in range ( 3 , ( int ) ( math.sqrt ( n ) ) + 1 , 2 ) :\n        count = 0\n        while n % i == 0 :\n            count += 1\n            n //= i\n        if count % 2 is not 0 :\n            ans *= i\n    if n > 2 :\n        ans *= n\n    return ans\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (95,),\n    (48,),\n    (3,),\n    (10,),\n    (82,),\n    (1,),\n    (77,),\n    (99,),\n    (23,),\n    (61,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findMinNumber ( n ) :\n    count = 0\n    ans = 1\n    while n % 2 == 0 :\n        count += 1\n        n //= 2\n    if count % 2 is not 0 :\n        ans *= 2\n    for i in range ( 3 , ( int ) ( math.sqrt ( n ) ) + 1 , 2 ) :\n        count = 0\n        while n % i == 0 :\n            count += 1\n            n //= i\n        if count % 2 is not 0 :\n            ans *= i\n    if n > 2 :\n        ans *= n\n    return ans\n"}
###TOFILL