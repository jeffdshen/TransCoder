{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( str ) :\n    N = len ( str )\n    dp = [ [ 0 for x in range ( N + 1 ) ] for y in range ( N + 1 ) ]\n    for l in range ( 1 , N + 1 ) :\n        i = 0\n        j = l - 1\n        while j < N :\n            if ( l == 1 ) :\n                dp [ i ] [ j ] = 1\n            else :\n                dp [ i ] [ j ] = 1 + dp [ i + 1 ] [ j ]\n                if ( str [ i ] == str [ i + 1 ] ) :\n                    dp [ i ] [ j ] = min ( 1 + dp [ i + 2 ] [ j ] , dp [ i ] [ j ] )\n                for K in range ( i + 2 , j + 1 ) :\n                    if ( str [ i ] == str [ K ] ) :\n                        dp [ i ] [ j ] = min ( dp [ i + 1 ] [ K - 1 ] + dp [ K + 1 ] [ j ] , dp [ i ] [ j ] )\n            i += 1\n            j += 1\n    return dp [ 0 ] [ N - 1 ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('YCtLQtHLwr',),\n    ('47713514383248',),\n    ('0100101001111',),\n    ('XfdIYVn',),\n    ('45499225407',),\n    ('000100111001',),\n    ('ZoUQhQwoap',),\n    ('18579027952',),\n    ('00000001111',),\n    ('JD',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def minStepToDeleteString ( str ) :\n    N = len ( str )\n    dp = [ [ 0 for x in range ( N + 1 ) ] for y in range ( N + 1 ) ]\n    for l in range ( 1 , N + 1 ) :\n        i = 0\n        j = l - 1\n        while j < N :\n            if ( l == 1 ) :\n                dp [ i ] [ j ] = 1\n            else :\n                dp [ i ] [ j ] = 1 + dp [ i + 1 ] [ j ]\n                if ( str [ i ] == str [ i + 1 ] ) :\n                    dp [ i ] [ j ] = min ( 1 + dp [ i + 2 ] [ j ] , dp [ i ] [ j ] )\n                for K in range ( i + 2 , j + 1 ) :\n                    if ( str [ i ] == str [ K ] ) :\n                        dp [ i ] [ j ] = min ( dp [ i + 1 ] [ K - 1 ] + dp [ K + 1 ] [ j ] , dp [ i ] [ j ] )\n            i += 1\n            j += 1\n    return dp [ 0 ] [ N - 1 ]\n"}
###TOFILL