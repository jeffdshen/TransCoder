{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( n ) :\n    if ( n < 10 ) :\n        return ( n * ( n + 1 ) / 2 )\n    d = ( int ) ( math.log10 ( n ) )\n    a = [ 0 ] * ( d + 1 )\n    a [ 0 ] = 0\n    a [ 1 ] = 45\n    for i in range ( 2 , d + 1 ) :\n        a [ i ] = a [ i - 1 ] * 10 + 45 * ( int ) ( math.ceil ( math.pow ( 10 , i - 1 ) ) )\n    p = ( int ) ( math.ceil ( math.pow ( 10 , d ) ) )\n    msd = n // p\n    return ( int ) ( msd * a [ d ] + ( msd * ( msd - 1 ) // 2 ) * p + msd * ( 1 + n % p ) + f_gold ( n % p ) )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (29,),\n    (97,),\n    (71,),\n    (82,),\n    (69,),\n    (30,),\n    (82,),\n    (32,),\n    (77,),\n    (39,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def sumOfDigitsFrom1ToN ( n ) :\n    if ( n < 10 ) :\n        return ( n * ( n + 1 ) / 2 )\n    d = ( int ) ( math.log10 ( n ) )\n    a = [ 0 ] * ( d + 1 )\n    a [ 0 ] = 0\n    a [ 1 ] = 45\n    for i in range ( 2 , d + 1 ) :\n        a [ i ] = a [ i - 1 ] * 10 + 45 * ( int ) ( math.ceil ( math.pow ( 10 , i - 1 ) ) )\n    p = ( int ) ( math.ceil ( math.pow ( 10 , d ) ) )\n    msd = n // p\n    return ( int ) ( msd * a [ d ] + ( msd * ( msd - 1 ) // 2 ) * p + msd * ( 1 + n % p ) + sumOfDigitsFrom1ToN ( n % p ) )\n"}
###TOFILL