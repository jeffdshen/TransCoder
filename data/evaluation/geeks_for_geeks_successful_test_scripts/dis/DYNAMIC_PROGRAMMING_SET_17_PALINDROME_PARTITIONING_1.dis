{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport sys\n\ndef f_gold ( str1 ) :\n    n = len ( str1 ) ;\n    C = [ 0 ] * ( n + 1 ) ;\n    P = [ [ False for x in range ( n + 1 ) ] for y in range ( n + 1 ) ] ;\n    for i in range ( n ) :\n        P [ i ] [ i ] = True ;\n    for L in range ( 2 , n + 1 ) :\n        for i in range ( n - L + 1 ) :\n            j = i + L - 1 ;\n            if ( L == 2 ) :\n                P [ i ] [ j ] = ( str1 [ i ] == str1 [ j ] ) ;\n            else :\n                P [ i ] [ j ] = ( ( str1 [ i ] == str1 [ j ] ) and P [ i + 1 ] [ j - 1 ] ) ;\n    for i in range ( n ) :\n        if ( P [ 0 ] [ i ] == True ) :\n            C [ i ] = 0 ;\n        else :\n            C [ i ] = sys.maxsize ;\n            for j in range ( i ) :\n                if ( P [ j + 1 ] [ i ] == True and 1 + C [ j ] < C [ i ] ) :\n                    C [ i ] = 1 + C [ j ] ;\n    return C [ n - 1 ] ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('YYGWgYrovdsh',),\n    ('56109778',),\n    ('101',),\n    ('RxM',),\n    ('187546405',),\n    ('0110010',),\n    ('wVODAmgvI',),\n    ('56719',),\n    ('10100011001100',),\n    ('Wtpai',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def minPalPartion ( str1 ) :\n    n = len ( str1 ) ;\n    C = [ 0 ] * ( n + 1 ) ;\n    P = [ [ False for x in range ( n + 1 ) ] for y in range ( n + 1 ) ] ;\n    for i in range ( n ) :\n        P [ i ] [ i ] = True ;\n    for L in range ( 2 , n + 1 ) :\n        for i in range ( n - L + 1 ) :\n            j = i + L - 1 ;\n            if ( L == 2 ) :\n                P [ i ] [ j ] = ( str1 [ i ] == str1 [ j ] ) ;\n            else :\n                P [ i ] [ j ] = ( ( str1 [ i ] == str1 [ j ] ) and P [ i + 1 ] [ j - 1 ] ) ;\n    for i in range ( n ) :\n        if ( P [ 0 ] [ i ] == True ) :\n            C [ i ] = 0 ;\n        else :\n            C [ i ] = sys.maxsize ;\n            for j in range ( i ) :\n                if ( P [ j + 1 ] [ i ] == True and 1 + C [ j ] < C [ i ] ) :\n                    C [ i ] = 1 + C [ j ] ;\n    return C [ n - 1 ] ;\n"}
###TOFILL