{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    dp = [ [ 0 for i in range ( n + 1 ) ] for i in range ( 10 ) ]\n    for i in range ( 10 ) :\n        dp [ i ] [ 1 ] = 1\n    for digit in range ( 10 ) :\n        for len in range ( 2 , n + 1 ) :\n            for x in range ( digit + 1 ) :\n                dp [ digit ] [ len ] += dp [ x ] [ len - 1 ]\n    count = 0\n    for i in range ( 10 ) :\n        count += dp [ i ] [ n ]\n    return count\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (21,),\n    (40,),\n    (83,),\n    (93,),\n    (43,),\n    (98,),\n    (35,),\n    (86,),\n    (76,),\n    (88,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countNonDecreasing ( n ) :\n    dp = [ [ 0 for i in range ( n + 1 ) ] for i in range ( 10 ) ]\n    for i in range ( 10 ) :\n        dp [ i ] [ 1 ] = 1\n    for digit in range ( 10 ) :\n        for len in range ( 2 , n + 1 ) :\n            for x in range ( digit + 1 ) :\n                dp [ digit ] [ len ] += dp [ x ] [ len - 1 ]\n    count = 0\n    for i in range ( 10 ) :\n        count += dp [ i ] [ n ]\n    return count\n"}
###TOFILL