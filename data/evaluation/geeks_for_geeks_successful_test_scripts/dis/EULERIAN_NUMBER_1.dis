{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n , m ) :\n    dp = [ [ 0 for x in range ( m + 1 ) ] for y in range ( n + 1 ) ]\n    for i in range ( 1 , n + 1 ) :\n        for j in range ( 0 , m + 1 ) :\n            if ( i > j ) :\n                if ( j == 0 ) :\n                    dp [ i ] [ j ] = 1\n                else :\n                    dp [ i ] [ j ] = ( ( ( i - j ) * dp [ i - 1 ] [ j - 1 ] ) + ( ( j + 1 ) * dp [ i - 1 ] [ j ] ) )\n    return dp [ n ] [ m ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (27,7,),\n    (77,34,),\n    (35,22,),\n    (26,20,),\n    (6,10,),\n    (66,47,),\n    (44,29,),\n    (26,33,),\n    (74,86,),\n    (65,97,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def eulerian ( n , m ) :\n    dp = [ [ 0 for x in range ( m + 1 ) ] for y in range ( n + 1 ) ]\n    for i in range ( 1 , n + 1 ) :\n        for j in range ( 0 , m + 1 ) :\n            if ( i > j ) :\n                if ( j == 0 ) :\n                    dp [ i ] [ j ] = 1\n                else :\n                    dp [ i ] [ j ] = ( ( ( i - j ) * dp [ i - 1 ] [ j - 1 ] ) + ( ( j + 1 ) * dp [ i - 1 ] [ j ] ) )\n    return dp [ n ] [ m ]\n"}
###TOFILL