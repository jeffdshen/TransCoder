{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( a , b ) :\n    if ( a == b ) :\n        return a\n    if ( a == 0 ) :\n        return b\n    if ( b == 0 ) :\n        return a\n    if ( ( ~ a & 1 ) == 1 ) :\n        if ( ( b & 1 ) == 1 ) :\n            return f_gold ( a >> 1 , b )\n        else :\n            return ( f_gold ( a >> 1 , b >> 1 ) << 1 )\n    if ( ( ~ b & 1 ) == 1 ) :\n        return f_gold ( a , b >> 1 )\n    if ( a > b ) :\n        return f_gold ( ( a - b ) >> 1 , b )\n    return f_gold ( ( b - a ) >> 1 , a )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (52,29,),\n    (36,94,),\n    (12,6,),\n    (69,7,),\n    (45,11,),\n    (7,51,),\n    (45,55,),\n    (62,86,),\n    (96,63,),\n    (89,12,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def gcd ( a , b ) :\n    if ( a == b ) :\n        return a\n    if ( a == 0 ) :\n        return b\n    if ( b == 0 ) :\n        return a\n    if ( ( ~ a & 1 ) == 1 ) :\n        if ( ( b & 1 ) == 1 ) :\n            return gcd ( a >> 1 , b )\n        else :\n            return ( gcd ( a >> 1 , b >> 1 ) << 1 )\n    if ( ( ~ b & 1 ) == 1 ) :\n        return gcd ( a , b >> 1 )\n    if ( a > b ) :\n        return gcd ( ( a - b ) >> 1 , b )\n    return gcd ( ( b - a ) >> 1 , a )\n"}
###TOFILL