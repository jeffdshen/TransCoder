{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( f , d , s ) :\n    mem = [ [ 0 for i in range ( s + 1 ) ] for j in range ( d + 1 ) ]\n    mem [ 0 ] [ 0 ] = 1\n    for i in range ( 1 , d + 1 ) :\n        for j in range ( 1 , s + 1 ) :\n            mem [ i ] [ j ] = mem [ i ] [ j - 1 ] + mem [ i - 1 ] [ j - 1 ]\n            if j - f - 1 >= 0 :\n                mem [ i ] [ j ] -= mem [ i - 1 ] [ j - f - 1 ]\n    return mem [ d ] [ s ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (57,5,33,),\n    (58,45,4,),\n    (38,89,9,),\n    (5,39,30,),\n    (91,90,47,),\n    (76,56,46,),\n    (38,43,84,),\n    (97,26,52,),\n    (97,90,90,),\n    (99,2,26,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findWays ( f , d , s ) :\n    mem = [ [ 0 for i in range ( s + 1 ) ] for j in range ( d + 1 ) ]\n    mem [ 0 ] [ 0 ] = 1\n    for i in range ( 1 , d + 1 ) :\n        for j in range ( 1 , s + 1 ) :\n            mem [ i ] [ j ] = mem [ i ] [ j - 1 ] + mem [ i - 1 ] [ j - 1 ]\n            if j - f - 1 >= 0 :\n                mem [ i ] [ j ] -= mem [ i - 1 ] [ j - f - 1 ]\n    return mem [ d ] [ s ]\n"}
###TOFILL