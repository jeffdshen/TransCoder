{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    SubsetSum_1 = 0\n    SubsetSum_2 = 0\n    for i in range ( 0 , n ) :\n        isSingleOccurance = True\n        for j in range ( i + 1 , n ) :\n            if ( arr [ i ] == arr [ j ] ) :\n                isSingleOccurance = False\n                arr [ i ] = arr [ j ] = 0\n                break\n        if ( isSingleOccurance == True ) :\n            if ( arr [ i ] > 0 ) :\n                SubsetSum_1 += arr [ i ]\n            else :\n                SubsetSum_2 += arr [ i ]\n    return abs ( SubsetSum_1 - SubsetSum_2 )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([5, 14, 15, 21, 42, 42, 42, 46, 46, 48, 48, 48, 52, 52, 53, 60, 62, 69, 69, 79, 82, 86, 96],15,),\n    ([-54, 4, -22, 94, 58, -28, -12, 84, 64, 4, -34, 16, -10, -32, 50, -78, 68, -52, -64, 66, 64, -28, -38, -18, -84, -66, -36, 64, -12, 44, 48, 8, 42],28,),\n    ([0, 0, 0, 1],2,),\n    ([63, 49, 18, 36, 21, 30, 45, 87],6,),\n    ([-96, -78, -78, -72, -62, -56, -52, -44, -38, -38, -28, -22, -20, -12, -6, -6, -2, 2, 2, 4, 36, 44, 46, 50, 50, 54, 66, 92],18,),\n    ([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0],34,),\n    ([1, 2, 8, 12, 13, 13, 14, 17, 18, 27, 28, 31, 34, 37, 38, 42, 43, 45, 49, 52, 53, 56, 56, 58, 62, 66, 71, 74, 87, 93, 96, 99],25,),\n    ([30, -28, -30, 86, -8, -80, 76, -2, 28, 30, 82, 84, -32, 82, -88, -24, 42, 16, -32, -8, 78, -8, -46, -6, -86, -86, -24, -12, -32, -72, 84, -82, 76, -84, 80, -50, 90, -50, -14, -82, 78, 48, -10, 86, 34, -20, -76, 58],28,),\n    ([0, 1],1,),\n    ([83, 86, 57, 18, 98, 52, 1, 37, 11, 49, 10, 67, 2, 60, 30, 42, 8, 97, 25, 55, 5, 75, 9, 67],16,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxDiff ( arr , n ) :\n    SubsetSum_1 = 0\n    SubsetSum_2 = 0\n    for i in range ( 0 , n ) :\n        isSingleOccurance = True\n        for j in range ( i + 1 , n ) :\n            if ( arr [ i ] == arr [ j ] ) :\n                isSingleOccurance = False\n                arr [ i ] = arr [ j ] = 0\n                break\n        if ( isSingleOccurance == True ) :\n            if ( arr [ i ] > 0 ) :\n                SubsetSum_1 += arr [ i ]\n            else :\n                SubsetSum_2 += arr [ i ]\n    return abs ( SubsetSum_1 - SubsetSum_2 )\n"}
###TOFILL