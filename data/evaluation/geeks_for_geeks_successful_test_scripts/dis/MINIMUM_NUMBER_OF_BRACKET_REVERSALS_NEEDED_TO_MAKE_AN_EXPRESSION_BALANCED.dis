{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( expr ) :\n    lenn = len ( expr )\n    if ( lenn % 2 ) :\n        return - 1\n    s = [ ]\n    for i in range ( lenn ) :\n        if ( expr [ i ] == '' and len ( s ) ) :\n            if ( s [ 0 ] == '' ) :\n                s.pop ( 0 )\n            else :\n                s.insert ( 0 , expr [ i ] )\n        else :\n            s.insert ( 0 , expr [ i ] )\n    red_len = len ( s )\n    n = 0\n    while ( len ( s ) and s [ 0 ] == '' ) :\n        s.pop ( 0 )\n        n += 1\n    return ( red_len // 2 + n % 2 )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('}{',),\n    ('{{{',),\n    ('{{{{',),\n    ('{{{{}}',),\n    ('}{{}}{{{',),\n    ('{}',),\n    ('',),\n    ('8',),\n    ('01111000',),\n    ('XPkERzHcpId',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countMinReversals ( expr ) :\n    lenn = len ( expr )\n    if ( lenn % 2 ) :\n        return - 1\n    s = [ ]\n    for i in range ( lenn ) :\n        if ( expr [ i ] == '' and len ( s ) ) :\n            if ( s [ 0 ] == '' ) :\n                s.pop ( 0 )\n            else :\n                s.insert ( 0 , expr [ i ] )\n        else :\n            s.insert ( 0 , expr [ i ] )\n    red_len = len ( s )\n    n = 0\n    while ( len ( s ) and s [ 0 ] == '' ) :\n        s.pop ( 0 )\n        n += 1\n    return ( red_len // 2 + n % 2 )\n"}
###TOFILL