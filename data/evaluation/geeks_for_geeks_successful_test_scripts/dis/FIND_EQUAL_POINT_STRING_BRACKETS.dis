{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( str ) :\n    l = len ( str )\n    open = [ None ] * ( l + 1 )\n    close = [ None ] * ( l + 1 )\n    index = - 1\n    open [ 0 ] = 0\n    close [ l ] = 0\n    if ( str [ 0 ] == '(' ) :\n        open [ 1 ] = 1\n    if ( str [ l - 1 ] == ')' ) :\n        close [ l - 1 ] = 1\n    for i in range ( 1 , l ) :\n        if ( str [ i ] == '(' ) :\n            open [ i + 1 ] = open [ i ] + 1\n        else :\n            open [ i + 1 ] = open [ i ]\n    for i in range ( l - 2 , - 1 , - 1 ) :\n        if ( str [ i ] == ')' ) :\n            close [ i ] = close [ i + 1 ] + 1\n        else :\n            close [ i ] = close [ i + 1 ]\n    if ( open [ l ] == 0 ) :\n        return len\n    if ( close [ 0 ] == 0 ) :\n        return 0\n    for i in range ( l + 1 ) :\n        if ( open [ i ] == close [ i ] ) :\n            index = i\n    return index\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (\"(())))(\",),\n    (\"))\",),\n    (\"((\",),\n    (\"))(()(()()(\",),\n    (\")((()(()\",),\n    (\"))(()\",),\n    (\"()))\",),\n    (\"()\",),\n    ('1100110',),\n    ('dhfSnebD',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findIndex ( str ) :\n    l = len ( str )\n    open = [ None ] * ( l + 1 )\n    close = [ None ] * ( l + 1 )\n    index = - 1\n    open [ 0 ] = 0\n    close [ l ] = 0\n    if ( str [ 0 ] == '(' ) :\n        open [ 1 ] = 1\n    if ( str [ l - 1 ] == ')' ) :\n        close [ l - 1 ] = 1\n    for i in range ( 1 , l ) :\n        if ( str [ i ] == '(' ) :\n            open [ i + 1 ] = open [ i ] + 1\n        else :\n            open [ i + 1 ] = open [ i ]\n    for i in range ( l - 2 , - 1 , - 1 ) :\n        if ( str [ i ] == ')' ) :\n            close [ i ] = close [ i + 1 ] + 1\n        else :\n            close [ i ] = close [ i + 1 ]\n    if ( open [ l ] == 0 ) :\n        return len\n    if ( close [ 0 ] == 0 ) :\n        return 0\n    for i in range ( l + 1 ) :\n        if ( open [ i ] == close [ i ] ) :\n            index = i\n    return index\n"}
###TOFILL