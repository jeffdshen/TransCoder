{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( N ) :\n    length = len ( N )\n    l = int ( ( length ) / 2 )\n    count = 0\n    for i in range ( l + 1 ) :\n        s = N [ 0 : 0 + i ]\n        l1 = len ( s )\n        t = N [ i : l1 + i ]\n        try :\n            if s [ 0 ] == '0' or t [ 0 ] == '0' :\n                continue\n        except :\n            continue\n        if s == t :\n            count += 1\n    return count\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('ZCoQhuM',),\n    ('2674377254',),\n    ('11',),\n    ('LbuGlvRyWAPBpo',),\n    ('26382426486138',),\n    ('111010111010',),\n    ('hUInqJXNdbfP',),\n    ('5191',),\n    ('1110101101',),\n    ('2202200',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def calculate ( N ) :\n    length = len ( N )\n    l = int ( ( length ) / 2 )\n    count = 0\n    for i in range ( l + 1 ) :\n        s = N [ 0 : 0 + i ]\n        l1 = len ( s )\n        t = N [ i : l1 + i ]\n        try :\n            if s [ 0 ] == '0' or t [ 0 ] == '0' :\n                continue\n        except :\n            continue\n        if s == t :\n            count += 1\n    return count\n"}
###TOFILL