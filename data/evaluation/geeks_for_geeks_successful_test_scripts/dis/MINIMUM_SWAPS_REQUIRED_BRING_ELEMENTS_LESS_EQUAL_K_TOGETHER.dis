{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , k ) :\n    count = 0\n    for i in range ( 0 , n ) :\n        if ( arr [ i ] <= k ) :\n            count = count + 1\n    bad = 0\n    for i in range ( 0 , count ) :\n        if ( arr [ i ] > k ) :\n            bad = bad + 1\n    ans = bad\n    j = count\n    for i in range ( 0 , n ) :\n        if ( j == n ) :\n            break\n        if ( arr [ i ] > k ) :\n            bad = bad - 1\n        if ( arr [ j ] > k ) :\n            bad = bad + 1\n        ans = min ( ans , bad )\n        j = j + 1\n    return ans\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([7, 12, 15, 30, 33, 34, 53, 66, 73, 74, 76, 77, 85, 90],9,8,),\n    ([-62, -20, -26, -24, 92, 66, -74, -4, 18, -82, -36, 92, -4, 92, -80, 56, -24, 4, -48, -10, -14, -46, -16, -58, -58, -6, -68, -22, -82, -16, 76, -30, -86, -38, -66, 28, 58, 30, -44, -56],24,28,),\n    ([0, 0, 0, 0, 0, 1, 1],5,6,),\n    ([8, 48, 64, 77, 61, 60, 96, 95, 41, 68, 9, 67, 10, 66, 16, 59, 83, 21, 47, 16, 13, 85, 52, 11, 48, 31, 99, 57, 57, 44, 66, 93, 80, 69, 23, 2, 55, 90],36,24,),\n    ([-80, -58, -40, -34, 14, 36, 48, 56, 58, 60, 84, 90, 92, 92],7,8,),\n    ([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1],26,23,),\n    ([4, 4, 8, 9, 13, 17, 18, 19, 21, 22, 22, 23, 27, 28, 30, 44, 46, 48, 53, 53, 55, 60, 61, 62, 68, 70, 70, 71, 73, 80, 82, 82, 85, 88, 90, 93, 99],28,36,),\n    ([-28, 50, 82, -32, 32, -78, 12, 50, 38, 34, -10, 6, 86, -56, -2],13,9,),\n    ([0, 0, 0, 0, 1, 1, 1, 1, 1, 1],9,8,),\n    ([37, 88, 83, 91, 11, 39, 98, 70, 93, 74, 24, 90, 66, 3, 6, 28],12,12,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def minSwap ( arr , n , k ) :\n    count = 0\n    for i in range ( 0 , n ) :\n        if ( arr [ i ] <= k ) :\n            count = count + 1\n    bad = 0\n    for i in range ( 0 , count ) :\n        if ( arr [ i ] > k ) :\n            bad = bad + 1\n    ans = bad\n    j = count\n    for i in range ( 0 , n ) :\n        if ( j == n ) :\n            break\n        if ( arr [ i ] > k ) :\n            bad = bad - 1\n        if ( arr [ j ] > k ) :\n            bad = bad + 1\n        ans = min ( ans , bad )\n        j = j + 1\n    return ans\n"}
###TOFILL