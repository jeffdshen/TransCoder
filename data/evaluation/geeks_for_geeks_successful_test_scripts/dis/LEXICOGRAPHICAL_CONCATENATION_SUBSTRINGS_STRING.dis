{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( s ) :\n    n = len ( s ) ;\n    sub_count = ( n * ( n + 1 ) ) // 2 ;\n    arr = [ 0 ] * sub_count ;\n    index = 0 ;\n    for i in range ( n ) :\n        for j in range ( 1 , n - i + 1 ) :\n            arr [ index ] = s [ i : i + j ] ;\n            index += 1 ;\n    arr.sort ( ) ;\n    res = \"\" ;\n    for i in range ( sub_count ) :\n        res += arr [ i ] ;\n    return res ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('sqGOi',),\n    ('848580',),\n    ('01001110011001',),\n    ('ZhWXUKmeiI',),\n    ('0917296541285',),\n    ('01101001111100',),\n    ('tjP kR',),\n    ('999907',),\n    ('011100',),\n    ('qJPHNSJOUj',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def lexicographicSubConcat ( s ) :\n    n = len ( s ) ;\n    sub_count = ( n * ( n + 1 ) ) // 2 ;\n    arr = [ 0 ] * sub_count ;\n    index = 0 ;\n    for i in range ( n ) :\n        for j in range ( 1 , n - i + 1 ) :\n            arr [ index ] = s [ i : i + j ] ;\n            index += 1 ;\n    arr.sort ( ) ;\n    res = \"\" ;\n    for i in range ( sub_count ) :\n        res += arr [ i ] ;\n    return res ;\n"}
###TOFILL