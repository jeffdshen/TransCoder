{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( m , n , x ) :\n    table = [ [ 0 ] * ( x + 1 ) for i in range ( n + 1 ) ]\n    for j in range ( 1 , min ( m + 1 , x + 1 ) ) :\n        table [ 1 ] [ j ] = 1\n    for i in range ( 2 , n + 1 ) :\n        for j in range ( 1 , x + 1 ) :\n            for k in range ( 1 , min ( m + 1 , j ) ) :\n                table [ i ] [ j ] += table [ i - 1 ] [ j - k ]\n    return table [ - 1 ] [ - 1 ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (94,4,69,),\n    (7,12,33,),\n    (20,44,24,),\n    (90,94,88,),\n    (50,58,27,),\n    (32,90,29,),\n    (46,25,6,),\n    (82,50,87,),\n    (43,82,70,),\n    (6,83,19,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findWays ( m , n , x ) :\n    table = [ [ 0 ] * ( x + 1 ) for i in range ( n + 1 ) ]\n    for j in range ( 1 , min ( m + 1 , x + 1 ) ) :\n        table [ 1 ] [ j ] = 1\n    for i in range ( 2 , n + 1 ) :\n        for j in range ( 1 , x + 1 ) :\n            for k in range ( 1 , min ( m + 1 , j ) ) :\n                table [ i ] [ j ] += table [ i - 1 ] [ j - k ]\n    return table [ - 1 ] [ - 1 ]\n"}
###TOFILL