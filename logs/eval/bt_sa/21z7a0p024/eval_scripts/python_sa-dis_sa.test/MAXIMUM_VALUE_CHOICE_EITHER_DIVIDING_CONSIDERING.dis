{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    res = list ( )\n    res.append ( 0 )\n    res.append ( 1 )\n    i = 2\n    while i < n + 1 :\n        res.append ( max ( i , ( res [ int ( i / 2 ) ] + res [ int ( i / 3 ) ] + res [ int ( i / 4 ) ] + res [ int ( i / 5 ) ] ) ) )\n        i = i + 1\n    return res [ n ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (3,),\n    (19,),\n    (39,),\n    (89,),\n    (96,),\n    (68,),\n    (48,),\n    (5,),\n    (3,),\n    (4,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxDP ( n ) :\n    res = list ( )\n    res.append ( 0 )\n    res.append ( 1 )\n    i = 2\n    while i < n + 1 :\n        res.append ( max ( i , ( res [ int ( i / 2 ) ] + res [ int ( i / 3 ) ] + res [ int ( i / 4 ) ] + res [ int ( i / 5 ) ] ) ) )\n        i = i + 1\n    return res [ n ]\n"}
Disassembly of <code object maxDP at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( list )
2 CALL_FUNCTION 0
4 STORE_FAST 1 ( res )

3 6 LOAD_FAST 1 ( res )
8 LOAD_METHOD 1 ( append )
10 LOAD_CONST 1 ( 0 )
12 CALL_METHOD 1
14 POP_TOP

4 16 SETUP_LOOP 64 ( to 78 )
18 LOAD_FAST 0 ( n )
20 GET_ITER
>> 22 FOR_ITER 64 ( to 76 )
24 STORE_FAST 2 ( i )

5 26 LOAD_FAST 1 ( res )
28 LOAD_METHOD 2 ( append )
30 LOAD_GLOBAL 3 ( max )
32 LOAD_FAST 2 ( i )
34 CALL_FUNCTION 1
36 CALL_METHOD 1
38 POP_TOP

6 40 LOAD_FAST 1 ( res )
42 LOAD_METHOD 4 ( append )
44 LOAD_GLOBAL 3 ( max )
46 LOAD_FAST 2 ( i )
48 CALL_FUNCTION 1
50 CALL_METHOD 1
52 POP_TOP

7 54 LOAD_FAST 1 ( res )
56 LOAD_METHOD 5 ( append )
58 LOAD_GLOBAL 3 ( max )
60 LOAD_FAST 2 ( i )
62 CALL_FUNCTION 1
64 CALL_METHOD 1
66 POP_TOP

8 68 LOAD_FAST 1 ( res )
70 LOAD_METHOD 6 ( append )
72 LOAD_GLOBAL 3 ( max )
74 LOAD_FAST 2 ( i )
76 CALL_FUNCTION 1
78 CALL_METHOD 1
80 POP_TOP

9 82 LOAD_FAST 1 ( res )
84 LOAD_METHOD 7 ( append )
86 LOAD_GLOBAL 3 ( max )
88 LOAD_FAST 2 ( i )
90 CALL_FUNCTION 1
92 CALL_METHOD 1
94 POP_TOP
96 JUMP_ABSOLUTE 22
>> 98 POP_BLOCK
>> 100 JUMP_ABSOLUTE 22
>> 102 POP_BLOCK

10 >> 104 LOAD_FAST 1 ( res )
106 RETURN_VALUE
