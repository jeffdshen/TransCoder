{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    count = 0 ;\n    curr = 19 ;\n    while ( True ) :\n        sum = 0 ;\n        x = curr ;\n        while ( x > 0 ) :\n            sum = sum + x % 10 ;\n            x = int ( x / 10 ) ;\n        if ( sum == 10 ) :\n            count += 1 ;\n        if ( count == n ) :\n            return curr ;\n        curr += 9 ;\n    return - 1 ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (93,),\n    (10,),\n    (55,),\n    (94,),\n    (2,),\n    (5,),\n    (37,),\n    (4,),\n    (11,),\n    (46,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findNth ( n ) :\n    count = 0 ;\n    curr = 19 ;\n    while ( True ) :\n        sum = 0 ;\n        x = curr ;\n        while ( x > 0 ) :\n            sum = sum + x % 10 ;\n            x = int ( x / 10 ) ;\n        if ( sum == 10 ) :\n            count += 1 ;\n        if ( count == n ) :\n            return curr ;\n        curr += 9 ;\n    return - 1 ;\n"}
Disassembly of <code object findNth at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( count )

3 4 LOAD_CONST 2 ( 19 )
6 STORE_FAST 2 ( curr )

4 8 LOAD_CONST 3 ( 19 )
10 STORE_FAST 3 ( curr )

5 12 SETUP_LOOP 64 ( to 78 )
14 LOAD_FAST 0 ( n )
16 GET_ITER
>> 18 FOR_ITER 64 ( to 76 )
20 STORE_FAST 4 ( x )

6 22 LOAD_FAST 1 ( count )
24 LOAD_CONST 4 ( 10 )
26 COMPARE_OP 4 ( > )
28 POP_JUMP_IF_FALSE 42

7 30 LOAD_FAST 1 ( count )
32 LOAD_CONST 5 ( 1 )
34 INPLACE_ADD
36 STORE_FAST 1 ( count )

8 38 LOAD_FAST 1 ( count )
40 LOAD_CONST 6 ( 10 )
42 INPLACE_ADD
44 STORE_FAST 1 ( count )

9 >> 46 LOAD_FAST 1 ( count )
48 LOAD_CONST 7 ( 10 )
50 COMPARE_OP 4 ( > )
52 POP_JUMP_IF_FALSE 18

10 54 LOAD_FAST 1 ( count )
56 LOAD_CONST 8 ( 1 )
58 INPLACE_ADD
60 STORE_FAST 1 ( count )

11 62 LOAD_FAST 1 ( count )
64 LOAD_CONST 9 ( 0 )
66 COMPARE_OP 4 ( > )
68 POP_JUMP_IF_FALSE 18

12 70 LOAD_FAST 1 ( count )
72 LOAD_CONST 10 ( 10 )
74 INPLACE_ADD
76 STORE_FAST 1 ( count )
78 JUMP_ABSOLUTE 18
>> 80 POP_BLOCK

13 >> 82 LOAD_FAST 1 ( count )
84 LOAD_CONST 11 ( 10 )
86 COMPARE_OP 4 ( > )
88 POP_JUMP_IF_FALSE 120

14 90 LOAD_FAST 1 ( count )
92 LOAD_CONST 12 ( 10 )
94 INPLACE_ADD
96 STORE_FAST 1 ( count )

15 98 LOAD_FAST 1 ( count )
100 LOAD_CONST 13 ( 10 )
102 COMPARE_OP 4 ( > )
104 POP_JUMP_IF_FALSE 120

16 106 LOAD_FAST 1 ( count )
108 LOAD_CONST 13 ( 10 )
110 INPLACE_ADD
112 STORE_FAST 1 ( count )

17 >> 114 LOAD_FAST 1 ( count )
116 LOAD_CONST 14 ( 10 )
118 COMPARE_OP 4 ( > )
120 POP_JUMP_IF_FALSE 126

18 122 LOAD_FAST 1 ( count )
124 LOAD_CONST 15 ( 10 )
126 INPLACE_ADD
128 STORE_FAST 1 ( count )

19 130 LOAD_FAST 1 ( count )
132 LOAD_CONST 16 ( 10 )
134 INPLACE_ADD
136 STORE_FAST 1 ( count )

20 >> 138 LOAD_FAST 1 ( count )
140 RETURN_VALUE
