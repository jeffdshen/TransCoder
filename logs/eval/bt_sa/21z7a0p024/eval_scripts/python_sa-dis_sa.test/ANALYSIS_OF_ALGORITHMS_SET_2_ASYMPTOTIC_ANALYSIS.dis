{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , x ) :\n    i = 0\n    for i in range ( i , n ) :\n        if ( arr [ i ] == x ) :\n            return i\n    return - 1\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([4, 5, 5, 11, 13, 14, 15, 19, 22, 22, 23, 26, 29, 29, 36, 44, 48, 49, 65, 65, 67, 68, 70, 76, 79, 79, 81, 85, 88, 91, 91, 92, 92, 97],17,5,),\n    ([-24, -78, -32, -48, 0, 4, -42],4,0,),\n    ([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],6,0,),\n    ([38, 14, 75, 16, 91, 11, 98, 43, 67, 9, 21, 10, 82, 72, 32, 81, 48, 60, 2, 91, 10, 90, 12, 83],17,75,),\n    ([-92, -92, -82, -80, -76, -66, -64, -64, -56, -48, -38, -38, -34, -32, -32, -10, -8, -6, -2, 0, 8, 10, 18, 20, 22, 22, 30, 34, 38, 38, 38, 44, 50, 52, 56, 64, 64, 66, 70, 76, 88],25,25,),\n    ([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1],11,-1,),\n    ([1, 4, 4, 4, 4, 8, 12, 13, 14, 14, 22, 25, 25, 27, 29, 33, 36, 38, 40, 40, 40, 41, 47, 47, 47, 48, 48, 50, 51, 52, 52, 52, 55, 56, 59, 59, 62, 64, 66, 77, 82, 84, 90, 91, 91, 93],38,4,),\n    ([-90, -60, -58, -72, 92, 54, -32, -70, -94, 18, 64, -90, -90, -56, 82, -14, -74, -96, -90, -8, -48, 76, -28, 10, -52, -8, -46, -32, 82, 46, 58, 92, 4, 48, -96, -66, 60, 60, 62, -68],22,22,),\n    ([0, 0, 0, 0, 0, 0, 1, 1, 1, 1],8,8,),\n    ([42, 17, 77, 96, 72, 36, 74, 97, 7, 94, 80, 7, 27, 58, 49, 81, 51, 9],16,11,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def search ( arr , n , x ) :\n    i = 0\n    for i in range ( i , n ) :\n        if ( arr [ i ] == x ) :\n            return i\n    return - 1\n"}
Disassembly of <code object search at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 2 ( i )

3 4 SETUP_LOOP 64 ( to 66 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_FAST 1 ( n )
10 LOAD_FAST 2 ( i )
12 CALL_FUNCTION 2
14 GET_ITER
>> 16 FOR_ITER 48 ( to 64 )
18 STORE_FAST 3 ( i )

4 20 LOAD_FAST 0 ( arr )
22 LOAD_FAST 3 ( i )
24 BINARY_SUBSCR
26 LOAD_FAST 1 ( n )
28 COMPARE_OP 2 ( == )
30 POP_JUMP_IF_FALSE 16

5 32 LOAD_FAST 2 ( i )
34 RETURN_VALUE
36 JUMP_ABSOLUTE 16
>> 38 POP_BLOCK

6 >> 40 LOAD_FAST 2 ( i )
42 RETURN_VALUE
