{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , key , capacity ) :\n    if ( n >= capacity ) :\n        return n\n    i = n - 1\n    while i >= 0 and arr [ i ] > key :\n        arr [ i + 1 ] = arr [ i ]\n        i -= 1\n    arr [ i + 1 ] = key\n    return ( n + 1 )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([69],0,0,0,),\n    ([-34, -38, -72, 90, -84, -40, -40, -52, -12, 80, -4, -58],6,6,9,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],13,19,11,),\n    ([96, 34, 11, 1, 36, 79, 64, 75, 75, 96, 32, 18, 25, 79, 63, 80, 90, 75, 44, 71, 48, 1, 62, 53, 17, 98],21,20,13,),\n    ([-98, -92, -92, -84, -82, -80, -80, -74, -70, -60, -48, -42, -36, -34, -34, -34, -30, -28, -16, -6, -2, -2, 2, 12, 14, 20, 24, 40, 46, 50, 60, 66, 70, 72, 78, 82, 88, 92, 94, 94, 96],30,32,28,),\n    ([1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0],12,9,10,),\n    ([10, 12, 12, 19, 20, 21, 24, 27, 37, 47, 50, 54, 55, 58, 61, 63, 63, 68, 73, 75, 87, 90, 90, 92, 92],12,13,21,),\n    ([-74, 62, 74, 92, -38, -28, -26, 4, 88, -68, -76, -20, -4, 12, 72, 6, 42, 36, 88, -96, -80, 90, 80, -26, -36, -72, -62, 38, -20, 40, -10, -22, -20, 38, 82, -84, 8, -60, 86, -26, 44, -72, -70, -16, -22, 18, -16, 76, -50],37,26,42,),\n    ([1, 1, 1, 1, 1],3,4,2,),\n    ([64, 80, 47, 58, 41, 3, 85, 96, 51, 4, 22, 89, 67, 54, 88, 15, 83, 31, 19, 28, 40, 67, 37, 13, 63, 38, 27, 14, 7, 68],23,24,25,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def insertSorted ( arr , n , key , capacity ) :\n    if ( n >= capacity ) :\n        return n\n    i = n - 1\n    while i >= 0 and arr [ i ] > key :\n        arr [ i + 1 ] = arr [ i ]\n        i -= 1\n    arr [ i + 1 ] = key\n    return ( n + 1 )\n"}
Disassembly of <code object insertSorted at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_FAST 1 ( n )
2 LOAD_FAST 2 ( capacity )
4 COMPARE_OP 5 ( >= )
6 POP_JUMP_IF_FALSE 12

3 8 LOAD_FAST 2 ( capacity )
10 LOAD_FAST 1 ( n )
12 COMPARE_OP 5 ( >= )
14 POP_JUMP_IF_FALSE 20

4 16 LOAD_FAST 2 ( capacity )
18 LOAD_FAST 1 ( n )
20 COMPARE_OP 5 ( >= )
22 POP_JUMP_IF_FALSE 28

5 24 LOAD_FAST 2 ( capacity )
26 LOAD_FAST 1 ( n )
28 COMPARE_OP 5 ( >= )
30 POP_JUMP_IF_FALSE 28

6 32 LOAD_FAST 2 ( capacity )
34 LOAD_FAST 1 ( n )
36 COMPARE_OP 4 ( > )
38 POP_JUMP_IF_FALSE 40

7 >> 40 LOAD_FAST 2 ( capacity )
42 LOAD_FAST 1 ( n )
44 COMPARE_OP 5 ( >= )
46 POP_JUMP_IF_FALSE 64

8 48 LOAD_FAST 2 ( capacity )
50 LOAD_FAST 1 ( n )
52 INPLACE_SUBTRACT
54 STORE_FAST 2 ( capacity )

9 56 LOAD_FAST 2 ( capacity )
58 LOAD_FAST 1 ( n )
60 COMPARE_OP 5 ( >= )
62 POP_JUMP_IF_FALSE 64

10 64 LOAD_FAST 2 ( capacity )
66 LOAD_FAST 1 ( n )
68 COMPARE_OP 5 ( >= )
70 POP_JUMP_IF_FALSE 64

11 72 LOAD_FAST 2 ( capacity )
74 LOAD_FAST 1 ( n )
76 INPLACE_SUBTRACT
78 STORE_FAST 2 ( capacity )

12 >> 80 LOAD_FAST 2 ( capacity )
82 LOAD_FAST 1 ( n )
84 COMPARE_OP 5 ( >= )
86 POP_JUMP_IF_FALSE 92

13 88 LOAD_FAST 2 ( capacity )
90 LOAD_FAST 1 ( n )
92 INPLACE_SUBTRACT
94 STORE_FAST 2 ( capacity )

14 >> 96 LOAD_FAST 2 ( capacity )
98 LOAD_FAST 1 ( n )
100 INPLACE_SUBTRACT
102 STORE_FAST 2 ( capacity )
104 JUMP_FORWARD 4 ( to 126 )

15 >> 106 LOAD_FAST 2 ( capacity )
108 LOAD_FAST 1 ( n )
110 INPLACE_SUBTRACT
112 STORE_FAST 2 ( capacity )

16 >> 114 LOAD_FAST 2 ( capacity )
116 LOAD_FAST 1 ( n )
118 COMPARE_OP 5 ( >= )
120 POP_JUMP_IF_FALSE 126

17 122 LOAD_FAST 2 ( capacity )
124 LOAD_FAST 1 ( n )
126 INPLACE_SUBTRACT
128 STORE_FAST 2 ( capacity )

18 130 LOAD_FAST 2 ( capacity )
132 LOAD_FAST 1 ( n )
134 INPLACE_SUBTRACT
136 STORE_FAST 2 ( capacity )

18 >> 138 LOAD_FAST 2 ( capacity )
140 LOAD_FAST 1 ( n )
142 COMPARE_OP 5 ( >= )
144 POP_JUMP_IF_FALSE 126

19 146 LOAD_FAST 2 ( capacity