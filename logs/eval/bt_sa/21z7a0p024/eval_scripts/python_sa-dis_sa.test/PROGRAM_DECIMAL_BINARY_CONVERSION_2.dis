{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( N ) :\n    B_Number = 0\n    cnt = 0\n    while ( N != 0 ) :\n        rem = N % 2\n        c = pow ( 10 , cnt )\n        B_Number += rem * c\n        N //= 2\n        cnt += 1\n    return B_Number\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (18,),\n    (92,),\n    (87,),\n    (50,),\n    (56,),\n    (88,),\n    (3,),\n    (16,),\n    (45,),\n    (58,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def decimalToBinary ( N ) :\n    B_Number = 0\n    cnt = 0\n    while ( N != 0 ) :\n        rem = N % 2\n        c = pow ( 10 , cnt )\n        B_Number += rem * c\n        N //= 2\n        cnt += 1\n    return B_Number\n"}
Disassembly of <code object decimalToBinary at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( B_Number )

3 4 LOAD_CONST 1 ( 0 )
6 STORE_FAST 2 ( cnt )

4 8 SETUP_LOOP 64 ( to 76 )
10 LOAD_GLOBAL 0 ( range )
12 LOAD_CONST 2 ( 1 )
14 LOAD_FAST 0 ( N )
16 CALL_FUNCTION 2
18 GET_ITER
>> 20 FOR_ITER 64 ( to 74 )
22 STORE_FAST 3 ( c )

5 24 LOAD_FAST 3 ( c )
26 LOAD_CONST 3 ( 1 )
28 INPLACE_ADD
30 STORE_FAST 3 ( c )

6 32 LOAD_FAST 1 ( B_Number )
34 LOAD_FAST 3 ( c )
36 INPLACE_ADD
38 STORE_FAST 1 ( B_Number )

7 40 LOAD_FAST 1 ( B_Number )
42 LOAD_FAST 3 ( c )
44 INPLACE_ADD
46 STORE_FAST 1 ( B_Number )

8 48 LOAD_FAST 1 ( B_Number )
50 LOAD_FAST 3 ( c )
52 INPLACE_ADD
54 STORE_FAST 1 ( B_Number )

9 56 LOAD_FAST 1 ( B_Number )
58 LOAD_FAST 3 ( c )
60 INPLACE_ADD
62 STORE_FAST 1 ( B_Number )

10 64 LOAD_FAST 1 ( B_Number )
66 LOAD_FAST 3 ( c )
68 INPLACE_ADD
70 STORE_FAST 1 ( B_Number )
72 JUMP_ABSOLUTE 20
>> 74 POP_BLOCK

11 >> 76 LOAD_FAST 1 ( B_Number )
78 LOAD_FAST 2 ( cnt )
80 INPLACE_ADD
82 STORE_FAST 1 ( B_Number )

12 84 LOAD_FAST 1 ( B_Number )
86 LOAD_FAST 3 ( c )
88 INPLACE_ADD
90 STORE_FAST 1 ( B_Number )

13 92 LOAD_FAST 1 ( B_Number )
94 LOAD_FAST 3 ( c )
96 INPLACE_ADD
98 STORE_FAST 1 ( B_Number )

14 100 LOAD_FAST 1 ( B_Number )
102 LOAD_FAST 3 ( c )
104 INPLACE_ADD
106 STORE_FAST 1 ( B_Number )

15 108 LOAD_FAST 1 ( B_Number )
110 LOAD_FAST 2 ( cnt )
112 INPLACE_ADD
114 STORE_FAST 1 ( B_Number )

16 116 LOAD_FAST 1 ( B_Number )
118 LOAD_FAST 2 ( cnt )
120 INPLACE_ADD
122 STORE_FAST 1 ( B_Number )

17 124 LOAD_FAST 1 ( B_Number )
126 LOAD_FAST 2 ( cnt )
128 INPLACE_ADD
130 STORE_FAST 1 ( B_Number )

18 132 LOAD_FAST 1 ( B_Number )
134 LOAD_FAST 2 ( cnt )
136 INPLACE_ADD
138 STORE_FAST 1 ( B_Number )

19 140 LOAD_FAST 1 ( B_Number )
142 RETURN_VALUE
