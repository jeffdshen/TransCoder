{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( a , n ) :\n    return ( - 1 + int ( math.sqrt ( 1 + ( 8 * n ) ) ) ) // 2\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([1, 2, 2, 3, 5, 6, 7, 8, 8, 12, 15, 16, 18, 18, 20, 21, 21, 22, 22, 24, 24, 25, 30, 35, 42, 49, 52, 55, 55, 63, 68, 70, 72, 73, 77, 80, 83, 87, 87, 88, 88, 94, 95, 97],22,),\n    ([48, -72, 84, -24, 28, 94, 36, 28, 32, 66, -62, 64, 6, -68, -12, 46, 4, 98, 18, 86, -60, 76, 14, 98],12,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],25,),\n    ([11, 16, 84, 8, 86, 44, 79, 11, 73, 12, 29, 62, 22, 44, 28, 8, 48, 92, 73, 63, 59, 44, 95, 66],14,),\n    ([-94, -94, -92, -88, -86, -82, -80, -80, -78, -76, -56, -56, -50, -44, -42, -36, -36, -32, -32, -26, -14, -12, -6, 12, 24, 28, 34, 38, 42, 42, 46, 50, 56, 62, 62, 74, 84, 92, 94],19,),\n    ([0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0],24,),\n    ([2, 2, 3, 3, 3, 4, 5, 13, 16, 18, 21, 22, 27, 28, 32, 34, 36, 37, 41, 42, 43, 51, 52, 52, 54, 54, 61, 65, 67, 67, 68, 71, 75, 77, 77, 78, 80, 81, 81, 84, 86, 90, 90, 93, 93, 94, 99, 99],31,),\n    ([54, -86],1,),\n    ([0, 1],1,),\n    ([5, 54, 49, 80, 56, 62, 31, 49, 60, 19, 45, 94, 33, 46, 32],8,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def MaximumHeight ( a , n ) :\n    return ( - 1 + int ( math.sqrt ( 1 + ( 8 * n ) ) ) ) // 2\n"}
Disassembly of <code object MaximumHeight at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( - 1 )
2 LOAD_GLOBAL 0 ( math )
4 LOAD_METHOD 1 ( sqrt )
6 LOAD_CONST 1 ( 1 )
8 LOAD_FAST 0 ( a )
10 BINARY_MULTIPLY
12 CALL_METHOD 1
14 LOAD_CONST 2 ( 2 )
16 BINARY_POWER
18 LOAD_CONST 2 ( 2 )
20 BINARY_POWER
22 LOAD_CONST 2 ( 2 )
24 BINARY_POWER
26 LOAD_CONST 2 ( 2 )
28 BINARY_POWER
30 LOAD_CONST 2 ( 2 )
32 BINARY_POWER
34 LOAD_CONST 2 ( 2 )
36 BINARY_POWER
38 LOAD_CONST 2 ( 2 )
40 BINARY_POWER
42 LOAD_CONST 2 ( 2 )
44 BINARY_POWER
46 LOAD_CONST 2 ( 2 )
48 BINARY_POWER
50 LOAD_CONST 2 ( 2 )
52 BINARY_POWER
54 LOAD_CONST 2 ( 2 )
56 BINARY_POWER
58 LOAD_CONST 2 ( 2 )
60 BINARY_POWER
62 LOAD_CONST 2 ( 2 )
64 BINARY_POWER
66 LOAD_CONST 2 ( 2 )
68 BINARY_POWER
70 LOAD_CONST 2 ( 2 )
72 BINARY_POWER
74 LOAD_CONST 2 ( 2 )
76 BINARY_POWER
78 LOAD_CONST 2 ( 2 )
80 BINARY_POWER
82 LOAD_CONST 2 ( 2 )
84 BINARY_POWER
86 LOAD_CONST 2 ( 2 )
88 BINARY_POWER
90 LOAD_CONST 2 ( 2 )
92 BINARY_POWER
94 LOAD_CONST 2 ( 2 )
96 BINARY_POWER
98 LOAD_CONST 2 ( 2 )
100 BINARY_POWER
102 LOAD_CONST 2 ( 2 )
104 BINARY_POWER
106 LOAD_CONST 2 ( 2 )
108 BINARY_POWER
110 LOAD_CONST 2 ( 2 )
112 BINARY_POWER
114 LOAD_CONST 2 ( 2 )
116 BINARY_POWER
118 LOAD_CONST 2 ( 2 )
120 BINARY_POWER
122 LOAD_CONST 2 ( 2 )
124 BINARY_POWER
126 LOAD_CONST 2 ( 2 )
128 BINARY_POWER
130 LOAD_CONST 2 ( 2 )
132 BINARY_POWER
134 LOAD_CONST 2 ( 2 )
136 BINARY_POWER
138 LOAD_CONST 2 ( 2 )
140 BINARY_POWER
142 LOAD_CONST 2 ( 2 )
144 BINARY_POWER
146 LOAD_CONST 2 ( 2 )
148 BINARY_POWER
150 LOAD_CONST 2 ( 2 )
152 BINARY_POWER
154 LOAD_CONST 2 ( 2 )
156 BINARY_POWER
158 LOAD_CONST 2 ( 2 )
160 BINARY_POWER
162 LOAD_CONST 2 ( 2 )
164 BINARY_POWER
166 LOAD_CONST 2 ( 2 )
168 BINARY_POWER
170 LOAD_CONST 2 ( 2 )
172 BINARY_POWER
174 LOAD_CONST 2 ( 2 )
176 BINARY_POWER
178 LOAD_CONST 2 ( 2 )
180 BINARY_POWER
182 LOAD_CONST 2 ( 2 )
184 BINARY_POWER
186 LOAD_CONST 2 ( 2 )
188 BINARY_POWER
190 CALL_FUNCTION 3
192 RETURN_VALUE
