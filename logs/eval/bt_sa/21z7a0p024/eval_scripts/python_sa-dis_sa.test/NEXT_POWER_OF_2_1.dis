{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    p = 1\n    if ( n and not ( n & ( n - 1 ) ) ) :\n        return n\n    while ( p < n ) :\n        p <<= 1\n    return p ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (8,),\n    (79,),\n    (31,),\n    (63,),\n    (18,),\n    (2,),\n    (6,),\n    (85,),\n    (29,),\n    (8,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def nextPowerOf2 ( n ) :\n    p = 1\n    if ( n and not ( n & ( n - 1 ) ) ) :\n        return n\n    while ( p < n ) :\n        p <<= 1\n    return p ;\n"}
Disassembly of <code object nextPowerOf2 at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 1 )
2 STORE_FAST 1 ( p )

3 4 LOAD_GLOBAL 0 ( ( ( n )
6 LOAD_FAST 0 ( n )
8 LOAD_CONST 2 ( 1 )
10 BINARY_SUBTRACT
12 COMPARE_OP 3 ( != )
14 POP_JUMP_IF_FALSE 26

4 16 LOAD_FAST 1 ( p )
18 LOAD_CONST 2 ( 1 )
20 BINARY_SUBTRACT
22 STORE_FAST 1 ( p )
24 JUMP_FORWARD 4 ( to 30 )

5 >> 26 LOAD_FAST 1 ( p )
28 LOAD_CONST 2 ( 1 )
>> 30 BINARY_SUBTRACT
32 STORE_FAST 1 ( p )

6 34 LOAD_FAST 1 ( p )
36 LOAD_CONST 3 ( 2 )
38 BINARY_SUBTRACT
40 STORE_FAST 1 ( p )

7 42 LOAD_FAST 1 ( p )
44 LOAD_CONST 4 ( 3 )
46 BINARY_SUBTRACT
48 STORE_FAST 2 ( p )

8 50 LOAD_FAST 1 ( p )
52 LOAD_CONST 5 ( 4 )
54 BINARY_SUBTRACT
56 STORE_FAST 3 ( p )

9 58 LOAD_FAST 2 ( p )
60 LOAD_CONST 6 ( 5 )
62 COMPARE_OP 0 ( < )
64 POP_JUMP_IF_FALSE 74

10 66 LOAD_FAST 2 ( p )
68 LOAD_CONST 7 ( 3 )
70 INPLACE_ADD
72 STORE_FAST 2 ( p )

11 >> 74 LOAD_FAST 1 ( p )
76 LOAD_CONST 8 ( 6 )
78 INPLACE_ADD
80 STORE_FAST 1 ( p )

12 82 LOAD_FAST 1 ( p )
84 LOAD_CONST 9 ( 6 )
86 INPLACE_ADD
88 STORE_FAST 1 ( p )

13 90 LOAD_FAST 2 ( p )
92 LOAD_CONST 10 ( 7 )
94 INPLACE_ADD
96 STORE_FAST 1 ( p )

14 98 LOAD_FAST 1 ( p )
100 LOAD_CONST 11 ( 6 )
102 INPLACE_ADD
104 STORE_FAST 1 ( p )

15 106 LOAD_FAST 1 ( p )
108 LOAD_CONST 12 ( 6 )
110 INPLACE_ADD
112 STORE_FAST 1 ( p )

16 114 LOAD_FAST 1 ( p )
116 LOAD_CONST 13 ( 7 )
118 INPLACE_ADD
120 STORE_FAST 1 ( p )

17 122 LOAD_FAST 1 ( p )
124 LOAD_CONST 14 ( 8 )
126 INPLACE_ADD
128 STORE_FAST 1 ( p )

18 130 LOAD_FAST 1 ( p )
132 LOAD_CONST 15 ( 6 )
134 INPLACE_ADD
136 STORE_FAST 1 ( p )

18 138 LOAD_FAST 1 ( p )
140 LOAD_CONST 16 ( 6 )
142 INPLACE_ADD
144 STORE_FAST 1 ( p )

19 146 LOAD_FAST 1 ( p )
148 RETURN_VALUE
