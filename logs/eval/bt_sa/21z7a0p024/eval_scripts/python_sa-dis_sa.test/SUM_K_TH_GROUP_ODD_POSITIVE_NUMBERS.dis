{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( k ) :\n    cur = int ( ( k * ( k - 1 ) ) + 1 )\n    sum = 0\n    while k :\n        sum += cur\n        cur += 2\n        k = k - 1\n    return sum\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (91,),\n    (52,),\n    (78,),\n    (51,),\n    (65,),\n    (39,),\n    (42,),\n    (12,),\n    (56,),\n    (98,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def kthgroupsum ( k ) :\n    cur = int ( ( k * ( k - 1 ) ) + 1 )\n    sum = 0\n    while k :\n        sum += cur\n        cur += 2\n        k = k - 1\n    return sum\n"}
Disassembly of <code object kthgroupsum at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( int )
2 LOAD_GLOBAL 1 ( int )
4 LOAD_FAST 0 ( k )
6 LOAD_CONST 1 ( 1 )
8 BINARY_SUBTRACT
10 CALL_FUNCTION 1
12 CALL_FUNCTION 1
14 LOAD_CONST 2 ( 1 )
16 BINARY_SUBTRACT
18 STORE_FAST 1 ( cur )

3 20 LOAD_CONST 2 ( 1 )
22 STORE_FAST 2 ( cur )

4 24 SETUP_LOOP 44 ( to 64 )
>> 26 LOAD_FAST 1 ( cur )
28 LOAD_FAST 2 ( cur )
30 COMPARE_OP 0 ( < )
32 POP_JUMP_IF_FALSE 62

5 34 LOAD_FAST 1 ( cur )
36 LOAD_FAST 2 ( cur )
38 BINARY_SUBSCR
40 LOAD_CONST 3 ( 2 )
42 BINARY_SUBSCR
44 LOAD_CONST 4 ( 3 )
46 BINARY_SUBSCR
48 LOAD_CONST 5 ( '' )
50 COMPARE_OP 2 ( == )
52 POP_JUMP_IF_FALSE 54

6 54 LOAD_FAST 1 ( cur )
56 LOAD_FAST 2 ( cur )
58 BINARY_SUBSCR
60 LOAD_CONST 6 ( '' )
62 COMPARE_OP 2 ( == )
64 POP_JUMP_IF_FALSE 68

7 66 LOAD_FAST 1 ( cur )
68 LOAD_FAST 2 ( cur )
70 BINARY_SUBSCR
72 LOAD_CONST 7 ( '' )
74 COMPARE_OP 2 ( == )
76 POP_JUMP_IF_FALSE 84

8 78 LOAD_FAST 1 ( cur )
80 LOAD_FAST 2 ( cur )
82 BINARY_SUBSCR
84 LOAD_CONST 8 ( '' )
86 COMPARE_OP 2 ( == )
88 POP_JUMP_IF_FALSE 98

9 90 LOAD_FAST 1 ( cur )
92 LOAD_FAST 2 ( cur )
94 BINARY_SUBSCR
96 LOAD_CONST 9 ( '' )
98 COMPARE_OP 2 ( == )
100 POP_JUMP_IF_FALSE 106

10 102 LOAD_FAST 1 ( cur )
104 LOAD_FAST 2 ( cur )
106 BINARY_SUBSCR
108 LOAD_CONST 10 ( '' )
110 COMPARE_OP 2 ( == )
112 POP_JUMP_IF_FALSE 118

11 114 LOAD_FAST 1 ( cur )
116 LOAD_FAST 2 ( cur )
118 BINARY_SUBSCR
120 LOAD_CONST 11 ( '' )
122 COMPARE_OP 2 ( == )
124 POP_JUMP_IF_FALSE 118

12 >> 126 LOAD_FAST 1 ( cur )
128 LOAD_FAST 2 ( cur )
130 BINARY_SUBSCR
132 LOAD_CONST 12 ( '' )
134 COMPARE_OP 2 ( == )
136 POP_JUMP_IF_FALSE 148

13 138 LOAD_FAST 1 ( cur )
140 LOAD_FAST 2 ( cur )
142 STORE_SUBSCR
144 JUMP_ABSOLUTE 26
>> 146 POP_BLOCK

14 >> 148 LOAD_FAST 1 ( cur )
150 RETURN_VALUE
