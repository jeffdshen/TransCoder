{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( str_ ) :\n    n = len ( str_ )\n    arr = [ 0 ] * n\n    concat = str_ + str_\n    for i in range ( n ) :\n        arr [ i ] = concat [ i : n + i ]\n    arr.sort ( )\n    return arr [ 0 ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('onWEchl',),\n    ('2',),\n    ('100',),\n    ('GHbCZA',),\n    ('50568798206105',),\n    ('001011110001',),\n    ('lljpYhznnyu',),\n    ('54499921759984',),\n    ('11101',),\n    ('qvypgCYEjsyjwZ',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def minLexRotation ( str_ ) :\n    n = len ( str_ )\n    arr = [ 0 ] * n\n    concat = str_ + str_\n    for i in range ( n ) :\n        arr [ i ] = concat [ i : n + i ]\n    arr.sort ( )\n    return arr [ 0 ]\n"}
Disassembly of <code object minLexRotation at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( len )
2 LOAD_FAST 0 ( str_ )
4 CALL_FUNCTION 1
6 LOAD_CONST 1 ( 0 )
8 BINARY_SUBSCR
10 STORE_FAST 1 ( n )

3 12 LOAD_FAST 0 ( str_ )
14 LOAD_CONST 2 ( 1 )
16 BINARY_SUBSCR
18 STORE_FAST 2 ( num )

4 20 SETUP_LOOP 32 ( to 56 )
22 LOAD_GLOBAL 1 ( range )
24 LOAD_FAST 1 ( n )
26 CALL_FUNCTION 1
28 GET_ITER
>> 30 FOR_ITER 20 ( to 54 )
32 STORE_FAST 3 ( i )

5 34 LOAD_FAST 0 ( str_ )
36 LOAD_CONST 2 ( 1 )
38 BINARY_SUBSCR
40 LOAD_FAST 3 ( i )
42 BINARY_SUBSCR
44 LOAD_FAST 3 ( i )
46 BINARY_SUBSCR
48 LOAD_FAST 3 ( i )
50 BINARY_SUBSCR
52 LOAD_FAST 3 ( i )
54 BINARY_SUBSCR
56 LOAD_FAST 3 ( i )
58 STORE_SUBSCR

6 60 LOAD_FAST 0 ( str_ )
62 LOAD_CONST 2 ( 1 )
64 BINARY_SUBSCR
66 LOAD_FAST 3 ( i )
68 BINARY_SUBSCR
70 LOAD_FAST 3 ( i )
72 STORE_SUBSCR
74 JUMP_ABSOLUTE 30
>> 76 POP_BLOCK

7 >> 78 LOAD_FAST 0 ( str_ )
80 RETURN_VALUE
