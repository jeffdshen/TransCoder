{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( str ) :\n    result = \"\"\n    v = True\n    for i in range ( len ( str ) ) :\n        if ( str [ i ] == ' ' ) :\n            v = True\n        elif ( str [ i ] != ' ' and v == True ) :\n            result += ( str [ i ] )\n            v = False\n    return result\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('t a',),\n    ('77 78 2 600 7',),\n    ('011 10 10',),\n    ('kV Co O iR',),\n    ('2',),\n    ('0 11',),\n    ('Y sT wgheC',),\n    ('58 824 6',),\n    ('00 100 001 0111',),\n    ('Q',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def firstLetterWord ( str ) :\n    result = \"\"\n    v = True\n    for i in range ( len ( str ) ) :\n        if ( str [ i ] == ' ' ) :\n            v = True\n        elif ( str [ i ] != ' ' and v == True ) :\n            result += ( str [ i ] )\n            v = False\n    return result\n"}
Disassembly of <code object firstLetterWord at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( '' )
2 STORE_FAST 1 ( result )

3 4 LOAD_CONST 2 ( '' )
6 STORE_FAST 2 ( result )

4 8 SETUP_LOOP 64 ( to 76 )
10 LOAD_GLOBAL 0 ( range )
12 LOAD_GLOBAL 1 ( len )
14 LOAD_FAST 0 ( str )
16 CALL_FUNCTION 1
18 CALL_FUNCTION 1
20 GET_ITER
>> 22 FOR_ITER 48 ( to 74 )
24 STORE_FAST 3 ( i )

5 26 LOAD_FAST 0 ( str )
28 LOAD_FAST 3 ( i )
30 BINARY_SUBSCR
32 LOAD_CONST 3 ( '' )
34 COMPARE_OP 2 ( == )
36 POP_JUMP_IF_FALSE 42

6 38 LOAD_FAST 1 ( result )
40 LOAD_CONST 4 ( '' )
42 COMPARE_OP 2 ( == )
44 POP_JUMP_IF_FALSE 22

7 46 LOAD_FAST 1 ( result )
48 LOAD_CONST 5 ( '' )
50 COMPARE_OP 2 ( == )
52 POP_JUMP_IF_FALSE 22

8 54 LOAD_FAST 1 ( result )
56 LOAD_CONST 6 ( '' )
58 COMPARE_OP 2 ( == )
60 POP_JUMP_IF_FALSE 22

9 62 LOAD_FAST 1 ( result )
64 LOAD_CONST 7 ( '' )
66 COMPARE_OP 2 ( == )
68 POP_JUMP_IF_FALSE 22

10 70 LOAD_FAST 1 ( result )
72 LOAD_CONST 8 ( '' )
74 COMPARE_OP 2 ( == )
76 POP_JUMP_IF_FALSE 22

11 78 LOAD_FAST 1 ( result )
80 LOAD_CONST 8 ( '' )
82 COMPARE_OP 2 ( == )
84 POP_JUMP_IF_FALSE 22

12 86 LOAD_FAST 1 ( result )
88 LOAD_CONST 9 ( '' )
90 COMPARE_OP 2 ( == )
92 POP_JUMP_IF_FALSE 22

13 94 LOAD_FAST 1 ( result )
96 LOAD_CONST 10 ( '' )
98 INPLACE_ADD
100 STORE_FAST 1 ( result )
102 JUMP_ABSOLUTE 22
>> 104 POP_BLOCK

14 >> 106 LOAD_FAST 1 ( result )
108 RETURN_VALUE
