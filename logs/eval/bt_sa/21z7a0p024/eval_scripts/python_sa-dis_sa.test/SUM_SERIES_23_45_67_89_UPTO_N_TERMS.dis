{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    i = 1 ;\n    res = 0.0 ;\n    sign = True ;\n    while ( n > 0 ) :\n        n = n - 1 ;\n        if ( sign ) :\n            sign = False ;\n            res = res + ( i + 1 ) / ( i + 2 ) ;\n            i = i + 2 ;\n        else :\n            sign = True ;\n            res = res - ( i + 1 ) / ( i + 2 ) ;\n            i = i + 2 ;\n    return res ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (49,),\n    (4,),\n    (60,),\n    (90,),\n    (96,),\n    (29,),\n    (86,),\n    (47,),\n    (77,),\n    (87,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if abs(1 - (0.0000001 + abs(f_gold(*parameters_set))) / (abs(f_filled(*parameters_set)) + 0.0000001)) < 0.001:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def seriesSum ( n ) :\n    i = 1 ;\n    res = 0.0 ;\n    sign = True ;\n    while ( n > 0 ) :\n        n = n - 1 ;\n        if ( sign ) :\n            sign = False ;\n            res = res + ( i + 1 ) / ( i + 2 ) ;\n            i = i + 2 ;\n        else :\n            sign = True ;\n            res = res - ( i + 1 ) / ( i + 2 ) ;\n            i = i + 2 ;\n    return res ;\n"}
Disassembly of <code object seriesSum at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 1 )
2 STORE_FAST 1 ( i )

3 4 LOAD_CONST 1 ( 1 )
6 STORE_FAST 2 ( i )

4 8 LOAD_CONST 2 ( 0 )
10 STORE_FAST 3 ( sign )

5 12 SETUP_LOOP 64 ( to 76 )
14 LOAD_FAST 0 ( n )
16 GET_ITER
>> 18 FOR_ITER 64 ( to 74 )
20 STORE_FAST 4 ( n )

6 22 LOAD_FAST 1 ( i )
24 LOAD_CONST 2 ( 0 )
26 COMPARE_OP 4 ( > )
28 POP_JUMP_IF_FALSE 42

7 30 LOAD_FAST 1 ( i )
32 LOAD_CONST 2 ( 0 )
34 COMPARE_OP 4 ( > )
36 POP_JUMP_IF_FALSE 42

8 38 LOAD_FAST 1 ( i )
40 LOAD_CONST 2 ( 0 )
42 COMPARE_OP 4 ( > )
44 POP_JUMP_IF_FALSE 18

9 46 LOAD_FAST 1 ( i )
48 LOAD_CONST 2 ( 0 )
50 COMPARE_OP 4 ( > )
52 POP_JUMP_IF_FALSE 18

10 54 LOAD_FAST 1 ( i )
56 LOAD_CONST 2 ( 0 )
58 COMPARE_OP 4 ( > )
60 POP_JUMP_IF_FALSE 18

11 62 LOAD_FAST 1 ( i )
64 LOAD_CONST 2 ( 0 )
66 COMPARE_OP 4 ( > )
68 POP_JUMP_IF_FALSE 18

12 70 LOAD_FAST 1 ( i )
72 LOAD_CONST 2 ( 0 )
74 COMPARE_OP 4 ( > )
76 POP_JUMP_IF_FALSE 18

13 78 LOAD_FAST 1 ( i )
80 LOAD_CONST 2 ( 0 )
82 BINARY_SUBSCR
84 STORE_FAST 1 ( i )

14 86 LOAD_FAST 1 ( i )
88 LOAD_CONST 2 ( 0 )
90 COMPARE_OP 4 ( > )
92 POP_JUMP_IF_FALSE 18

15 94 LOAD_FAST 1 ( i )
96 LOAD_CONST 2 ( 0 )
98 COMPARE_OP 4 ( > )
100 POP_JUMP_IF_FALSE 18

16 102 LOAD_FAST 1 ( i )
104 LOAD_CONST 2 ( 0 )
106 INPLACE_ADD
108 STORE_FAST 1 ( i )
110 JUMP_ABSOLUTE 18
>> 112 POP_BLOCK

17 >> 114 LOAD_FAST 2 ( i )
116 RETURN_VALUE
