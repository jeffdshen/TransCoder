{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( str ) :\n    mx = \"\"\n    for i in range ( len ( str ) ) :\n        mx = max ( mx , str [ i : ] )\n    return mx\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('HCoAefoaan',),\n    ('80336005',),\n    ('01111111110',),\n    ('qIH',),\n    ('4210598472796',),\n    ('10101',),\n    ('imqmKdatcgXjs',),\n    ('950509666021',),\n    ('10111101101',),\n    ('wasqgYFvz',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def LexicographicalMaxString ( str ) :\n    mx = \"\"\n    for i in range ( len ( str ) ) :\n        mx = max ( mx , str [ i : ] )\n    return mx\n"}
Disassembly of <code object LexicographicalMaxString at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( '' )
2 STORE_FAST 1 ( mx )

3 4 SETUP_LOOP 64 ( to 66 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_GLOBAL 1 ( len )
10 LOAD_FAST 0 ( str )
12 CALL_FUNCTION 1
14 CALL_FUNCTION 1
16 GET_ITER
>> 18 FOR_ITER 48 ( to 64 )
20 STORE_FAST 2 ( i )

4 22 LOAD_GLOBAL 2 ( max )
24 LOAD_FAST 0 ( str )
26 LOAD_FAST 2 ( i )
28 CALL_FUNCTION 1
30 STORE_FAST 1 ( mx )

5 32 LOAD_GLOBAL 3 ( max )
34 LOAD_FAST 0 ( str )
36 LOAD_FAST 2 ( i )
38 CALL_FUNCTION 1
40 STORE_FAST 1 ( mx )

6 42 LOAD_GLOBAL 4 ( max )
44 LOAD_FAST 0 ( str )
46 LOAD_FAST 2 ( i )
48 CALL_FUNCTION 1
50 STORE_FAST 2 ( i )

7 52 LOAD_GLOBAL 5 ( max )
54 LOAD_FAST 0 ( str )
56 LOAD_FAST 2 ( i )
58 CALL_FUNCTION 1
60 STORE_FAST 3 ( mx )
62 JUMP_ABSOLUTE 18
>> 64 POP_BLOCK

8 >> 66 LOAD_FAST 1 ( mx )
68 RETURN_VALUE
