{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    if ( n <= 0 ) :\n        return 0\n    fibo = [ 0 ] * ( n + 1 )\n    fibo [ 1 ] = 1\n    sm = fibo [ 0 ] + fibo [ 1 ]\n    for i in range ( 2 , n + 1 ) :\n        fibo [ i ] = fibo [ i - 1 ] + fibo [ i - 2 ]\n        sm = sm + fibo [ i ]\n    return sm\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (9,),\n    (50,),\n    (7,),\n    (21,),\n    (21,),\n    (91,),\n    (11,),\n    (25,),\n    (62,),\n    (4,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def calculateSum ( n ) :\n    if ( n <= 0 ) :\n        return 0\n    fibo = [ 0 ] * ( n + 1 )\n    fibo [ 1 ] = 1\n    sm = fibo [ 0 ] + fibo [ 1 ]\n    for i in range ( 2 , n + 1 ) :\n        fibo [ i ] = fibo [ i - 1 ] + fibo [ i - 2 ]\n        sm = sm + fibo [ i ]\n    return sm\n"}
Disassembly of <code object calculateSum at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 0 )
4 COMPARE_OP 1 ( <= )
6 POP_JUMP_IF_FALSE 12

3 8 LOAD_CONST 2 ( 0 )
10 RETURN_VALUE

4 >> 12 LOAD_FAST 0 ( n )
14 LOAD_CONST 1 ( 0 )
16 COMPARE_OP 1 ( <= )
18 POP_JUMP_IF_FALSE 24

5 20 LOAD_CONST 2 ( 0 )
22 RETURN_VALUE

6 >> 24 LOAD_FAST 0 ( n )
26 LOAD_CONST 1 ( 0 )
28 COMPARE_OP 1 ( <= )
30 POP_JUMP_IF_FALSE 40

7 32 LOAD_CONST 2 ( 0 )
34 RETURN_VALUE

8 >> 36 LOAD_FAST 0 ( n )
38 LOAD_CONST 1 ( 0 )
40 COMPARE_OP 1 ( <= )
42 POP_JUMP_IF_FALSE 48

9 44 LOAD_CONST 2 ( 0 )
46 RETURN_VALUE

10 >> 48 LOAD_FAST 0 ( n )
50 LOAD_CONST 1 ( 0 )
52 COMPARE_OP 1 ( <= )
54 POP_JUMP_IF_FALSE 64

11 56 LOAD_CONST 2 ( 0 )
58 RETURN_VALUE

13 >> 60 LOAD_FAST 0 ( n )
62 LOAD_CONST 1 ( 0 )
64 COMPARE_OP 1 ( <= )
66 POP_JUMP_IF_FALSE 76

14 68 LOAD_CONST 2 ( 0 )
70 RETURN_VALUE

15 >> 72 LOAD_FAST 0 ( n )
74 LOAD_CONST 1 ( 0 )
76 COMPARE_OP 1 ( <= )
78 POP_JUMP_IF_FALSE 92

16 80 LOAD_CONST 2 ( 0 )
82 RETURN_VALUE

17 >> 84 LOAD_FAST 0 ( n )
86 LOAD_CONST 1 ( 0 )
88 COMPARE_OP 1 ( <= )
90 POP_JUMP_IF_FALSE 92

18 92 LOAD_CONST 2 ( 0 )
94 RETURN_VALUE

19 >> 96 LOAD_FAST 0 ( n )
98 LOAD_CONST 1 ( 0 )
100 COMPARE_OP 1 ( <= )
102 POP_JUMP_IF_FALSE 114
104 LOAD_CONST 2 ( 0 )
106 RETURN_VALUE

20 >> 108 LOAD_FAST 0 ( n )
110 LOAD_CONST 1 ( 0 )
112 COMPARE_OP 1 ( <= )
114 POP_JUMP_IF_FALSE 120

21 116 LOAD_CONST 2 ( 0 )
118 RETURN_VALUE

19 >> 120 LOAD_FAST 0 ( n )
122 LOAD_CONST 1 ( 0 )
124 COMPARE_OP 1 ( <= )
126 POP_JUMP_IF_FALSE 128

20 128 LOAD_CONST 2 ( 0 )
130 RETURN_VALUE

21 >> 132 LOAD_FAST 0 ( n )
134 LOAD_CONST 1 ( 0 )
136 COMPARE_OP 1 ( <= )
138 POP_JUMP_IF_FALSE 128
140 LOAD_FAST 0 ( n )
142 LOAD_CONST 1 ( 0 )
144 COMPARE_OP 1 ( <= )
146 POP_JUMP_IF_FALSE 128
148 LOAD_FAST 0 ( n )
150 RETURN_VALUE
