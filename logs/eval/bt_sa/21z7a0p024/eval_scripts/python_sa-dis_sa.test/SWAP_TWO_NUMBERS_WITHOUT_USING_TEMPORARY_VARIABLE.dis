{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( xp , yp ) :\n    xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ]\n    yp [ 0 ] = xp [ 0 ] ^ yp [ 0 ]\n    xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([2, 7, 12, 13, 15, 17, 24, 27, 28, 31, 36, 44, 55, 55, 56, 58, 60, 62, 64, 73, 75, 77, 89, 90, 93, 93, 95, 97, 98],[5, 8, 12, 13, 14, 20, 23, 25, 27, 28, 31, 33, 33, 37, 38, 39, 42, 42, 43, 47, 52, 54, 62, 67, 71, 72, 73, 76, 77, 79, 81, 81, 85, 86, 89, 91, 91, 96, 96, 99],),\n    ([36, 51, 6, 25, 13, -36, 23, 14, -80, -84, 45, -81, 20, 36, 66, -62, 81, -7, 5, 0, -10, 59, -56, 88, -24, 45, -21, -27, 67, 70, 76, 40, -4, -11, 3, 46, -94, 22, 71, 16, 63, 82, -38, 97, 44, 36, -11, -4],[-14, 59, 38, 84, 21, -24, -8, -30, 48, 33, -77, 37, -42, 87, 82, -54, -78, 92, -92, 23, -80, 79, -22, -61, -63, 78],),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],[0, 0, 0, 0, 0, 1, 1, 1, 1, 1],),\n    ([63, 87, 32, 10, 11, 70, 62, 47, 34, 17, 54, 76, 85, 40, 19, 67, 82, 53, 64, 83, 47, 6, 16, 72, 18, 52, 48, 43, 39, 49, 12, 10, 71, 55, 1, 49, 36, 21, 37, 24, 55, 25, 7, 81, 93, 94, 71, 97, 71],[11, 73, 12, 35, 63, 68, 92, 57, 13, 23, 83, 39, 88, 80, 97, 12, 34, 71, 75, 31, 93, 62, 13, 31],),\n    ([-85, 3],[-84, -71, -66, -63, -25, -23, -19, 3, 67, 94, 96],),\n    ([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1],[0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0],),\n    ([2, 3, 4, 5, 6, 8, 14, 16, 16, 17, 19, 21, 21, 25, 26, 26, 29, 33, 36, 39, 46, 53, 55, 56, 66, 77, 81, 84, 84, 86, 86, 88, 89, 89, 92, 97],[5, 13, 22, 24, 27, 33, 46, 67, 74, 77, 78, 82, 86, 90, 91],),\n    ([15, -37, 13, -6, -52, 91, -88, 56, 72, 71, 45, -60, 77, -15, -43, -13, -16, 92, 85, 21, -26, 7, 24, 98, 0, -57, 19, -77, 55, 86, -63, 34, -35, 34, 78, -78, 5, -12, 53, 25, -21, -10, -49, 76, 2, 98, 6],[-40],),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],),\n    ([75, 24, 60, 95, 55],[80, 24, 77, 24, 54, 26, 66, 80, 38, 65, 75, 51, 35],)\n        ]\n    filled_function_param = [\n    ([2, 7, 12, 13, 15, 17, 24, 27, 28, 31, 36, 44, 55, 55, 56, 58, 60, 62, 64, 73, 75, 77, 89, 90, 93, 93, 95, 97, 98],[5, 8, 12, 13, 14, 20, 23, 25, 27, 28, 31, 33, 33, 37, 38, 39, 42, 42, 43, 47, 52, 54, 62, 67, 71, 72, 73, 76, 77, 79, 81, 81, 85, 86, 89, 91, 91, 96, 96, 99],),\n    ([36, 51, 6, 25, 13, -36, 23, 14, -80, -84, 45, -81, 20, 36, 66, -62, 81, -7, 5, 0, -10, 59, -56, 88, -24, 45, -21, -27, 67, 70, 76, 40, -4, -11, 3, 46, -94, 22, 71, 16, 63, 82, -38, 97, 44, 36, -11, -4],[-14, 59, 38, 84, 21, -24, -8, -30, 48, 33, -77, 37, -42, 87, 82, -54, -78, 92, -92, 23, -80, 79, -22, -61, -63, 78],),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],[0, 0, 0, 0, 0, 1, 1, 1, 1, 1],),\n    ([63, 87, 32, 10, 11, 70, 62, 47, 34, 17, 54, 76, 85, 40, 19, 67, 82, 53, 64, 83, 47, 6, 16, 72, 18, 52, 48, 43, 39, 49, 12, 10, 71, 55, 1, 49, 36, 21, 37, 24, 55, 25, 7, 81, 93, 94, 71, 97, 71],[11, 73, 12, 35, 63, 68, 92, 57, 13, 23, 83, 39, 88, 80, 97, 12, 34, 71, 75, 31, 93, 62, 13, 31],),\n    ([-85, 3],[-84, -71, -66, -63, -25, -23, -19, 3, 67, 94, 96],),\n    ([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1],[0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0],),\n    ([2, 3, 4, 5, 6, 8, 14, 16, 16, 17, 19, 21, 21, 25, 26, 26, 29, 33, 36, 39, 46, 53, 55, 56, 66, 77, 81, 84, 84, 86, 86, 88, 89, 89, 92, 97],[5, 13, 22, 24, 27, 33, 46, 67, 74, 77, 78, 82, 86, 90, 91],),\n    ([15, -37, 13, -6, -52, 91, -88, 56, 72, 71, 45, -60, 77, -15, -43, -13, -16, 92, 85, 21, -26, 7, 24, 98, 0, -57, 19, -77, 55, 86, -63, 34, -35, 34, 78, -78, 5, -12, 53, 25, -21, -10, -49, 76, 2, 98, 6],[-40],),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],),\n    ([75, 24, 60, 95, 55],[80, 24, 77, 24, 54, 26, 66, 80, 38, 65, 75, 51, 35],)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        f_filled(*(filled_function_param[i]))\n        f_gold(*parameters_set)\n        if parameters_set == filled_function_param[i]:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def swap ( xp , yp ) :\n    xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ]\n    yp [ 0 ] = xp [ 0 ] ^ yp [ 0 ]\n    xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ]\n"}
Disassembly of <code object swap at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( xp )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 LOAD_CONST 2 ( 1 )
8 BINARY_SUBSCR
10 LOAD_FAST 0 ( xp )
12 LOAD_CONST 1 ( 0 )
14 BINARY_SUBSCR
16 BINARY_SUBTRACT
18 LOAD_CONST 2 ( 1 )
20 BINARY_SUBSCR
22 LOAD_FAST 0 ( xp )
24 LOAD_CONST 1 ( 0 )
26 BINARY_SUBSCR
28 BINARY_SUBTRACT
30 LOAD_CONST 2 ( 1 )
32 BINARY_SUBSCR
34 BINARY_SUBTRACT
36 LOAD_CONST 2 ( 1 )
38 BINARY_SUBSCR
40 BINARY_SUBTRACT
42 LOAD_CONST 2 ( 1 )
44 BINARY_SUBSCR
46 LOAD_FAST 0 ( xp )
48 LOAD_CONST 1 ( 0 )
50 BINARY_SUBSCR
52 BINARY_SUBTRACT
54 LOAD_CONST 2 ( 1 )
56 BINARY_SUBSCR
58 BINARY_SUBTRACT
60 LOAD_CONST 2 ( 1 )
62 BINARY_SUBSCR
64 LOAD_FAST 0 ( xp )
66 LOAD_CONST 1 ( 0 )
68 BINARY_SUBSCR
70 BINARY_SUBTRACT
72 LOAD_CONST 2 ( 1 )
74 BINARY_SUBSCR
76 BINARY_SUBTRACT
78 LOAD_CONST 2 ( 1 )
80 BINARY_SUBSCR
82 BINARY_SUBTRACT
84 LOAD_CONST 2 ( 1 )
86 BINARY_SUBSCR
88 LOAD_FAST 0 ( xp )
90 LOAD_CONST 1 ( 0 )
92 BINARY_SUBSCR
94 BINARY_SUBTRACT
96 LOAD_CONST 2 ( 1 )
98 BINARY_SUBSCR
100 BINARY_SUBTRACT
102 LOAD_CONST 2 ( 1 )
104 BINARY_SUBSCR
106 BINARY_SUBTRACT
108 LOAD_CONST 2 ( 1 )
110 BINARY_SUBSCR
112 BINARY_SUBTRACT
114 LOAD_CONST 2 ( 1 )
116 BINARY_SUBSCR
118 BINARY_SUBTRACT
120 LOAD_CONST 2 ( 1 )
122 BINARY_SUBSCR
124 BINARY_SUBTRACT
126 LOAD_CONST 2 ( 1 )
128 BINARY_SUBSCR
130 BINARY_SUBTRACT
132 STORE_FAST 1 ( offset )

3 134 LOAD_FAST 0 ( xp )
136 LOAD_CONST 1 ( 0 )
138 BINARY_SUBSCR
140 LOAD_FAST 0 ( xp )
142 LOAD_CONST 1 ( 0 )
144 BINARY_SUBSCR
146 LOAD_FAST 0 ( xp )
148 LOAD_CONST 1 ( 0 )
150 BINARY_SUBSCR
152 BINARY_SUBTRACT
154 LOAD_CONST 2 ( 1 )
156 BINARY_SUBTRACT
158 LOAD_CONST 2 ( 1 )
160 BINARY_SUBSCR
162 BINARY_SUBTRACT
164 LOAD_CONST 2 ( 1 )
166 BINARY_SUBSCR
168 LOAD_FAST 0 ( xp )
170 LOAD_CONST 1 ( 0 )
172 BINARY_SUBSCR
174 BINARY_SUBTRACT
176 LOAD_CONST 2 ( 1 )
178 BINARY_SUBSCR
180 LOAD_FAST 0 ( xp )
182 LOAD_CONST 1 ( 0 )
184 BINARY_SUBSCR
186 BINARY_SUBTRACT
188 LOAD_CONST 2 ( 1 )
190 LOAD_FAST 0 ( xp )
192 LOAD_CONST 1 ( 0 )
194 BINARY_SUBSCR
196 BINARY_SUBTRACT
168 BINARY_MULTIPLY
170 LOAD_FAST 0 ( xp )
172 LOAD_CONST 1 ( 0 )