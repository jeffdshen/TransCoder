{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( x , y , p ) :\n    res = 1\n    x = x % p\n    while ( y > 0 ) :\n        if ( ( y & 1 ) == 1 ) :\n            res = ( res * x ) % p\n        y = y >> 1\n        x = ( x * x ) % p\n    return res\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (45,5,68,),\n    (67,25,49,),\n    (26,91,44,),\n    (33,61,9,),\n    (35,8,13,),\n    (68,41,5,),\n    (14,76,20,),\n    (5,89,13,),\n    (23,42,45,),\n    (37,63,56,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def power ( x , y , p ) :\n    res = 1\n    x = x % p\n    while ( y > 0 ) :\n        if ( ( y & 1 ) == 1 ) :\n            res = ( res * x ) % p\n        y = y >> 1\n        x = ( x * x ) % p\n    return res\n"}
Disassembly of <code object power at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 1 )
2 STORE_FAST 2 ( res )

3 4 LOAD_FAST 0 ( x )
6 LOAD_FAST 1 ( y )
8 COMPARE_OP 4 ( > )
10 POP_JUMP_IF_FALSE 20

4 12 LOAD_FAST 2 ( res )
14 LOAD_CONST 2 ( 0 )
16 COMPARE_OP 4 ( > )
18 POP_JUMP_IF_FALSE 20

5 >> 20 LOAD_FAST 2 ( res )
22 LOAD_CONST 1 ( 1 )
24 BINARY_SUBTRACT
26 STORE_FAST 2 ( res )
28 JUMP_FORWARD 4 ( to 36 )

6 >> 30 LOAD_FAST 2 ( res )
32 LOAD_CONST 1 ( 1 )
34 BINARY_SUBTRACT
>> 36 STORE_FAST 2 ( res )

7 38 LOAD_FAST 0 ( x )
40 LOAD_FAST 1 ( y )
42 BINARY_SUBTRACT
44 STORE_FAST 3 ( res )

8 46 LOAD_FAST 2 ( res )
48 LOAD_CONST 3 ( 2 )
50 COMPARE_OP 4 ( > )
52 POP_JUMP_IF_FALSE 64

9 54 LOAD_FAST 2 ( res )
56 LOAD_CONST 4 ( 0 )
58 BINARY_SUBSCR
60 STORE_FAST 2 ( res )
62 JUMP_FORWARD 4 ( to 76 )

10 >> 64 LOAD_FAST 2 ( res )
66 LOAD_CONST 5 ( 1 )
68 COMPARE_OP 4 ( > )
70 POP_JUMP_IF_FALSE 76

11 72 LOAD_FAST 2 ( res )
74 LOAD_CONST 6 ( 1 )
76 INPLACE_ADD
78 STORE_FAST 2 ( res )

12 >> 80 LOAD_FAST 2 ( res )
82 RETURN_VALUE
