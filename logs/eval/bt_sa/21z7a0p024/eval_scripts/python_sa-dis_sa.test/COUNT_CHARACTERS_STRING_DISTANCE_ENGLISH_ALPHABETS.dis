{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( str1 ) :\n    result = 0 ;\n    n = len ( str1 )\n    for i in range ( 0 , n ) :\n        for j in range ( i + 1 , n ) :\n            if ( abs ( ord ( str1 [ i ] ) - ord ( str1 [ j ] ) ) == abs ( i - j ) ) :\n                result += 1 ;\n    return result ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('smnKL',),\n    ('270083',),\n    ('0',),\n    ('kcZdsz',),\n    ('483544224',),\n    ('000011',),\n    ('WysGCirMwKBzP',),\n    ('3366',),\n    ('110',),\n    ('NlaMkpCjUgg',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countPairs ( str1 ) :\n    result = 0 ;\n    n = len ( str1 )\n    for i in range ( 0 , n ) :\n        for j in range ( i + 1 , n ) :\n            if ( abs ( ord ( str1 [ i ] ) - ord ( str1 [ j ] ) ) == abs ( i - j ) ) :\n                result += 1 ;\n    return result ;\n"}
Disassembly of <code object countPairs at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( result )

3 4 LOAD_GLOBAL 0 ( len )
6 LOAD_FAST 0 ( str1 )
8 CALL_FUNCTION 1
10 STORE_FAST 2 ( result )

4 12 SETUP_LOOP 64 ( to 76 )
14 LOAD_GLOBAL 1 ( range )
16 LOAD_CONST 2 ( 0 )
18 LOAD_FAST 2 ( result )
20 CALL_FUNCTION 2
22 GET_ITER
>> 24 FOR_ITER 48 ( to 74 )
26 STORE_FAST 3 ( i )

5 28 LOAD_GLOBAL 2 ( int )
30 LOAD_FAST 0 ( str1 )
32 LOAD_FAST 3 ( i )
34 BINARY_SUBSCR
36 CALL_FUNCTION 1
38 STORE_FAST 4 ( str2 )

6 40 LOAD_GLOBAL 2 ( int )
42 LOAD_FAST 0 ( str1 )
44 LOAD_FAST 3 ( i )
46 BINARY_SUBSCR
48 CALL_FUNCTION 1
50 STORE_FAST 5 ( str2 )

7 52 LOAD_GLOBAL 2 ( int )
54 LOAD_FAST 0 ( str1 )
56 LOAD_FAST 3 ( i )
58 BINARY_SUBSCR
60 CALL_FUNCTION 1
62 STORE_FAST 6 ( str2 )

8 64 LOAD_FAST 5 ( str2 )
66 LOAD_FAST 4 ( str2 )
68 COMPARE_OP 6 ( in )
70 POP_JUMP_IF_FALSE 24

9 72 LOAD_FAST 5 ( str1 )
74 LOAD_FAST 3 ( i )
76 BINARY_SUBSCR
78 STORE_FAST 7 ( str2 )

10 80 LOAD_FAST 6 ( str2 )
82 LOAD_FAST 7 ( str2 )
84 COMPARE_OP 6 ( in )
86 POP_JUMP_IF_FALSE 24

11 88 LOAD_FAST 5 ( str1 )
90 LOAD_FAST 3 ( i )
92 BINARY_SUBSCR
94 STORE_FAST 8 ( str2 )

12 96 LOAD_FAST 7 ( str2 )
98 LOAD_FAST 8 ( str2 )
100 COMPARE_OP 6 ( in )
102 POP_JUMP_IF_FALSE 24

13 104 LOAD_FAST 7 ( str2 )
106 LOAD_FAST 7 ( str2 )
108 LOAD_FAST 8 ( str2 )
110 BINARY_ADD
112 STORE_FAST 7 ( str2 )

14 114 LOAD_FAST 7 ( str2 )
116 LOAD_FAST 8 ( str2 )
118 BINARY_ADD
120 STORE_FAST 7 ( str2 )

15 122 LOAD_FAST 7 ( str2 )
124 LOAD_FAST 8 ( str2 )
126 BINARY_ADD
128 INPLACE_ADD
130 STORE_FAST 7 ( str2 )

16 132 LOAD_FAST 7 ( str2 )
134 LOAD_FAST 7 ( str2 )
136 LOAD_FAST 8 ( str2 )
138 BINARY_ADD
140 INPLACE_ADD
142 STORE_FAST 7 ( str2 )

17 144 LOAD_FAST 7 ( str2 )
146 LOAD_FAST 7 ( str2 )
148 BINARY_ADD
150 RETURN_VALUE
