{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( tree , k ) :\n    level = - 1\n    product = 1\n    n = len ( tree )\n    for i in range ( 0 , n ) :\n        if ( tree [ i ] == '(' ) :\n            level += 1\n        elif ( tree [ i ] == ')' ) :\n            level -= 1\n        else :\n            if ( level == k ) :\n                product *= ( int ( tree [ i ] ) - int ( '0' ) )\n    return product\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('(0(5(6()())(4()(9()())))(7(1()())(3()())))',2,),\n    ('(8(3(2()())(6(5()())()))(5(10()())(7(13()())())))',3,),\n    ('(0(5(6()())(4()(9()())))(7(1()())(3()())))',1,),\n    ('(8(3(2()())(6(5()())()))(5(10()())(7(13()())())))',2,),\n    ('(8(3(2()())(6(5()())()))(5(10()())(7(13()())())))',4,),\n    ('(8(3(2()())(6(5()())()))(5(10()())(7(13()())())))',100,),\n    ('(0(5(6()())(4()(9()())))(7(1()())(3()())))',3,),\n    ('(0(5(6()())(4()(9()())))(7(1()())(3()())))',0,),\n    ('0010',12,),\n    ('kjtdgmy',97,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def productAtKthLevel ( tree , k ) :\n    level = - 1\n    product = 1\n    n = len ( tree )\n    for i in range ( 0 , n ) :\n        if ( tree [ i ] == '(' ) :\n            level += 1\n        elif ( tree [ i ] == ')' ) :\n            level -= 1\n        else :\n            if ( level == k ) :\n                product *= ( int ( tree [ i ] ) - int ( '0' ) )\n    return product\n"}
Disassembly of <code object productAtKLevel at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( - 1 )
2 STORE_FAST 2 ( level )

3 4 LOAD_CONST 2 ( - 1 )
6 STORE_FAST 3 ( product )

4 8 LOAD_GLOBAL 0 ( len )
10 LOAD_FAST 0 ( tree )
12 CALL_FUNCTION 1
14 STORE_FAST 4 ( n )

5 16 SETUP_LOOP 64 ( to 80 )
>> 18 LOAD_FAST 4 ( n )
20 LOAD_CONST 3 ( 0 )
22 COMPARE_OP 4 ( > )
24 POP_JUMP_IF_FALSE 78

6 26 LOAD_FAST 4 ( n )
28 LOAD_CONST 4 ( 1 )
30 COMPARE_OP 4 ( > )
32 POP_JUMP_IF_FALSE 48

7 34 LOAD_FAST 2 ( level )
36 LOAD_CONST 5 ( 2 )
38 INPLACE_ADD
40 STORE_FAST 2 ( level )

8 42 LOAD_FAST 2 ( level )
44 LOAD_CONST 6 ( ' ' )
46 INPLACE_ADD
48 STORE_FAST 2 ( level )
50 JUMP_ABSOLUTE 18

9 >> 52 LOAD_FAST 2 ( level )
54 LOAD_CONST 7 ( ' ' )
56 INPLACE_ADD
58 STORE_FAST 2 ( level )

10 60 LOAD_FAST 2 ( level )
62 LOAD_CONST 8 ( ' ' )
64 INPLACE_ADD
66 STORE_FAST 2 ( level )

11 68 LOAD_FAST 2 ( level )
70 LOAD_CONST 9 ( ' ' )
72 INPLACE_ADD
74 STORE_FAST 2 ( level )
76 JUMP_ABSOLUTE 18
>> 78 POP_BLOCK

12 >> 80 LOAD_FAST 2 ( level )
82 RETURN_VALUE
