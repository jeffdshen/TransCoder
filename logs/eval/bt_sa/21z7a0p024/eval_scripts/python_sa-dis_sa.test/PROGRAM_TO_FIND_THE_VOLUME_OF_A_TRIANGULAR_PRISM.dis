{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( l , b , h ) :\n    return ( ( l * b * h ) / 2 )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (8448.900678262902,8135.461799983198,6577.239053611328,),\n    (-1849.728957491451,-4240.89241631363,-9953.518310747193,),\n    (412.667844022232,9798.083992381831,1449.9204200270522,),\n    (-5954.835911765373,-661.8872499003203,-8049.6051526695055,),\n    (8437.913444665008,8182.675681595904,9863.296545513396,),\n    (-7183.181663518317,-6846.746446198541,-971.2199894221352,),\n    (2340.7905920227954,5479.00956987109,7073.449591910562,),\n    (-7281.157547371143,-615.8705455524116,-3343.0245192607968,),\n    (471.3930826982504,1357.3753126091392,1907.815700915636,),\n    (-7550.426360065503,-2693.2262997056355,-9110.64755244532,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if abs(1 - (0.0000001 + abs(f_gold(*parameters_set))) / (abs(f_filled(*parameters_set)) + 0.0000001)) < 0.001:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findVolume ( l , b , h ) :\n    return ( ( l * b * h ) / 2 )\n"}
Disassembly of <code object findVolume at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( l )
2 LOAD_FAST 1 ( b )
4 BINARY_MULTIPLY
6 LOAD_CONST 1 ( 2 )
8 BINARY_TRUE_DIVIDE
10 LOAD_FAST 2 ( l )
12 LOAD_FAST 3 ( l )
14 BINARY_MULTIPLY
16 BINARY_ADD
18 RETURN_VALUE
