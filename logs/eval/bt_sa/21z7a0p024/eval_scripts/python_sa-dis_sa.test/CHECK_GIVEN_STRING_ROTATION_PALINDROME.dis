{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( string ) :\n    l = 0\n    h = len ( string ) - 1\n    while h > l :\n        l += 1\n        h -= 1\n        if string [ l - 1 ] != string [ h + 1 ] :\n            return False\n    return True\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('aadaa',),\n    ('2674377254',),\n    ('11',),\n    ('0011000',),\n    ('26382426486138',),\n    ('111010111010',),\n    ('abccba',),\n    ('5191',),\n    ('1110101101',),\n    ('abcdecbe',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def isPalindrome ( string ) :\n    l = 0\n    h = len ( string ) - 1\n    while h > l :\n        l += 1\n        h -= 1\n        if string [ l - 1 ] != string [ h + 1 ] :\n            return False\n    return True\n"}
Disassembly of <code object isPalindrome at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( l )

3 4 LOAD_GLOBAL 0 ( len )
6 LOAD_FAST 0 ( string )
8 CALL_FUNCTION 1
10 LOAD_CONST 2 ( 1 )
12 BINARY_SUBTRACT
14 STORE_FAST 2 ( l )

4 16 LOAD_FAST 1 ( l )
18 LOAD_CONST 3 ( 1 )
20 BINARY_SUBTRACT
22 LOAD_CONST 4 ( 2 )
24 BINARY_SUBTRACT
26 STORE_FAST 1 ( l )

5 28 LOAD_FAST 1 ( l )
30 LOAD_CONST 5 ( 2 )
32 BINARY_SUBTRACT
34 STORE_FAST 2 ( l )

6 36 LOAD_FAST 2 ( l )
38 LOAD_CONST 6 ( 3 )
40 BINARY_SUBTRACT
42 STORE_FAST 3 ( l )

7 44 LOAD_FAST 2 ( l )
46 LOAD_CONST 7 ( 4 )
48 BINARY_SUBTRACT
50 STORE_FAST 2 ( l )

8 52 LOAD_FAST 1 ( l )
54 LOAD_CONST 8 ( 5 )
56 BINARY_SUBTRACT
58 STORE_FAST 4 ( l )

9 60 LOAD_FAST 2 ( l )
62 LOAD_CONST 9 ( 1 )
64 BINARY_SUBTRACT
66 LOAD_FAST 3 ( l )
68 LOAD_CONST 10 ( 4 )
70 BINARY_SUBTRACT
72 COMPARE_OP 4 ( > )
74 POP_JUMP_IF_FALSE 84

10 76 LOAD_FAST 2 ( l )
78 LOAD_CONST 11 ( 4 )
80 INPLACE_ADD
82 STORE_FAST 2 ( l )

11 >> 84 LOAD_FAST 1 ( l )
86 LOAD_CONST 12 ( 5 )
88 BINARY_SUBTRACT
90 STORE_FAST 1 ( l )

12 92 LOAD_FAST 1 ( l )
94 LOAD_CONST 13 ( 4 )
96 BINARY_SUBTRACT
98 LOAD_FAST 1 ( l )
100 LOAD_CONST 14 ( 4 )
102 BINARY_SUBTRACT
104 BINARY_SUBTRACT
106 LOAD_FAST 1 ( l )
108 LOAD_CONST 15 ( 4 )
110 BINARY_SUBTRACT
112 BINARY_SUBTRACT
114 LOAD_FAST 1 ( l )
116 LOAD_CONST 16 ( 5 )
118 BINARY_SUBTRACT
120 LOAD_FAST 1 ( l )
122 LOAD_CONST 17 ( 4 )
124 BINARY_SUBTRACT
126 BINARY_SUBTRACT
128 LOAD_FAST 1 ( l )
130 LOAD_CONST 17 ( 4 )
132 BINARY_SUBTRACT
134 LOAD_FAST 1 ( l )
136 LOAD_CONST 18 ( 4 )
138 BINARY_SUBTRACT
140 BINARY_SUBTRACT
142 LOAD_FAST 1 ( l )
144 LOAD_CONST 19 ( 4 )
146 BINARY_SUBTRACT
148 LOAD_FAST 1 ( l )
150 LOAD_CONST 19 ( 4 )
152 BINARY_SUBTRACT
154 LOAD_FAST 1 ( l )
156 LOAD_CONST 19 ( 4 )
158 BINARY_SUBTRACT
160 BINARY_TRUE_DIVIDE
162 BINARY_SUBTRACT
164 RETURN_VALUE
