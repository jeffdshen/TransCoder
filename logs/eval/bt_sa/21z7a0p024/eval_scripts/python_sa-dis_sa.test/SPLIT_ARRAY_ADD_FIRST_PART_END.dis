{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , k ) :\n    for i in range ( 0 , k ) :\n        x = arr [ 0 ]\n        for j in range ( 0 , n - 1 ) :\n            arr [ j ] = arr [ j + 1 ]\n        arr [ n - 1 ] = x\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([75],0,0,),\n    ([-58, -60, -38, 48, -2, 32, -48, -46, 90, -54, -18, 28, 72, 86, 0, -2, -74, 12, -58, 90, -30, 10, -88, 2, -14, 82, -82, -46, 2, -74],27,17,),\n    ([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],7,7,),\n    ([45, 51, 26, 36, 10, 62, 62, 56, 61, 67, 86, 97, 31, 93, 32, 1, 14, 25, 24, 30, 1, 44, 7, 98, 56, 68, 53, 59, 30, 90, 79, 22],23,24,),\n    ([-88, -72, -64, -46, -40, -16, -8, 0, 22, 34, 44],6,6,),\n    ([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0],23,30,),\n    ([8, 17, 20, 23, 31, 32, 37, 37, 44, 45, 48, 64, 64, 67, 69, 71, 75, 77, 78, 81, 83, 87, 89, 92, 94],21,20,),\n    ([-8, -88, -68, 48, 8, 50, 30, -88, 74, -16, 6, 74, 36, 32, 22, 96, -2, 70, 40, -46, 98, 34, 2, 94],23,13,),\n    ([0, 0, 0, 0, 1, 1, 1, 1, 1],5,8,),\n    ([80, 14, 35, 25, 60, 86, 45, 95, 32, 29, 94, 6, 63, 66, 38],9,7,)\n        ]\n    filled_function_param = [\n    ([75],0,0,),\n    ([-58, -60, -38, 48, -2, 32, -48, -46, 90, -54, -18, 28, 72, 86, 0, -2, -74, 12, -58, 90, -30, 10, -88, 2, -14, 82, -82, -46, 2, -74],27,17,),\n    ([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],7,7,),\n    ([45, 51, 26, 36, 10, 62, 62, 56, 61, 67, 86, 97, 31, 93, 32, 1, 14, 25, 24, 30, 1, 44, 7, 98, 56, 68, 53, 59, 30, 90, 79, 22],23,24,),\n    ([-88, -72, -64, -46, -40, -16, -8, 0, 22, 34, 44],6,6,),\n    ([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0],23,30,),\n    ([8, 17, 20, 23, 31, 32, 37, 37, 44, 45, 48, 64, 64, 67, 69, 71, 75, 77, 78, 81, 83, 87, 89, 92, 94],21,20,),\n    ([-8, -88, -68, 48, 8, 50, 30, -88, 74, -16, 6, 74, 36, 32, 22, 96, -2, 70, 40, -46, 98, 34, 2, 94],23,13,),\n    ([0, 0, 0, 0, 1, 1, 1, 1, 1],5,8,),\n    ([80, 14, 35, 25, 60, 86, 45, 95, 32, 29, 94, 6, 63, 66, 38],9,7,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        f_filled(*(filled_function_param[i]))\n        f_gold(*parameters_set)\n        if parameters_set == filled_function_param[i]:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def splitArr ( arr , n , k ) :\n    for i in range ( 0 , k ) :\n        x = arr [ 0 ]\n        for j in range ( 0 , n - 1 ) :\n            arr [ j ] = arr [ j + 1 ]\n        arr [ n - 1 ] = x\n"}
Disassembly of <code object splitArr at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 SETUP_LOOP 64 ( to 66 )
2 LOAD_GLOBAL 0 ( range )
4 LOAD_CONST 1 ( 0 )
6 LOAD_FAST 1 ( n )
8 CALL_FUNCTION 2
10 GET_ITER
>> 12 FOR_ITER 48 ( to 64 )
14 STORE_FAST 2 ( i )

3 16 LOAD_FAST 2 ( i )
18 LOAD_CONST 2 ( 1 )
20 BINARY_SUBSCR
22 STORE_FAST 3 ( x )

4 24 SETUP_LOOP 40 ( to 62 )
26 LOAD_GLOBAL 0 ( range )
28 LOAD_CONST 1 ( 0 )
30 LOAD_FAST 1 ( n )
32 CALL_FUNCTION 2
34 GET_ITER
>> 36 FOR_ITER 24 ( to 60 )
38 STORE_FAST 4 ( j )

5 40 LOAD_FAST 2 ( i )
42 LOAD_FAST 4 ( j )
44 BINARY_SUBSCR
46 LOAD_FAST 3 ( x )
48 LOAD_FAST 4 ( j )
50 BINARY_SUBSCR
52 LOAD_FAST 3 ( x )
54 LOAD_FAST 4 ( j )
56 BINARY_SUBSCR
58 BINARY_SUBTRACT
60 LOAD_FAST 3 ( x )
62 LOAD_FAST 4 ( j )
64 BINARY_SUBSCR
66 BINARY_SUBTRACT
68 LOAD_FAST 3 ( x )
70 LOAD_FAST 4 ( j )
72 BINARY_SUBSCR
74 BINARY_SUBTRACT
76 LOAD_FAST 3 ( x )
78 LOAD_FAST 4 ( j )
80 BINARY_SUBSCR
82 BINARY_SUBTRACT
84 LOAD_FAST 3 ( x )
86 LOAD_FAST 4 ( j )
88 BINARY_SUBSCR
90 BINARY_SUBTRACT
92 LOAD_FAST 3 ( x )
94 LOAD_FAST 4 ( j )
96 BINARY_SUBSCR
98 BINARY_SUBTRACT
100 LOAD_FAST 3 ( x )
102 LOAD_FAST 4 ( j )
104 STORE_SUBSCR

6 106 LOAD_FAST 2 ( i )
108 LOAD_FAST 4 ( j )
110 BINARY_SUBSCR
112 LOAD_FAST 3 ( x )
114 LOAD_FAST 4 ( j )
116 STORE_SUBSCR

7 118 LOAD_FAST 2 ( i )
120 LOAD_FAST 4 ( j )
122 STORE_SUBSCR

8 124 LOAD_FAST 2 ( i )
126 LOAD_FAST 4 ( j )
128 STORE_SUBSCR
130 JUMP_ABSOLUTE 36
>> 132 POP_BLOCK

9 >> 134 LOAD_FAST 2 ( i )
136 RETURN_VALUE
