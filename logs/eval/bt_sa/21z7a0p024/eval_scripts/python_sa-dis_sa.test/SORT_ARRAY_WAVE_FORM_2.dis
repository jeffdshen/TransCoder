{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    arr.sort ( )\n    for i in range ( 0 , n - 1 , 2 ) :\n        arr [ i ] , arr [ i + 1 ] = arr [ i + 1 ] , arr [ i ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([5, 11, 14, 14, 17, 20, 30, 35, 43, 44, 44, 45, 51, 56, 56, 61, 63, 65, 70, 71, 83],20,),\n    ([52, 80, -10, 54, 58, -78, -30, -98],6,),\n    ([0, 0, 0, 1, 1, 1, 1, 1, 1],5,),\n    ([26, 83, 21, 22, 58, 42, 4, 14, 11, 53, 33, 3, 92, 44],10,),\n    ([-94, -78, -76, -42, -26, -16, -10, 4, 16, 38, 60, 86, 98],9,),\n    ([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0],8,),\n    ([5, 12, 20, 26, 30, 35, 39, 44, 54, 56, 70, 72, 74, 74, 79, 80, 88, 95, 95, 98],10,),\n    ([-80, 22, 36, 90, -22, -10, 40, -10, -68, 88, 48, 22, 8, 2, -76, -88, -2, 66, -84, 42, 0],12,),\n    ([0, 0, 0, 1, 1, 1, 1, 1, 1],4,),\n    ([61, 79, 82, 75, 51, 64, 20, 42, 57, 70, 9, 22, 64, 38, 60, 53, 53, 56, 24, 37, 52, 67, 47, 2, 59, 89, 82, 11, 22],20,)\n        ]\n    filled_function_param = [\n    ([5, 11, 14, 14, 17, 20, 30, 35, 43, 44, 44, 45, 51, 56, 56, 61, 63, 65, 70, 71, 83],20,),\n    ([52, 80, -10, 54, 58, -78, -30, -98],6,),\n    ([0, 0, 0, 1, 1, 1, 1, 1, 1],5,),\n    ([26, 83, 21, 22, 58, 42, 4, 14, 11, 53, 33, 3, 92, 44],10,),\n    ([-94, -78, -76, -42, -26, -16, -10, 4, 16, 38, 60, 86, 98],9,),\n    ([1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0],8,),\n    ([5, 12, 20, 26, 30, 35, 39, 44, 54, 56, 70, 72, 74, 74, 79, 80, 88, 95, 95, 98],10,),\n    ([-80, 22, 36, 90, -22, -10, 40, -10, -68, 88, 48, 22, 8, 2, -76, -88, -2, 66, -84, 42, 0],12,),\n    ([0, 0, 0, 1, 1, 1, 1, 1, 1],4,),\n    ([61, 79, 82, 75, 51, 64, 20, 42, 57, 70, 9, 22, 64, 38, 60, 53, 53, 56, 24, 37, 52, 67, 47, 2, 59, 89, 82, 11, 22],20,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        f_filled(*(filled_function_param[i]))\n        f_gold(*parameters_set)\n        if parameters_set == filled_function_param[i]:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def sortInWave ( arr , n ) :\n    arr.sort ( )\n    for i in range ( 0 , n - 1 , 2 ) :\n        arr [ i ] , arr [ i + 1 ] = arr [ i + 1 ] , arr [ i ]\n"}
Disassembly of <code object sortInWave at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( arr )
2 LOAD_METHOD 0 ( sort )
4 CALL_METHOD 0
6 POP_TOP

3 8 SETUP_LOOP 64 ( to 66 )
10 LOAD_GLOBAL 1 ( range )
12 LOAD_CONST 1 ( 0 )
14 LOAD_CONST 2 ( 1 )
16 LOAD_CONST 3 ( 2 )
18 LOAD_CONST 4 ( 2 )
20 LOAD_CONST 5 ( 3 )
22 LOAD_CONST 6 ( 4 )
24 LOAD_CONST 7 ( 5 )
26 LOAD_CONST 7 ( 5 )
28 LOAD_CONST 8 ( 6 )
30 LOAD_CONST 9 ( 8 )
32 LOAD_CONST 10 ( 10 )
34 LOAD_CONST 11 ( 12 )
36 LOAD_CONST 12 ( 14 )
38 LOAD_CONST 13 ( 16 )
40 LOAD_CONST 14 ( 18 )
42 LOAD_CONST 15 ( 19 )
44 LOAD_CONST 16 ( 22 )
46 LOAD_CONST 17 ( 21 )
48 LOAD_CONST 18 ( 21 )
50 LOAD_CONST 19 ( 21 )
52 LOAD_CONST 20 ( 22 )
54 LOAD_CONST 19 ( 21 )
56 LOAD_CONST 19 ( 21 )
58 LOAD_CONST 20 ( 22 )
60 LOAD_CONST 19 ( 21 )
62 LOAD_CONST 21 ( 21 )
64 LOAD_CONST 22 ( 22 )
66 LOAD_CONST 23 ( 21 )
68 LOAD_CONST 23 ( 21 )
70 LOAD_CONST 24 ( 22 )
72 LOAD_CONST 23 ( 21 )
74 LOAD_CONST 22 ( 22 )
76 LOAD_CONST 23 ( 21 )
78 LOAD_CONST 23 ( 21 )
80 LOAD_CONST 23 ( 21 )
82 LOAD_CONST 24 ( 22 )
84 LOAD_CONST 23 ( 21 )
86 LOAD_CONST 23 ( 21 )
88 LOAD_CONST 23 ( 21 )
90 LOAD_CONST 23 ( 21 )
92 LOAD_CONST 23 ( 21 )
94 LOAD_CONST 24 ( 22 )
96 LOAD_CONST 23 ( 21 )
98 LOAD_CONST 22 ( 22 )
100 LOAD_CONST 23 ( 21 )
102 LOAD_CONST 23 ( 21 )
104 LOAD_CONST 23 ( 21 )
106 LOAD_CONST 23 ( 21 )
108 LOAD_CONST 24 ( 22 )
110 LOAD_CONST 23 ( 21 )
112 LOAD_CONST 23 ( 21 )
114 LOAD_CONST 23 ( 21 )
116 LOAD_CONST 23 ( 21 )
118 LOAD_CONST 24 ( 22 )
120 LOAD_CONST 23 ( 21 )
122 LOAD_CONST 22 ( 22 )
124 LOAD_CONST 23 ( 21 )
126 LOAD_CONST 23 ( 21 )
128 LOAD_CONST 24 ( 22 )
130 LOAD_CONST 23 ( 21 )
132 LOAD_CONST 23 ( 21 )
134 LOAD_CONST 22 ( 22 )
136 LOAD_CONST 23 ( 21 )
138 LOAD_CONST 23 ( 21 )
140 LOAD_CONST 23 ( 21 )
142 LOAD_CONST 24