{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    if n < 3 :\n        return n\n    elif n >= 3 and n < 10 :\n        return n - 1\n    po = 1\n    while n / po > 9 :\n        po = po * 10\n    msd = n / po\n    if msd != 3 :\n        return f_gold ( msd ) * f_gold ( po - 1 ) + f_gold ( msd ) + f_gold ( n % po )\n    else :\n        return f_gold ( msd * po - 1 )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (85,),\n    (86,),\n    (3,),\n    (35,),\n    (59,),\n    (38,),\n    (33,),\n    (15,),\n    (75,),\n    (74,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def count ( n ) :\n    if n < 3 :\n        return n\n    elif n >= 3 and n < 10 :\n        return n - 1\n    po = 1\n    while n / po > 9 :\n        po = po * 10\n    msd = n / po\n    if msd != 3 :\n        return count ( msd ) * count ( po - 1 ) + count ( msd ) + count ( n % po )\n    else :\n        return count ( msd * po - 1 )\n"}
Disassembly of <code object count at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 3 )
4 COMPARE_OP 0 ( < )
6 POP_JUMP_IF_FALSE 12

3 8 LOAD_FAST 0 ( n )
10 LOAD_CONST 2 ( - 1 )
12 COMPARE_OP 0 ( < )
14 POP_JUMP_IF_FALSE 20

4 16 LOAD_FAST 0 ( n )
18 LOAD_CONST 3 ( - 1 )
20 BINARY_SUBSCR
22 RETURN_VALUE

5 >> 24 LOAD_FAST 0 ( n )
26 LOAD_CONST 4 ( - 1 )
28 COMPARE_OP 0 ( < )
30 POP_JUMP_IF_FALSE 36

6 32 LOAD_FAST 0 ( n )
34 LOAD_CONST 3 ( - 1 )
36 COMPARE_OP 0 ( < )
38 POP_JUMP_IF_FALSE 36

7 40 LOAD_FAST 0 ( n )
42 LOAD_CONST 3 ( - 1 )
44 INPLACE_SUBTRACT
46 STORE_FAST 0 ( n )

8 48 LOAD_FAST 0 ( n )
50 LOAD_CONST 4 ( - 1 )
52 INPLACE_SUBTRACT
54 STORE_FAST 0 ( n )

9 56 LOAD_FAST 0 ( n )
58 LOAD_CONST 5 ( - 1 )
60 INPLACE_SUBTRACT
62 STORE_FAST 0 ( n )

10 64 LOAD_FAST 0 ( n )
66 LOAD_CONST 6 ( - 1 )
68 INPLACE_SUBTRACT
70 STORE_FAST 0 ( n )

11 72 LOAD_FAST 0 ( n )
74 LOAD_CONST 7 ( - 1 )
76 INPLACE_SUBTRACT
78 STORE_FAST 0 ( n )

12 80 LOAD_FAST 0 ( n )
82 LOAD_CONST 7 ( - 1 )
84 INPLACE_SUBTRACT
86 STORE_FAST 0 ( n )

13 88 LOAD_FAST 0 ( n )
90 LOAD_CONST 8 ( - 1 )
92 INPLACE_SUBTRACT
94 STORE_FAST 0 ( n )

14 96 LOAD_FAST 0 ( n )
98 LOAD_CONST 9 ( - 1 )
100 INPLACE_SUBTRACT
102 STORE_FAST 0 ( n )
104 JUMP_ABSOLUTE 24
>> 106 POP_BLOCK

15 >> 108 LOAD_FAST 0 ( n )
110 RETURN_VALUE
