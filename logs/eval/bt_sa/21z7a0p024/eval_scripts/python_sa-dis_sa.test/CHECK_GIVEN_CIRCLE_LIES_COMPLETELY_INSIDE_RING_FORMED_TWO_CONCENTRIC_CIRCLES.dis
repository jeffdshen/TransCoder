{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( r , R , r1 , x1 , y1 ) :\n    dis = int ( math.sqrt ( x1 * x1 + y1 * y1 ) )\n    return ( dis - r1 >= R and dis + r1 <= r )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (8,4,2,6,0,),\n    (400,1,10,74,38,),\n    (1,400,10,74,38,),\n    (61,40,2,50,0,),\n    (60,49,68,77,71,),\n    (88,10,69,71,26,),\n    (60,79,92,29,38,),\n    (26,88,75,84,10,),\n    (33,65,57,21,61,),\n    (70,57,77,52,87,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def checkcircle ( r , R , r1 , x1 , y1 ) :\n    dis = int ( math.sqrt ( x1 * x1 + y1 * y1 ) )\n    return ( dis - r1 >= R and dis + r1 <= r )\n"}
Disassembly of <code object checkcircle at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( int )
2 LOAD_GLOBAL 1 ( math )
4 LOAD_METHOD 2 ( sqrt )
6 LOAD_FAST 0 ( r )
8 LOAD_FAST 1 ( R )
10 LOAD_FAST 2 ( n )
12 BINARY_MULTIPLY
14 CALL_METHOD 1
16 CALL_FUNCTION 1
18 STORE_FAST 3 ( dis )

3 20 LOAD_FAST 3 ( dis )
22 LOAD_FAST 2 ( n )
24 COMPARE_OP 5 ( >= )
26 POP_JUMP_IF_FALSE 32

4 28 LOAD_FAST 3 ( dis )
30 LOAD_FAST 2 ( n )
32 BINARY_SUBSCR
34 RETURN_VALUE

5 >> 36 LOAD_FAST 3 ( dis )
38 LOAD_FAST 2 ( n )
40 BINARY_SUBSCR
42 RETURN_VALUE
44 LOAD_CONST 0 ( None )
46 RETURN_VALUE
