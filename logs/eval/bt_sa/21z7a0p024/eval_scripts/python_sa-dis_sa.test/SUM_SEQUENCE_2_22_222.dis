{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( n ) :\n    return 0.0246 * ( math.pow ( 10 , n ) - 1 - ( 9 * n ) )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (88,),\n    (79,),\n    (7,),\n    (36,),\n    (23,),\n    (10,),\n    (27,),\n    (30,),\n    (71,),\n    (6,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if abs(1 - (0.0000001 + abs(f_gold(*parameters_set))) / (abs(f_filled(*parameters_set)) + 0.0000001)) < 0.001:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def sumOfSeries ( n ) :\n    return 0.0246 * ( math.pow ( 10 , n ) - 1 - ( 9 * n ) )\n"}
Disassembly of <code object sumOfSeries at 0x7f2b0164d4b0, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0.0250 )
2 LOAD_GLOBAL 0 ( math )
4 LOAD_METHOD 1 ( pow )
6 LOAD_CONST 2 ( 10 )
8 LOAD_FAST 0 ( n )
10 LOAD_CONST 3 ( 1 )
12 BINARY_SUBTRACT
14 LOAD_CONST 4 ( 9 )
16 LOAD_CONST 5 ( 10 )
18 CALL_METHOD 3
20 BINARY_MULTIPLY
22 LOAD_GLOBAL 0 ( math )
24 LOAD_METHOD 1 ( pow )
26 LOAD_CONST 2 ( 10 )
28 LOAD_FAST 0 ( n )
30 LOAD_CONST 3 ( 1 )
32 BINARY_SUBTRACT
34 LOAD_CONST 6 ( 10 )
36 CALL_METHOD 3
38 BINARY_MULTIPLY
40 LOAD_GLOBAL 0 ( math )
42 LOAD_METHOD 1 ( pow )
44 LOAD_CONST 2 ( 10 )
46 LOAD_FAST 0 ( n )
48 LOAD_CONST 3 ( 1 )
50 BINARY_SUBTRACT
52 LOAD_CONST 7 ( 10 )
54 CALL_METHOD 3
56 BINARY_MULTIPLY
58 RETURN_VALUE
