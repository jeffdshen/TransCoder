{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( tree , k ) :\n    level = - 1\n    sum = 0\n    n = len ( tree )\n    for i in range ( n ) :\n        if ( tree [ i ] == '(' ) :\n            level += 1\n        elif ( tree [ i ] == ')' ) :\n            level -= 1\n        else :\n            if ( level == k ) :\n                sum += ( ord ( tree [ i ] ) - ord ( '0' ) )\n    return sum\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('(0(5(6()())(4()(9()())))(7(1()())(3()())))',2,),\n    ('(8(3(2()())(6(5()())()))(5(10()())(7(13()())())))',3,),\n    ('(0(5(6()())(4()(9()())))(7(1()())(3()())))',1,),\n    ('(8(3(2()())(6(5()())()))(5(10()())(7(13()())())))',2,),\n    ('(8(3(2()())(6(5()())()))(5(10()())(7(13()())())))',4,),\n    ('(8(3(2()())(6(5()())()))(5(10()())(7(13()())())))',100,),\n    ('(0(5(6()())(4()(9()())))(7(1()())(3()())))',3,),\n    ('(0(5(6()())(4()(9()())))(7(1()())(3()())))',0,),\n    ('0010',12,),\n    ('kjtdgmy',97,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def sumAtKthLevel ( tree , k ) :\n    level = - 1\n    sum = 0\n    n = len ( tree )\n    for i in range ( n ) :\n        if ( tree [ i ] == '(' ) :\n            level += 1\n        elif ( tree [ i ] == ')' ) :\n            level -= 1\n        else :\n            if ( level == k ) :\n                sum += ( ord ( tree [ i ] ) - ord ( '0' ) )\n    return sum\n"}
Disassembly of <code object sumAtKthLevel at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( - 1 )
2 STORE_FAST 2 ( level )

3 4 LOAD_CONST 2 ( 0 )
6 STORE_FAST 3 ( sum )

4 8 LOAD_GLOBAL 0 ( len )
10 LOAD_FAST 0 ( tree )
12 CALL_FUNCTION 1
14 STORE_FAST 4 ( n )

5 16 SETUP_LOOP 64 ( to 76 )
>> 18 LOAD_FAST 4 ( n )
20 LOAD_FAST 0 ( tree )
22 LOAD_FAST 1 ( k )
24 BINARY_SUBSCR
26 GET_ITER
>> 28 FOR_ITER 56 ( to 74 )
30 STORE_FAST 5 ( i )

6 32 LOAD_FAST 2 ( level )
34 LOAD_FAST 5 ( i )
36 BINARY_SUBSCR
38 STORE_FAST 6 ( j )

7 40 LOAD_FAST 2 ( level )
42 LOAD_FAST 6 ( j )
44 BINARY_SUBSCR
46 LOAD_FAST 5 ( i )
48 BINARY_SUBSCR
50 LOAD_FAST 6 ( j )
52 BINARY_SUBSCR
54 LOAD_FAST 4 ( n )
56 BINARY_SUBSCR
58 LOAD_FAST 5 ( i )
60 BINARY_SUBSCR
62 LOAD_FAST 6 ( j )
64 BINARY_SUBSCR
66 LOAD_FAST 5 ( i )
68 BINARY_SUBSCR
70 LOAD_FAST 5 ( i )
72 BINARY_SUBSCR
74 LOAD_FAST 7 ( n )
76 BINARY_SUBSCR
78 LOAD_FAST 6 ( j )
80 BINARY_SUBSCR
82 LOAD_FAST 7 ( n )
84 BINARY_SUBSCR
86 LOAD_FAST 7 ( n )
88 STORE_SUBSCR

8 90 LOAD_FAST 2 ( level )
92 LOAD_FAST 4 ( n )
94 BINARY_SUBSCR
96 LOAD_FAST 6 ( j )
98 STORE_SUBSCR

9 100 LOAD_FAST 2 ( level )
102 LOAD_FAST 4 ( n )
104 BINARY_SUBSCR
106 LOAD_FAST 6 ( j )
108 STORE_SUBSCR

10 110 LOAD_FAST 2 ( level )
112 LOAD_FAST 4 ( n )
114 STORE_SUBSCR
116 JUMP_ABSOLUTE 28
>> 118 POP_BLOCK

11 >> 120 LOAD_FAST 2 ( level )
122 RETURN_VALUE
