{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    S = 0\n    for i in range ( 1 , n + 1 ) :\n        S += i * i - ( i - 1 ) * ( i - 1 )\n    return S\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (39,),\n    (20,),\n    (10,),\n    (39,),\n    (70,),\n    (21,),\n    (21,),\n    (80,),\n    (89,),\n    (99,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def summingSeries ( n ) :\n    S = 0\n    for i in range ( 1 , n + 1 ) :\n        S += i * i - ( i - 1 ) * ( i - 1 )\n    return S\n"}
Disassembly of <code object summingSeries at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( S )

3 4 SETUP_LOOP 64 ( to 76 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_CONST 2 ( 1 )
10 LOAD_FAST 0 ( n )
12 LOAD_CONST 2 ( 1 )
14 BINARY_ADD
16 CALL_FUNCTION 2
18 GET_ITER
>> 20 FOR_ITER 48 ( to 74 )
22 STORE_FAST 2 ( i )

4 24 LOAD_FAST 1 ( S )
26 LOAD_FAST 2 ( i )
28 BINARY_SUBSCR
30 LOAD_FAST 2 ( i )
32 BINARY_SUBSCR
34 LOAD_FAST 1 ( S )
36 COMPARE_OP 2 ( == )
38 POP_JUMP_IF_FALSE 20

5 40 LOAD_FAST 1 ( S )
42 LOAD_FAST 2 ( i )
44 BINARY_SUBSCR
46 LOAD_FAST 2 ( i )
48 BINARY_SUBSCR
50 LOAD_FAST 2 ( i )
52 BINARY_SUBSCR
54 LOAD_FAST 2 ( i )
56 BINARY_SUBSCR
58 LOAD_FAST 2 ( i )
60 BINARY_SUBSCR
62 LOAD_FAST 2 ( i )
64 STORE_SUBSCR

6 66 LOAD_FAST 1 ( S )
68 LOAD_FAST 2 ( i )
70 BINARY_SUBSCR
72 LOAD_FAST 2 ( i )
74 BINARY_SUBSCR
76 LOAD_FAST 2 ( i )
78 BINARY_SUBSCR
80 LOAD_FAST 2 ( i )
82 BINARY_SUBSCR
84 LOAD_FAST 2 ( i )
86 STORE_SUBSCR
88 JUMP_ABSOLUTE 20
>> 90 POP_BLOCK
>> 92 JUMP_ABSOLUTE 20
>> 94 POP_BLOCK
>> 96 LOAD_CONST 0 ( None )
98 RETURN_VALUE
