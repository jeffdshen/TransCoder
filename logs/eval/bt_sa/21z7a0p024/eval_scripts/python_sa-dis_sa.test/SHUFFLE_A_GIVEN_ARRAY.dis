{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport random\n\ndef f_gold ( arr , n ) :\n    for i in range ( n - 1 , 0 , - 1 ) :\n        j = random.randint ( 0 , i + 1 )\n        arr [ i ] , arr [ j ] = arr [ j ] , arr [ i ]\n    return arr\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([4, 4, 10, 10, 10, 12, 14, 16, 20, 21, 21, 22, 23, 25, 26, 28, 29, 29, 31, 32, 36, 38, 39, 40, 42, 43, 44, 46, 49, 56, 58, 61, 64, 67, 67, 73, 76, 80, 81, 82, 89, 89, 90, 92, 96, 97],38,),\n    ([30, 78, -42, 0, 98, -58],3,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],32,),\n    ([78, 5, 87, 36, 49, 89, 35, 84, 76, 91, 7, 64, 56, 80, 92, 10, 32, 7, 77, 97, 2, 60, 27, 65, 72, 39, 97],16,),\n    ([-98, -98, -96, -94, -86, -86, -84, -84, -78, -76, -72, -52, -48, -46, -46, -40, -38, -32, -24, -24, 2, 4, 18, 18, 18, 24, 24, 24, 26, 40, 40, 42, 48, 50, 54, 56, 58, 62, 80, 88, 92],23,),\n    ([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1],21,),\n    ([2, 15, 20, 37, 42, 50, 61, 99],7,),\n    ([-14, 86, -46, 24, -4, 18, 88, -64, 72, 68, 22, -90, -78, -20, -70, -30, 12, 92, 68, -80, 88, 98, 6, 8, -34, 96, -68, -76, -68, 84, -78, 92, -32, -82, 14, -60],22,),\n    ([0, 1],1,),\n    ([23, 40, 62, 21, 87, 54, 76, 72, 76, 60, 89, 74, 13, 75, 91, 53, 96, 94, 12, 36, 60, 62, 55, 82, 27, 80, 97, 42, 25, 98, 9, 8, 45, 47, 55, 67, 91, 25],32,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def randomize ( arr , n ) :\n    for i in range ( n - 1 , 0 , - 1 ) :\n        j = random.randint ( 0 , i + 1 )\n        arr [ i ] , arr [ j ] = arr [ j ] , arr [ i ]\n    return arr\n"}
Disassembly of <code object randomize at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 SETUP_LOOP 76 ( to 78 )
2 LOAD_GLOBAL 0 ( range )
4 LOAD_CONST 1 ( 1 )
6 LOAD_CONST 2 ( 0 )
8 LOAD_CONST 3 ( - 1 )
10 CALL_FUNCTION 3
12 GET_ITER
>> 14 FOR_ITER 68 ( to 76 )
16 STORE_FAST 2 ( i )

3 18 LOAD_GLOBAL 1 ( random )
20 LOAD_METHOD 2 ( randint )
22 LOAD_CONST 1 ( 0 )
24 LOAD_CONST 3 ( - 1 )
26 CALL_METHOD 2
28 STORE_FAST 3 ( j )

4 30 LOAD_FAST 3 ( j )
32 LOAD_FAST 2 ( i )
34 BINARY_SUBSCR
36 STORE_FAST 4 ( j )

5 38 LOAD_FAST 3 ( j )
40 LOAD_FAST 4 ( j )
42 BINARY_SUBSCR
44 LOAD_FAST 1 ( n )
46 COMPARE_OP 4 ( > )
48 POP_JUMP_IF_FALSE 14

6 50 LOAD_FAST 3 ( j )
52 LOAD_FAST 2 ( i )
54 BINARY_SUBSCR
56 LOAD_FAST 1 ( n )
58 COMPARE_OP 4 ( > )
60 POP_JUMP_IF_FALSE 14

7 62 LOAD_FAST 3 ( j )
64 LOAD_FAST 2 ( i )
66 BINARY_SUBSCR
68 LOAD_FAST 1 ( n )
70 COMPARE_OP 4 ( > )
72 POP_JUMP_IF_FALSE 14

8 74 LOAD_FAST 3 ( j )
76 LOAD_FAST 2 ( i )
78 BINARY_SUBSCR
80 LOAD_FAST 1 ( n )
82 COMPARE_OP 4 ( > )
84 POP_JUMP_IF_FALSE 14

9 86 LOAD_FAST 3 ( j )
88 LOAD_FAST 2 ( i )
90 BINARY_SUBSCR
92 LOAD_FAST 1 ( n )
94 LOAD_FAST 2 ( i )
96 STORE_SUBSCR

10 98 LOAD_FAST 3 ( j )
100 LOAD_FAST 2 ( i )
102 BINARY_SUBSCR
104 LOAD_FAST 1 ( n )
106 COMPARE_OP 4 ( > )
108 POP_JUMP_IF_FALSE 14

11 110 LOAD_FAST 3 ( j )
112 LOAD_FAST 2 ( i )
114 BINARY_SUBSCR
116 LOAD_FAST 1 ( n )
118 COMPARE_OP 4 ( > )
120 POP_JUMP_IF_FALSE 14

12 122 LOAD_FAST 3 ( j )
124 LOAD_FAST 2 ( i )
126 BINARY_SUBSCR
128 LOAD_FAST 1 ( n )
130 COMPARE_OP 4 ( > )
132 POP_JUMP_IF_FALSE 14
134 LOAD_FAST 3 ( j )
136 LOAD_FAST 2 ( i )
138 BINARY_SUBSCR
140 LOAD_FAST 1 ( n )
142 COMPARE_OP 4 ( > )
144 POP_JUMP_IF_FALSE 14

13 146 LOAD_FAST 3 ( j )
148 LOAD_FAST 2 ( i )
150 BINARY_SUBSCR
152 LOAD_FAST 1 ( n )
154 STORE_SUBSCR
156 JUMP_ABSOLUTE 14
>> 158 POP_BLOCK

14