{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( s , c ) :\n    res = 0\n    for i in range ( len ( s ) ) :\n        if ( s [ i ] == c ) :\n            res = res + 1\n    return res\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('mhjnKfd','l',),\n    ('716662107','6',),\n    ('01','1',),\n    ('wPHSxIbnHakGRO','n',),\n    ('721106','8',),\n    ('111','0',),\n    ('TIBFU','Q',),\n    ('0','3',),\n    ('10','0',),\n    ('lqq','d',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def count ( s , c ) :\n    res = 0\n    for i in range ( len ( s ) ) :\n        if ( s [ i ] == c ) :\n            res = res + 1\n    return res\n"}
Disassembly of <code object count at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 2 ( res )

3 4 SETUP_LOOP 64 ( to 66 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_GLOBAL 1 ( len )
10 LOAD_FAST 0 ( s )
12 CALL_FUNCTION 1
14 CALL_FUNCTION 1
16 GET_ITER
>> 18 FOR_ITER 48 ( to 64 )
20 STORE_FAST 3 ( i )

4 22 LOAD_FAST 0 ( s )
24 LOAD_FAST 3 ( i )
26 BINARY_SUBSCR
28 LOAD_FAST 1 ( c )
30 COMPARE_OP 2 ( == )
32 POP_JUMP_IF_FALSE 42

5 34 LOAD_FAST 2 ( res )
36 LOAD_CONST 1 ( 0 )
38 BINARY_SUBSCR
40 STORE_FAST 2 ( res )

6 >> 42 LOAD_FAST 2 ( res )
44 LOAD_CONST 2 ( 1 )
46 BINARY_SUBSCR
48 LOAD_FAST 1 ( c )
50 COMPARE_OP 2 ( == )
52 POP_JUMP_IF_FALSE 56

7 54 LOAD_FAST 2 ( res )
56 LOAD_CONST 2 ( 1 )
58 BINARY_SUBSCR
60 STORE_FAST 2 ( res )
62 JUMP_ABSOLUTE 18

8 >> 64 LOAD_FAST 2 ( res )
66 LOAD_CONST 3 ( 2 )
68 BINARY_SUBSCR
70 LOAD_FAST 1 ( c )
72 COMPARE_OP 2 ( == )
74 POP_JUMP_IF_FALSE 18

9 76 LOAD_FAST 2 ( res )
78 LOAD_CONST 4 ( 1 )
80 BINARY_SUBSCR
82 LOAD_FAST 1 ( c )
84 COMPARE_OP 2 ( == )
86 POP_JUMP_IF_FALSE 18

10 88 LOAD_FAST 2 ( res )
90 LOAD_CONST 5 ( '' )
92 INPLACE_ADD
94 STORE_FAST 2 ( res )

11 96 LOAD_FAST 2 ( res )
98 LOAD_CONST 6 ( '' )
100 INPLACE_ADD
102 STORE_FAST 2 ( res )

12 104 LOAD_FAST 2 ( res )
106 LOAD_CONST 7 ( '' )
108 INPLACE_ADD
110 STORE_FAST 2 ( res )

13 112 LOAD_FAST 2 ( res )
114 LOAD_CONST 8 ( '' )
116 INPLACE_ADD
118 STORE_FAST 2 ( res )

14 120 LOAD_FAST 2 ( res )
122 LOAD_CONST 9 ( 0 )
124 INPLACE_ADD
126 STORE_FAST 2 ( res )
128 JUMP_ABSOLUTE 18
>> 130 POP_BLOCK

15 >> 132 LOAD_FAST 2 ( res )
134 RETURN_VALUE
