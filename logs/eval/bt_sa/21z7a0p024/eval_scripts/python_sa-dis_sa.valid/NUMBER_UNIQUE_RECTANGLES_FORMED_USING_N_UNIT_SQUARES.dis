{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( n ) :\n    ans = 0\n    for length in range ( 1 , int ( math.sqrt ( n ) ) + 1 ) :\n        height = length\n        while ( height * length <= n ) :\n            ans += 1\n            height += 1\n    return ans\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (34,),\n    (49,),\n    (41,),\n    (17,),\n    (67,),\n    (38,),\n    (59,),\n    (64,),\n    (61,),\n    (58,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countRect ( n ) :\n    ans = 0\n    for length in range ( 1 , int ( math.sqrt ( n ) ) + 1 ) :\n        height = length\n        while ( height * length <= n ) :\n            ans += 1\n            height += 1\n    return ans\n"}
Disassembly of <code object countRect at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( ans )

3 4 SETUP_LOOP 64 ( to 76 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_CONST 2 ( 1 )
10 LOAD_GLOBAL 1 ( int )
12 LOAD_FAST 0 ( n )
14 CALL_FUNCTION 1
16 LOAD_CONST 2 ( 1 )
18 BINARY_ADD
20 CALL_FUNCTION 2
22 GET_ITER
>> 24 FOR_ITER 48 ( to 74 )
26 STORE_FAST 2 ( i )

4 28 LOAD_FAST 2 ( i )
30 LOAD_CONST 3 ( 1 )
32 INPLACE_ADD
34 STORE_FAST 1 ( ans )

5 36 LOAD_FAST 1 ( ans )
38 LOAD_FAST 2 ( i )
40 INPLACE_ADD
42 STORE_FAST 1 ( ans )

6 44 LOAD_FAST 1 ( ans )
46 LOAD_FAST 2 ( i )
48 INPLACE_ADD
50 STORE_FAST 1 ( ans )

7 52 LOAD_FAST 1 ( ans )
54 LOAD_FAST 2 ( i )
56 INPLACE_ADD
58 STORE_FAST 1 ( ans )

8 60 LOAD_FAST 1 ( ans )
62 LOAD_FAST 2 ( i )
64 INPLACE_ADD
66 STORE_FAST 1 ( ans )
68 JUMP_ABSOLUTE 24
>> 70 POP_BLOCK

9 >> 72 LOAD_FAST 1 ( ans )
74 RETURN_VALUE
