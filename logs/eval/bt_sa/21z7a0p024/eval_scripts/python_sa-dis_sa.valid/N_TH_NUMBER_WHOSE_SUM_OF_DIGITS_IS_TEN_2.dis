{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( n ) :\n    nthElement = 19 + ( n - 1 ) * 9\n    outliersCount = int ( math.log10 ( nthElement ) ) - 1\n    nthElement += 9 * outliersCount\n    return nthElement\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (68,),\n    (70,),\n    (69,),\n    (93,),\n    (99,),\n    (44,),\n    (91,),\n    (8,),\n    (83,),\n    (51,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findNth ( n ) :\n    nthElement = 19 + ( n - 1 ) * 9\n    outliersCount = int ( math.log10 ( nthElement ) ) - 1\n    nthElement += 9 * outliersCount\n    return nthElement\n"}
Disassembly of <code object findNth at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 19 )
2 LOAD_FAST 0 ( n )
4 LOAD_CONST 2 ( 1 )
6 BINARY_SUBTRACT
8 BINARY_MULTIPLY
10 LOAD_CONST 3 ( 9 )
12 BINARY_SUBTRACT
14 BINARY_MULTIPLY
16 STORE_FAST 1 ( nnCount )

3 18 LOAD_GLOBAL 0 ( int )
20 LOAD_GLOBAL 1 ( math )
22 LOAD_METHOD 2 ( log10 )
24 LOAD_FAST 1 ( nnCount )
26 CALL_METHOD 1
28 LOAD_CONST 4 ( 10 )
30 BINARY_SUBTRACT
32 CALL_FUNCTION 1
34 STORE_FAST 2 ( nnCount )

4 36 LOAD_FAST 2 ( nnCount )
38 LOAD_CONST 5 ( 0 )
40 BINARY_SUBSCR
42 STORE_FAST 3 ( nnCount )

5 44 LOAD_FAST 2 ( nnCount )
46 LOAD_CONST 6 ( 1 )
48 BINARY_SUBSCR
50 LOAD_FAST 3 ( nnCount )
52 LOAD_CONST 7 ( 10 )
54 BINARY_SUBTRACT
56 BINARY_MULTIPLY
58 LOAD_FAST 2 ( nnCount )
60 LOAD_CONST 8 ( 11 )
62 BINARY_SUBTRACT
64 LOAD_FAST 2 ( nnCount )
66 LOAD_CONST 9 ( 12 )
68 BINARY_SUBTRACT
70 LOAD_FAST 3 ( nnCount )
72 LOAD_CONST 10 ( 12 )
74 BINARY_SUBTRACT
76 LOAD_FAST 3 ( nnCount )
78 LOAD_CONST 11 ( 12 )
80 BINARY_SUBTRACT
82 LOAD_FAST 3 ( nnCount )
84 LOAD_CONST 12 ( 13 )
86 BINARY_SUBTRACT
88 LOAD_FAST 3 ( nnCount )
90 LOAD_CONST 13 ( 14 )
92 BINARY_SUBTRACT
94 LOAD_FAST 3 ( nnCount )
96 LOAD_CONST 14 ( 15 )
98 BINARY_SUBTRACT
100 LOAD_FAST 3 ( nnCount )
102 LOAD_CONST 15 ( 16 )
104 BINARY_SUBTRACT
106 LOAD_FAST 3 ( nnCount )
108 LOAD_CONST 16 ( 19 )
110 BINARY_SUBTRACT
112 LOAD_FAST 3 ( nnCount )
114 LOAD_CONST 15 ( 20 )
116 BINARY_SUBTRACT
118 LOAD_FAST 3 ( nnCount )
120 LOAD_CONST 16 ( 19 )
122 BINARY_SUBTRACT
124 LOAD_FAST 3 ( nnCount )
126 LOAD_CONST 17 ( 20 )
128 BINARY_SUBTRACT
130 LOAD_FAST 3 ( nnCount )
132 LOAD_CONST 17 ( 20 )
134 BINARY_SUBTRACT
136 LOAD_FAST 3 ( nnCount )
138 LOAD_CONST 17 ( 20 )
140 BINARY_SUBTRACT
142 LOAD_FAST 3 ( nnCount )
144 LOAD_CONST 18 ( 21 )
146 BINARY_SUBTRACT
148 LOAD_FAST 3 ( nnCount )
150 LOAD_CONST 19 ( 20 )
152 BINARY_SUBTRACT
154 LOAD_FAST 3 ( nnCount )
156 LOAD_CONST 19