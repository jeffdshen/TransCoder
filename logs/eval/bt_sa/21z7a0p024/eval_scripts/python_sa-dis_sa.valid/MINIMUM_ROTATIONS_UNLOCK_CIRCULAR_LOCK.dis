{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( input , unlock_code ) :\n    rotation = 0 ;\n    while ( input > 0 or unlock_code > 0 ) :\n        input_digit = input % 10 ;\n        code_digit = unlock_code % 10 ;\n        rotation += min ( abs ( input_digit - code_digit ) , 10 - abs ( input_digit - code_digit ) ) ;\n        input = int ( input / 10 ) ;\n        unlock_code = int ( unlock_code / 10 ) ;\n    return rotation ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (71,46,),\n    (90,65,),\n    (28,84,),\n    (41,23,),\n    (32,58,),\n    (39,82,),\n    (33,58,),\n    (89,32,),\n    (50,51,),\n    (92,77,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def minRotation ( input , unlock_code ) :\n    rotation = 0 ;\n    while ( input > 0 or unlock_code > 0 ) :\n        input_digit = input % 10 ;\n        code_digit = unlock_code % 10 ;\n        rotation += min ( abs ( input_digit - code_digit ) , 10 - abs ( input_digit - code_digit ) ) ;\n        input = int ( input / 10 ) ;\n        unlock_code = int ( unlock_code / 10 ) ;\n    return rotation ;\n"}
Disassembly of <code object minRotation at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 2 ( rotation )

3 4 SETUP_LOOP 32 ( to 40 )
6 LOAD_FAST 0 ( input )
8 LOAD_CONST 2 ( 0 )
10 COMPARE_OP 4 ( > )
12 POP_JUMP_IF_FALSE 38

4 14 LOAD_FAST 2 ( rotation )
16 LOAD_CONST 3 ( 10 )
18 BINARY_MODULO
20 STORE_FAST 2 ( rotation )

5 22 LOAD_FAST 2 ( rotation )
24 LOAD_CONST 4 ( 10 )
26 COMPARE_OP 4 ( > )
28 POP_JUMP_IF_FALSE 38

6 30 LOAD_FAST 2 ( rotation )
32 LOAD_CONST 5 ( 10 )
34 BINARY_MODULO
36 STORE_FAST 2 ( rotation )

7 >> 38 LOAD_FAST 2 ( rotation )
40 LOAD_CONST 6 ( - 1 )
42 INPLACE_ADD
44 STORE_FAST 2 ( rotation )

8 46 LOAD_FAST 2 ( rotation )
48 LOAD_CONST 7 ( - 1 )
50 INPLACE_ADD
52 STORE_FAST 2 ( rotation )

9 54 LOAD_FAST 2 ( rotation )
56 RETURN_VALUE
