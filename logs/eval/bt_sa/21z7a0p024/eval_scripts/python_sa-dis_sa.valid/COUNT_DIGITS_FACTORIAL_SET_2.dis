{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( n ) :\n    if ( n < 0 ) :\n        return 0 ;\n    if ( n <= 1 ) :\n        return 1 ;\n    x = ( ( n * math.log10 ( n / math.e ) + math.log10 ( 2 * math.pi * n ) / 2.0 ) ) ;\n    return math.floor ( x ) + 1 ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (56,),\n    (92,),\n    (52,),\n    (96,),\n    (96,),\n    (63,),\n    (51,),\n    (79,),\n    (70,),\n    (9,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findDigits ( n ) :\n    if ( n < 0 ) :\n        return 0 ;\n    if ( n <= 1 ) :\n        return 1 ;\n    x = ( ( n * math.log10 ( n / math.e ) + math.log10 ( 2 * math.pi * n ) / 2.0 ) ) ;\n    return math.floor ( x ) + 1 ;\n"}
Disassembly of <code object findDigits at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 0 )
4 COMPARE_OP 0 ( < )
6 POP_JUMP_IF_FALSE 12

3 8 LOAD_CONST 1 ( 0 )
10 RETURN_VALUE

4 >> 12 LOAD_FAST 0 ( n )
14 LOAD_CONST 1 ( 0 )
16 COMPARE_OP 1 ( <= )
18 POP_JUMP_IF_FALSE 24

5 20 LOAD_CONST 1 ( 0 )
22 RETURN_VALUE

6 >> 24 LOAD_FAST 0 ( n )
26 LOAD_CONST 1 ( 0 )
28 COMPARE_OP 1 ( <= )
30 POP_JUMP_IF_FALSE 40

7 32 LOAD_CONST 1 ( 0 )
34 RETURN_VALUE

8 >> 36 LOAD_FAST 0 ( n )
38 LOAD_CONST 1 ( 0 )
40 COMPARE_OP 1 ( <= )
42 POP_JUMP_IF_FALSE 48
44 LOAD_CONST 1 ( 0 )
46 RETURN_VALUE

9 >> 48 LOAD_FAST 0 ( n )
50 LOAD_CONST 2 ( 1 )
52 BINARY_SUBTRACT
54 LOAD_FAST 0 ( n )
56 LOAD_CONST 2 ( 1 )
58 BINARY_SUBTRACT
60 BINARY_SUBTRACT
62 LOAD_FAST 0 ( n )
64 LOAD_CONST 2 ( 1 )
66 BINARY_SUBTRACT
68 BINARY_SUBTRACT
70 LOAD_FAST 0 ( n )
72 LOAD_CONST 2 ( 1 )
74 BINARY_SUBTRACT
76 BINARY_SUBTRACT
78 LOAD_FAST 0 ( n )
80 LOAD_CONST 2 ( 1 )
82 BINARY_SUBTRACT
84 BINARY_SUBTRACT
86 LOAD_FAST 0 ( n )
88 LOAD_CONST 3 ( 2 )
90 BINARY_SUBTRACT
92 LOAD_FAST 0 ( n )
94 LOAD_CONST 2 ( 1 )
96 BINARY_SUBTRACT
98 BINARY_SUBTRACT
100 BINARY_SUBTRACT
102 LOAD_FAST 0 ( n )
104 LOAD_CONST 2 ( 1 )
106 BINARY_SUBTRACT
108 BINARY_SUBTRACT
110 LOAD_FAST 0 ( n )
112 LOAD_CONST 2 ( 1 )
114 BINARY_SUBTRACT
116 BINARY_SUBTRACT
118 BINARY_SUBTRACT
120 LOAD_FAST 0 ( n )
122 LOAD_CONST 2 ( 1 )
124 BINARY_SUBTRACT
126 BINARY_SUBTRACT
128 LOAD_FAST 0 ( n )
130 LOAD_CONST 3 ( 2 )
132 BINARY_SUBTRACT
134 BINARY_SUBTRACT
136 LOAD_FAST 0 ( n )
138 LOAD_CONST 3 ( 2 )
140 BINARY_SUBTRACT
142 BINARY_SUBTRACT
144 LOAD_FAST 0 ( n )
146 LOAD_CONST 3 ( 2 )
148 BINARY_SUBTRACT
150 BINARY_SUBTRACT
152 LOAD_FAST 0 ( n )
154 LOAD_CONST 3 ( 2 )
156 BINARY_SUBTRACT
158 BINARY_SUBTRACT
160 LOAD_FAST 0 ( n )
162 LOAD_CONST 4 ( ( 'n' , 'n' ) )
164 CALL_FUNCTION_KW 3
166 RETURN_VALUE
