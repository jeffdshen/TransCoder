{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , l , r , x ) :\n    if r >= l :\n        mid = l + ( r - l ) // 2\n        if arr [ mid ] == x :\n            return mid\n        elif arr [ mid ] > x :\n            return f_gold ( arr , l , mid - 1 , x )\n        else :\n            return f_gold ( arr , mid + 1 , r , x )\n    else :\n        return - 1\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([3, 4, 4, 8, 9, 13, 13, 15, 18, 27, 30, 32, 42, 48, 50, 52, 56, 66, 69, 69, 77, 84, 84, 93],19,12,22,),\n    ([52, -58, -22, -80, 44, -52, -34, 94, -34, -74, 42, 60, -62, 70, 98, 32, 10, 94, 26, 56, -48, -50, 42, 2, 46, 28, -68, -16, -96, -12, 66, -46, 74, -60, -52, 28, -92, -78, 32, 28, 16, 34, 30, -60, -14],40,35,44,),\n    ([0, 1],1,1,1,),\n    ([28, 84, 40, 81],2,2,2,),\n    ([-66, -62, -60, -56, -56, -2, 40, 44, 50, 74, 82, 94],8,6,8,),\n    ([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1],7,7,10,),\n    ([15, 26, 31, 36, 36, 61, 68, 72, 75, 79, 82, 98],6,7,8,),\n    ([0, -82, -94, 48, 48, -96, 14, 66, 76, -30, 86, 28, -28, -66, -64, 92, -94, -66, 86, 26, 8, 94, -82, -80, 4, -26, 76, -46, 72, 88, -6, 8, -30, 40, -88, 2, -40, -98, -22, -20, 4, -12, 54, -20, -36, 12],38,33,39,),\n    ([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],12,10,6,),\n    ([81, 47],1,1,1,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def binarySearch ( arr , l , r , x ) :\n    if r >= l :\n        mid = l + ( r - l ) // 2\n        if arr [ mid ] == x :\n            return mid\n        elif arr [ mid ] > x :\n            return binarySearch ( arr , l , mid - 1 , x )\n        else :\n            return binarySearch ( arr , mid + 1 , r , x )\n    else :\n        return - 1\n"}
Disassembly of <code object binarySearch at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( arr )
2 LOAD_FAST 1 ( l )
4 COMPARE_OP 5 ( >= )
6 POP_JUMP_IF_FALSE 22

3 8 LOAD_FAST 0 ( arr )
10 LOAD_FAST 1 ( l )
12 BINARY_SUBTRACT
14 LOAD_CONST 1 ( 2 )
16 BINARY_FLOOR_DIVIDE
18 STORE_FAST 2 ( mid )
20 JUMP_FORWARD 4 ( to 30 )

5 >> 22 LOAD_GLOBAL 0 ( binarySearch )
24 LOAD_FAST 0 ( arr )
26 LOAD_FAST 1 ( l )
28 BINARY_SUBTRACT
30 LOAD_CONST 2 ( 1 )
32 BINARY_SUBTRACT
34 LOAD_FAST 2 ( mid )
36 LOAD_CONST 3 ( ( 'end' , ) )
38 CALL_FUNCTION_KW 2
40 STORE_FAST 3 ( end )

6 42 LOAD_FAST 3 ( end )
44 LOAD_CONST 4 ( 0 )
46 COMPARE_OP 5 ( >= )
48 POP_JUMP_IF_FALSE 50

7 50 LOAD_FAST 0 ( arr )
52 LOAD_FAST 1 ( l )
54 BINARY_SUBTRACT
56 LOAD_CONST 2 ( 1 )
58 BINARY_SUBTRACT
60 STORE_FAST 2 ( mid )

8 >> 62 LOAD_GLOBAL 1 ( binarySearch )
64 LOAD_FAST 0 ( arr )
66 LOAD_FAST 1 ( l )
68 BINARY_SUBTRACT
70 LOAD_CONST 2 ( 1 )
72 BINARY_SUBTRACT
74 LOAD_FAST 2 ( mid )
76 BINARY_SUBTRACT
78 LOAD_CONST 2 ( 1 )
80 BINARY_SUBTRACT
82 LOAD_FAST 2 ( mid )
84 BINARY_SUBTRACT
86 LOAD_CONST 2 ( 1 )
88 BINARY_SUBTRACT
90 LOAD_FAST 2 ( mid )
92 BINARY_SUBTRACT
94 LOAD_CONST 2 ( 1 )
96 BINARY_SUBTRACT
98 LOAD_FAST 2 ( mid )
100 BINARY_SUBTRACT
102 LOAD_CONST 2 ( 1 )
104 BINARY_SUBTRACT
106 LOAD_FAST 2 ( mid )
108 BINARY_SUBTRACT
110 LOAD_CONST 2 ( 1 )
112 BINARY_SUBTRACT
114 LOAD_FAST 2 ( mid )
116 BINARY_SUBTRACT
118 LOAD_CONST 2 ( 1 )
120 BINARY_SUBTRACT
122 LOAD_FAST 2 ( mid )
124 BINARY_SUBTRACT
126 LOAD_CONST 2 ( 1 )
128 BINARY_SUBTRACT
130 LOAD_FAST 2 ( mid )
132 BINARY_SUBTRACT
134 LOAD_CONST 2 ( 1 )
136 BINARY_SUBTRACT
138 LOAD_FAST 2 ( mid )
140 BINARY_SUBTRACT
142 LOAD_CONST 2 ( 1 )
144 BINARY_SUBTRACT
146 BINARY_SUBTRACT
148 LOAD_FAST 2 ( mid )
150 BINARY_SUBTRACT
152 LOAD_CONST 2 ( 1 )
154 BINARY_SUBTRACT
156 LOAD_FAST 2 ( mid )
158 BINARY_SUBTRACT
160 LOAD_CONST 2 ( 1 )
162 BINARY_SUBTRACT
164 LOAD_FAST 2 ( mid )
166 BINARY_SUBTRACT
168 BINARY_TRUE_DIVIDE
170 BINARY_SUBTRACT
172 RETURN_VALUE
