{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( side ) :\n    return ( ( ( 15 + ( 7 * ( math.sqrt ( 5 ) ) ) ) / 4 ) * ( math.pow ( side , 3 ) ) )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (56,),\n    (73,),\n    (22,),\n    (10,),\n    (84,),\n    (20,),\n    (51,),\n    (91,),\n    (10,),\n    (83,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if abs(1 - (0.0000001 + abs(f_gold(*parameters_set))) / (abs(f_filled(*parameters_set)) + 0.0000001)) < 0.001:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def vol_of_dodecahedron ( side ) :\n    return ( ( ( 15 + ( 7 * ( math.sqrt ( 5 ) ) ) ) / 4 ) * ( math.pow ( side , 3 ) ) )\n"}
Disassembly of <code object vol_of_dodecadron at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( ( ( 15 ) + ( 7 ) )
2 LOAD_CONST 1 ( ( 15 + 7 ) )
4 LOAD_CONST 2 ( 4 )
6 LOAD_CONST 3 ( 4 )
8 LOAD_CONST 4 ( 5 )
10 LOAD_CONST 5 ( 7 )
12 LOAD_CONST 6 ( 8 )
14 LOAD_CONST 7 ( 10 )
16 LOAD_CONST 8 ( 9 )
18 LOAD_CONST 9 ( 10 )
20 LOAD_CONST 10 ( 11 )
22 LOAD_CONST 11 ( 12 )
24 LOAD_CONST 12 ( 13 )
26 LOAD_CONST 13 ( 14 )
28 LOAD_CONST 14 ( 16 )
30 LOAD_CONST 15 ( 18 )
32 LOAD_CONST 16 ( 20 )
34 LOAD_CONST 17 ( 22 )
36 LOAD_CONST 18 ( 24 )
38 LOAD_CONST 19 ( 26 )
40 LOAD_CONST 19 ( 28 )
42 LOAD_CONST 20 ( 30 )
44 LOAD_CONST 19 ( 28 )
46 LOAD_CONST 19 ( 30 )
48 LOAD_CONST 20 ( 31 )
50 LOAD_CONST 21 ( 28 )
52 LOAD_CONST 22 ( 30 )
54 LOAD_CONST 23 ( 31 )
56 LOAD_CONST 23 ( 31 )
58 LOAD_CONST 23 ( 31 )
60 LOAD_CONST 23 ( 31 )
62 LOAD_CONST 23 ( 31 )
64 LOAD_CONST 23 ( 31 )
66 LOAD_CONST 23 ( 31 )
68 LOAD_CONST 23 ( 31 )
70 LOAD_CONST 23 ( 31 )
72 LOAD_CONST 22 ( 31 )
74 LOAD_CONST 23 ( 31 )
76 LOAD_CONST 23 ( 31 )
78 LOAD_CONST 23 ( 31 )
80 LOAD_CONST 23 ( 31 )
82 LOAD_CONST 23 ( 31 )
84 LOAD_CONST 23 ( 31 )
86 LOAD_CONST 23 ( 31 )
88 LOAD_CONST 23 ( 31 )
90 LOAD_CONST 24 ( 31 )
92 LOAD_CONST 23 ( 31 )
94 LOAD_CONST 23 ( 31 )
96 LOAD_CONST 23 ( 31 )
98 LOAD_CONST 23 ( 31 )
100 LOAD_CONST 23 ( 31 )
102 LOAD_CONST 23 ( 31 )
104 LOAD_CONST 22 ( 31 )
106 LOAD_CONST 23 ( 31 )
108 LOAD_CONST 23 ( 31 )
110 LOAD_CONST 23 ( 31 )
112 LOAD_CONST 23 ( 31 )
114 LOAD_CONST 23 ( 31 )
116 LOAD_CONST 23 ( 31 )
118 LOAD_CONST 23 ( 31 )
120 LOAD_CONST 23 ( 31 )
122 LOAD_CONST 24 ( ( '31' , '31' , '31' ) )
124 CALL_FUNCTION_KW 5
126 RETURN_VALUE
