{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n , p ) :\n    ans = 0 ;\n    for x in range ( 1 , p ) :\n        if ( ( x * x ) % p == 1 ) :\n            last = x + p * ( n / p ) ;\n            if ( last > n ) :\n                last -= p ;\n            ans += ( ( last - x ) / p + 1 ) ;\n    return int ( ans ) ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (94,36,),\n    (11,79,),\n    (88,63,),\n    (85,43,),\n    (74,89,),\n    (96,33,),\n    (49,51,),\n    (50,24,),\n    (21,26,),\n    (81,19,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findCountOfSolutions ( n , p ) :\n    ans = 0 ;\n    for x in range ( 1 , p ) :\n        if ( ( x * x ) % p == 1 ) :\n            last = x + p * ( n / p ) ;\n            if ( last > n ) :\n                last -= p ;\n            ans += ( ( last - x ) / p + 1 ) ;\n    return int ( ans ) ;\n"}
Disassembly of <code object findCountOfSolutions at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( ans )

3 4 LOAD_CONST 1 ( 0 )
6 STORE_FAST 2 ( ans )

4 8 SETUP_LOOP 64 ( to 76 )
10 LOAD_GLOBAL 0 ( range )
12 LOAD_CONST 2 ( 1 )
14 LOAD_FAST 0 ( n )
16 CALL_FUNCTION 2
18 GET_ITER
>> 20 FOR_ITER 64 ( to 74 )
22 STORE_FAST 3 ( x )

5 24 LOAD_FAST 3 ( x )
26 LOAD_FAST 1 ( ans )
28 COMPARE_OP 6 ( in )
30 POP_JUMP_IF_FALSE 20

6 32 LOAD_FAST 2 ( ans )
34 LOAD_FAST 1 ( ans )
36 LOAD_FAST 3 ( x )
38 BINARY_SUBTRACT
40 LOAD_FAST 1 ( ans )
42 BINARY_SUBTRACT
44 LOAD_FAST 1 ( ans )
46 BINARY_SUBTRACT
48 LOAD_FAST 1 ( ans )
50 BINARY_SUBTRACT
52 LOAD_FAST 2 ( ans )
54 BINARY_SUBTRACT
56 LOAD_FAST 1 ( ans )
58 BINARY_SUBTRACT
60 LOAD_FAST 2 ( ans )
62 BINARY_SUBTRACT
64 LOAD_FAST 3 ( x )
66 BINARY_SUBTRACT
68 LOAD_FAST 1 ( ans )
70 BINARY_SUBTRACT
72 LOAD_FAST 2 ( ans )
74 BINARY_SUBTRACT
76 LOAD_FAST 1 ( ans )
78 BINARY_SUBTRACT
80 BINARY_SUBTRACT
82 LOAD_FAST 2 ( ans )
84 BINARY_SUBTRACT
86 LOAD_FAST 1 ( ans )
88 BINARY_SUBTRACT
90 LOAD_FAST 2 ( ans )
92 BINARY_SUBTRACT
94 LOAD_FAST 1 ( ans )
96 BINARY_SUBTRACT
98 LOAD_FAST 3 ( x )
100 BINARY_SUBTRACT
102 LOAD_FAST 2 ( ans )
104 BINARY_SUBTRACT
106 LOAD_FAST 1 ( ans )
108 BINARY_SUBTRACT
110 LOAD_FAST 2 ( ans )
112 BINARY_SUBTRACT
114 LOAD_FAST 3 ( x )
116 BINARY_SUBTRACT
118 BINARY_SUBTRACT
120 LOAD_FAST 1 ( ans )
122 BINARY_SUBTRACT
124 LOAD_FAST 2 ( ans )
126 BINARY_SUBTRACT
128 LOAD_FAST 2 ( ans )
130 BINARY_SUBTRACT
132 RETURN_VALUE
>> 134 JUMP_ABSOLUTE 20
>> 136 POP_BLOCK
>> 138 JUMP_ABSOLUTE 20
>> 140 POP_BLOCK

7 >> 142 LOAD_FAST 1 ( ans )
144 RETURN_VALUE
