{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( str ) :\n    n = len ( str )\n    count = 0\n    res = str [ 0 ]\n    cur_count = 1\n    for i in range ( n ) :\n        if ( i < n - 1 and str [ i ] == str [ i + 1 ] ) :\n            cur_count += 1\n        else :\n            if cur_count > count :\n                count = cur_count\n                res = str [ i ]\n            cur_count = 1\n    return res\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('geeekk',),\n    ('3786868',),\n    ('110',),\n    ('aaaabbcbbb',),\n    ('11',),\n    ('011101',),\n    ('WoHNyJYLC',),\n    ('3141711779',),\n    ('10111101101',),\n    ('aabbabababcc',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxRepeating ( str ) :\n    n = len ( str )\n    count = 0\n    res = str [ 0 ]\n    cur_count = 1\n    for i in range ( n ) :\n        if ( i < n - 1 and str [ i ] == str [ i + 1 ] ) :\n            cur_count += 1\n        else :\n            if cur_count > count :\n                count = cur_count\n                res = str [ i ]\n            cur_count = 1\n    return res\n"}
Disassembly of <code object maxRepeating at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( len )
2 LOAD_FAST 0 ( str )
4 CALL_FUNCTION 1
6 STORE_FAST 1 ( n )

3 8 LOAD_CONST 1 ( 0 )
10 STORE_FAST 2 ( count )

4 12 LOAD_CONST 2 ( 1 )
14 STORE_FAST 3 ( cur_count )

5 16 SETUP_LOOP 64 ( to 76 )
18 LOAD_GLOBAL 1 ( range )
20 LOAD_FAST 1 ( n )
22 CALL_FUNCTION 1
24 GET_ITER
>> 26 FOR_ITER 48 ( to 74 )
28 STORE_FAST 4 ( i )

6 30 LOAD_FAST 2 ( count )
32 LOAD_CONST 2 ( 1 )
34 COMPARE_OP 2 ( == )
36 POP_JUMP_IF_FALSE 48

7 38 LOAD_FAST 2 ( count )
40 LOAD_CONST 2 ( 1 )
42 INPLACE_ADD
44 STORE_FAST 2 ( count )
46 JUMP_ABSOLUTE 26

8 >> 48 LOAD_FAST 2 ( count )
50 LOAD_CONST 2 ( 1 )
52 INPLACE_ADD
54 STORE_FAST 2 ( count )

9 56 LOAD_FAST 2 ( count )
58 LOAD_CONST 2 ( 1 )
60 INPLACE_ADD
62 STORE_FAST 2 ( count )

10 64 LOAD_FAST 2 ( count )
66 LOAD_CONST 2 ( 1 )
68 INPLACE_ADD
70 STORE_FAST 2 ( count )
72 JUMP_ABSOLUTE 26
>> 74 POP_BLOCK

11 >> 76 LOAD_FAST 2 ( count )
78 RETURN_VALUE
