{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( n ) :\n    maxPrime = - 1\n    while n % 2 == 0 :\n        maxPrime = 2\n        n >>= 1\n    for i in range ( 3 , int ( math.sqrt ( n ) ) + 1 , 2 ) :\n        while n % i == 0 :\n            maxPrime = i\n            n = n / i\n    if n > 2 :\n        maxPrime = n\n    return int ( maxPrime )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (98,),\n    (8,),\n    (78,),\n    (65,),\n    (55,),\n    (10,),\n    (10,),\n    (37,),\n    (39,),\n    (15,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxPrimeFactors ( n ) :\n    maxPrime = - 1\n    while n % 2 == 0 :\n        maxPrime = 2\n        n >>= 1\n    for i in range ( 3 , int ( math.sqrt ( n ) ) + 1 , 2 ) :\n        while n % i == 0 :\n            maxPrime = i\n            n = n / i\n    if n > 2 :\n        maxPrime = n\n    return int ( maxPrime )\n"}
Disassembly of <code object maxPrimesition at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( - 1 )
2 STORE_FAST 1 ( maxPrime )

3 4 LOAD_CONST 2 ( - 1 )
6 LOAD_FAST 0 ( n )
8 COMPARE_OP 2 ( == )
10 POP_JUMP_IF_FALSE 20

4 12 LOAD_CONST 3 ( 2 )
14 >>= 1
16 STORE_FAST 1 ( maxPrime )
18 JUMP_FORWARD 4 ( to 26 )

6 >> 20 LOAD_CONST 4 ( 0 )
22 STORE_FAST 1 ( maxPrime )

7 24 SETUP_LOOP 26 ( to 44 )
>> 26 LOAD_FAST 1 ( maxPrime )
28 LOAD_CONST 5 ( 1 )
30 COMPARE_OP 2 ( == )
32 POP_JUMP_IF_FALSE 42

8 34 LOAD_FAST 1 ( maxPrime )
36 LOAD_CONST 6 ( 2 )
38 BINARY_MODULO
40 STORE_FAST 1 ( maxPrime )

9 >> 42 LOAD_FAST 1 ( maxPrime )
44 LOAD_CONST 7 ( 2 )
46 BINARY_MODULO
48 STORE_FAST 2 ( maxPrime )

10 50 LOAD_FAST 2 ( maxPrime )
52 LOAD_CONST 8 ( 3 )
54 BINARY_MODULO
56 STORE_FAST 3 ( maxPrime )

11 58 LOAD_FAST 3 ( maxPrime )
60 LOAD_FAST 2 ( maxPrime )
62 COMPARE_OP 2 ( == )
64 POP_JUMP_IF_FALSE 74

12 66 LOAD_FAST 3 ( maxPrime )
68 LOAD_FAST 2 ( maxPrime )
70 LOAD_FAST 3 ( maxPrime )
72 BINARY_SUBTRACT
74 BINARY_MODULO
76 RETURN_VALUE

13 >> 78 LOAD_FAST 1 ( maxPrime )
80 LOAD_FAST 2 ( maxPrime )
82 COMPARE_OP 2 ( == )
84 POP_JUMP_IF_FALSE 98

14 86 LOAD_FAST 3 ( maxPrime )
88 RETURN_VALUE

15 >> 90 LOAD_FAST 1 ( maxPrime )
92 RETURN_VALUE
