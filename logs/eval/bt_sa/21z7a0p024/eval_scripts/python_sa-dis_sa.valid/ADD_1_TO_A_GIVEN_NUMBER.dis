{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( x ) :\n    m = 1 ;\n    while ( x & m ) :\n        x = x ^ m\n        m <<= 1\n    x = x ^ m\n    return x\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (96,),\n    (66,),\n    (67,),\n    (13,),\n    (75,),\n    (78,),\n    (1,),\n    (83,),\n    (27,),\n    (65,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))\n", "ref": "def addOne ( x ) :\n    m = 1 ;\n    while ( x & m ) :\n        x = x ^ m\n        m <<= 1\n    x = x ^ m\n    return x\n"}
Disassembly of <code object addOne at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 1 )
2 STORE_FAST 1 ( m )

3 4 SETUP_LOOP 26 ( to 32 )
6 LOAD_FAST 0 ( x )
8 LOAD_CONST 2 ( 0 )
10 COMPARE_OP 1 ( <= )
12 POP_JUMP_IF_FALSE 30

4 14 LOAD_FAST 1 ( m )
16 LOAD_GLOBAL 0 ( x )
18 COMPARE_OP 1 ( <= )
20 POP_JUMP_IF_FALSE 30

5 22 LOAD_FAST 1 ( m )
24 LOAD_GLOBAL 1 ( m )
26 COMPARE_OP 1 ( <= )
28 POP_JUMP_IF_FALSE 30

6 >> 30 LOAD_FAST 1 ( m )
32 LOAD_GLOBAL 0 ( x )
34 COMPARE_OP 1 ( <= )
36 POP_JUMP_IF_FALSE 48

7 38 LOAD_FAST 1 ( m )
40 LOAD_GLOBAL 0 ( x )
42 COMPARE_OP 1 ( <= )
44 POP_JUMP_IF_FALSE 48
46 JUMP_FORWARD 2 ( to 50 )
>> 48 LOAD_FAST 1 ( m )
>> 50 LOAD_GLOBAL 0 ( x )
52 COMPARE_OP 1 ( <= )
54 POP_JUMP_IF_FALSE 60

8 56 LOAD_FAST 1 ( m )
58 LOAD_GLOBAL 0 ( x )
60 COMPARE_OP 1 ( <= )
62 POP_JUMP_IF_FALSE 68

9 64 LOAD_FAST 1 ( m )
66 LOAD_GLOBAL 0 ( x )
68 COMPARE_OP 1 ( <= )
70 POP_JUMP_IF_FALSE 76

10 72 LOAD_FAST 1 ( m )
74 LOAD_GLOBAL 0 ( x )
76 COMPARE_OP 1 ( <= )
78 POP_JUMP_IF_FALSE 76

11 80 LOAD_FAST 1 ( m )
82 LOAD_GLOBAL 0 ( x )
84 COMPARE_OP 1 ( <= )
86 POP_JUMP_IF_FALSE 98

12 88 LOAD_FAST 1 ( m )
90 LOAD_GLOBAL 0 ( x )
92 COMPARE_OP 1 ( <= )
94 POP_JUMP_IF_FALSE 98

13 96 LOAD_FAST 1 ( m )
98 LOAD_GLOBAL 0 ( x )
100 COMPARE_OP 1 ( <= )
102 POP_JUMP_IF_FALSE 114

14 104 LOAD_FAST 1 ( m )
106 LOAD_GLOBAL 0 ( x )
108 COMPARE_OP 1 ( <= )
110 POP_JUMP_IF_FALSE 114

15 112 LOAD_FAST 1 ( m )
114 LOAD_GLOBAL 0 ( x )
116 COMPARE_OP 1 ( <= )
118 POP_JUMP_IF_FALSE 126

16 120 LOAD_FAST 1 ( m )
122 LOAD_GLOBAL 0 ( x )
124 COMPARE_OP 1 ( <= )
126 POP_JUMP_IF_FALSE 126

17 128 LOAD_FAST 1 ( m )
130 LOAD_GLOBAL 0 ( x )
132 LOAD_FAST 1 ( m )
134 BINARY_SUBTRACT
136 COMPARE_OP 1 ( <= )
138 POP_JUMP_IF_FALSE 126

20 140 LOAD_FAST 1 ( m )
142 RETURN_VALUE
>> 144 LOAD_CONST 0 ( None )
146 RETURN_VALUE
