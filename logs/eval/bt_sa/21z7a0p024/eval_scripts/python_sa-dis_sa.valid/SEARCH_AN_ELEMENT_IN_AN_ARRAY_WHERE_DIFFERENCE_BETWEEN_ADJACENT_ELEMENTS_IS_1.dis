{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , x ) :\n    i = 0\n    while ( i < n ) :\n        if ( arr [ i ] == x ) :\n            return i\n        i = i + abs ( arr [ i ] - x )\n    print ( \"number is not present!\" )\n    return - 1\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([8, 7, 6, 7, 6, 5, 4, 3, 2, 3, 4, 3],12,3,),\n    ([6, 90],1,1,),\n    ([1, 2, 3, 4, 5, 4],6,5,),\n    ([97, 35, 60, 96, 3, 67, 72, 95, 55, 9, 69, 28, 15, 91, 31, 59],15,9,),\n    ([-84, -78, -74, -70, -68, -60, -56, -54, -48, -46, -28, -16, -6, 0, 0, 8, 8, 8, 12, 16, 26, 30, 32, 34, 36, 40, 46, 48, 70, 70, 72, 76, 78, 78, 80, 84, 84, 86],22,31,),\n    ([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1],5,7,),\n    ([55, 64, 76, 79, 93, 96],4,4,),\n    ([66, -90, 98, -50, 0, 46, 42, 64, -96, -80, -96, 20, -10, -84],8,13,),\n    ([0, 0, 0, 0, 0, 0, 1],6,5,),\n    ([94, 4, 34, 87, 32, 3, 92, 68, 57, 76, 24, 33, 3, 4, 30, 70, 49, 30, 72, 82, 16, 53, 6, 24, 92, 96, 89, 28, 21, 8, 36, 9, 40, 85, 51, 1, 63, 68, 74, 26, 40, 3, 9, 32, 67, 4, 6, 73],25,25,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))\n", "ref": "def search ( arr , n , x ) :\n    i = 0\n    while ( i < n ) :\n        if ( arr [ i ] == x ) :\n            return i\n        i = i + abs ( arr [ i ] - x )\n    print ( \"number is not present!\" )\n    return - 1\n"}
Disassembly of <code object search at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 2 ( i )

3 4 SETUP_LOOP 64 ( to 66 )
6 LOAD_FAST 0 ( arr )
8 LOAD_FAST 1 ( n )
10 BINARY_SUBSCR
12 GET_ITER
>> 14 FOR_ITER 56 ( to 64 )
16 STORE_FAST 3 ( i )

4 18 LOAD_FAST 2 ( i )
20 LOAD_FAST 3 ( i )
22 BINARY_SUBSCR
24 LOAD_FAST 1 ( n )
26 COMPARE_OP 2 ( == )
28 POP_JUMP_IF_FALSE 36

5 30 LOAD_FAST 2 ( i )
32 LOAD_FAST 3 ( i )
34 BINARY_SUBSCR
36 STORE_FAST 2 ( i )
38 JUMP_ABSOLUTE 14

7 >> 40 LOAD_FAST 2 ( i )
42 LOAD_FAST 3 ( i )
44 BINARY_SUBSCR
46 STORE_FAST 4 ( j )

8 48 LOAD_FAST 2 ( i )
50 LOAD_FAST 3 ( i )
52 BINARY_SUBSCR
54 LOAD_FAST 4 ( j )
56 COMPARE_OP 2 ( == )
58 POP_JUMP_IF_FALSE 14

9 60 LOAD_FAST 2 ( i )
62 LOAD_FAST 3 ( i )
64 BINARY_SUBSCR
66 LOAD_FAST 4 ( j )
68 BINARY_SUBSCR
70 LOAD_FAST 4 ( j )
72 BINARY_SUBSCR
74 LOAD_FAST 4 ( j )
76 BINARY_SUBSCR
78 LOAD_FAST 4 ( j )
80 STORE_SUBSCR

10 82 LOAD_FAST 2 ( i )
84 LOAD_FAST 3 ( i )
86 BINARY_SUBSCR
88 LOAD_FAST 4 ( j )
90 STORE_SUBSCR

11 92 LOAD_FAST 2 ( i )
94 LOAD_FAST 3 ( i )
96 BINARY_SUBSCR
98 LOAD_FAST 4 ( j )
100 STORE_SUBSCR

12 102 LOAD_FAST 2 ( i )
104 LOAD_FAST 3 ( i )
106 STORE_SUBSCR

13 108 LOAD_FAST 2 ( i )
110 LOAD_FAST 3 ( i )
112 STORE_SUBSCR
114 JUMP_ABSOLUTE 14
>> 116 POP_BLOCK

14 >> 118 LOAD_FAST 2 ( i )
120 RETURN_VALUE
