{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    if ( n == 2 or n == 3 ) :\n        return ( n - 1 )\n    res = 1\n    while ( n > 4 ) :\n        n -= 3 ;\n        res *= 3 ;\n    return ( n * res )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (62,),\n    (53,),\n    (8,),\n    (6,),\n    (35,),\n    (35,),\n    (46,),\n    (74,),\n    (69,),\n    (3,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxProd ( n ) :\n    if ( n == 2 or n == 3 ) :\n        return ( n - 1 )\n    res = 1\n    while ( n > 4 ) :\n        n -= 3 ;\n        res *= 3 ;\n    return ( n * res )\n"}
Disassembly of <code object maxProd at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 2 )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 14

3 8 LOAD_FAST 0 ( n )
10 LOAD_CONST 2 ( 3 )
12 LOAD_CONST 1 ( 2 )
14 BINARY_FLOOR_DIVIDE
16 STORE_FAST 0 ( n )

4 >> 18 LOAD_CONST 1 ( 2 )
20 LOAD_FAST 0 ( n )
22 LOAD_CONST 2 ( 3 )
24 BINARY_FLOOR_DIVIDE
26 COMPARE_OP 4 ( > )
28 POP_JUMP_IF_FALSE 48

5 30 LOAD_FAST 0 ( n )
32 LOAD_CONST 2 ( 3 )
34 BINARY_MODULO
36 STORE_FAST 0 ( n )

6 38 LOAD_FAST 0 ( n )
40 LOAD_CONST 2 ( 3 )
42 BINARY_MODULO
44 STORE_FAST 1 ( n )
46 JUMP_FORWARD 32 ( to 78 )

8 >> 48 LOAD_FAST 0 ( n )
50 LOAD_CONST 2 ( 3 )
52 BINARY_MODULO
54 STORE_FAST 0 ( n )

9 >> 56 LOAD_FAST 0 ( n )
58 LOAD_CONST 2 ( 3 )
60 BINARY_MODULO
62 LOAD_FAST 1 ( n )
64 LOAD_CONST 2 ( 3 )
66 BINARY_MODULO
68 INPLACE_ADD
70 STORE_FAST 0 ( n )

10 72 LOAD_FAST 0 ( n )
74 LOAD_CONST 2 ( 3 )
76 BINARY_MODULO
78 INPLACE_ADD
80 STORE_FAST 0 ( n )

11 82 LOAD_FAST 0 ( n )
84 LOAD_CONST 2 ( 3 )
86 COMPARE_OP 2 ( == )
88 POP_JUMP_IF_FALSE 92

12 90 LOAD_FAST 0 ( n )
92 LOAD_CONST 2 ( 3 )
94 BINARY_MODULO
96 INPLACE_ADD
98 STORE_FAST 0 ( n )

13 >> 100 LOAD_FAST 0 ( n )
102 LOAD_CONST 2 ( 3 )
104 COMPARE_OP 2 ( == )
106 POP_JUMP_IF_FALSE 112

14 108 LOAD_FAST 0 ( n )
110 LOAD_CONST 2 ( 3 )
112 BINARY_MODULO
114 INPLACE_ADD
116 STORE_FAST 0 ( n )

15 >> 118 LOAD_FAST 0 ( n )
120 LOAD_CONST 2 ( 3 )
122 BINARY_MODULO
124 INPLACE_ADD
126 STORE_FAST 0 ( n )

16 >> 128 LOAD_FAST 0 ( n )
130 LOAD_CONST 2 ( 3 )
132 INPLACE_ADD
134 STORE_FAST 0 ( n )

17 >> 136 LOAD_FAST 0 ( n )
138 LOAD_CONST 2 ( 3 )
140 COMPARE_OP 2 ( == )
142 POP_JUMP_IF_FALSE 148

18 144 LOAD_FAST 0 ( n )
146 LOAD_CONST 2 ( 3 )
148 BINARY_MODULO
150 INPLACE_ADD
152 STORE_FAST 0 ( n )

19 154 LOAD_FAST 0 ( n )
156 RETURN_VALUE