{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( s ) :\n    n = len ( s )\n    s1 = \"\"\n    s1 = s1 + s [ 0 ].lower ( )\n    i = 1\n    while i < n :\n        if ( s [ i ] == ' ' and i <= n ) :\n            s1 = s1 + \" \" + ( s [ i + 1 ] ).lower ( )\n            i = i + 1\n        else :\n            s1 = s1 + ( s [ i ] ).upper ( )\n        i = i + 1\n    return s1\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('TEYndweqZA',),\n    ('01865',),\n    ('11001100',),\n    ('CzwznJmQet',),\n    ('318305446',),\n    ('0000001111110',),\n    ('yzT',),\n    ('38630230',),\n    ('01101',),\n    ('zoizI',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def convert ( s ) :\n    n = len ( s )\n    s1 = \"\"\n    s1 = s1 + s [ 0 ].lower ( )\n    i = 1\n    while i < n :\n        if ( s [ i ] == ' ' and i <= n ) :\n            s1 = s1 + \" \" + ( s [ i + 1 ] ).lower ( )\n            i = i + 1\n        else :\n            s1 = s1 + ( s [ i ] ).upper ( )\n        i = i + 1\n    return s1\n"}
Disassembly of <code object convert at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( len )
2 LOAD_FAST 0 ( s )
4 CALL_FUNCTION 1
6 STORE_FAST 1 ( n )

3 8 LOAD_CONST 1 ( '' )
10 STORE_FAST 2 ( s1 )

4 12 LOAD_FAST 0 ( s )
14 LOAD_FAST 1 ( n )
16 BINARY_SUBSCR
18 LOAD_METHOD 1 ( lower )
20 CALL_METHOD 0
22 STORE_FAST 3 ( s1 )

5 24 SETUP_LOOP 64 ( to 104 )
26 LOAD_FAST 0 ( s )
28 GET_ITER
>> 30 FOR_ITER 56 ( to 102 )
32 STORE_FAST 4 ( i )

6 34 LOAD_FAST 1 ( n )
36 LOAD_FAST 1 ( n )
38 COMPARE_OP 4 ( > )
40 POP_JUMP_IF_FALSE 30

7 42 LOAD_FAST 2 ( s1 )
44 LOAD_FAST 1 ( n )
46 BINARY_SUBSCR
48 STORE_FAST 2 ( s1 )

8 50 LOAD_FAST 1 ( n )
52 LOAD_FAST 1 ( n )
54 COMPARE_OP 4 ( > )
56 POP_JUMP_IF_FALSE 30

9 58 LOAD_FAST 2 ( s1 )
60 LOAD_FAST 1 ( n )
62 BINARY_SUBSCR
64 STORE_FAST 2 ( s1 )

10 66 LOAD_FAST 2 ( s1 )
68 LOAD_FAST 1 ( n )
70 BINARY_SUBSCR
72 LOAD_FAST 1 ( n )
74 COMPARE_OP 4 ( > )
76 POP_JUMP_IF_FALSE 30

11 78 LOAD_FAST 2 ( s1 )
80 LOAD_FAST 1 ( n )
82 BINARY_SUBSCR
84 LOAD_FAST 2 ( s1 )
86 LOAD_FAST 1 ( n )
88 STORE_SUBSCR

12 90 LOAD_FAST 2 ( s1 )
92 LOAD_FAST 1 ( n )
94 BINARY_SUBSCR
96 LOAD_FAST 1 ( n )
98 STORE_SUBSCR
100 JUMP_ABSOLUTE 30
>> 102 POP_BLOCK

13 >> 104 LOAD_FAST 2 ( s1 )
106 RETURN_VALUE
