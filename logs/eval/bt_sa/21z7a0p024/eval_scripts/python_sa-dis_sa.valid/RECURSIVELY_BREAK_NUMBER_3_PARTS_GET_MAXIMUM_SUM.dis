{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    if ( n == 0 or n == 1 ) :\n        return n\n    return max ( ( f_gold ( n // 2 ) + f_gold ( n // 3 ) + f_gold ( n // 4 ) ) , n )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (39,),\n    (79,),\n    (7,),\n    (76,),\n    (48,),\n    (18,),\n    (58,),\n    (17,),\n    (36,),\n    (5,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def breakSum ( n ) :\n    if ( n == 0 or n == 1 ) :\n        return n\n    return max ( ( breakSum ( n // 2 ) + breakSum ( n // 3 ) + breakSum ( n // 4 ) ) , n )\n"}
Disassembly of <code object breakSum at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 0 )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 12

3 8 LOAD_FAST 0 ( n )
10 RETURN_VALUE

4 >> 12 LOAD_GLOBAL 0 ( max )
14 LOAD_FAST 0 ( n )
16 LOAD_CONST 2 ( 1 )
18 LOAD_CONST 3 ( 2 )
20 BINARY_FLOOR_DIVIDE
22 CALL_FUNCTION 2
24 LOAD_FAST 0 ( n )
26 LOAD_CONST 2 ( 1 )
28 BINARY_SUBTRACT
30 CALL_FUNCTION 2
32 LOAD_FAST 0 ( n )
34 LOAD_CONST 2 ( 1 )
36 BINARY_SUBTRACT
38 BINARY_SUBTRACT
40 LOAD_FAST 0 ( n )
42 LOAD_CONST 2 ( 1 )
44 BINARY_SUBTRACT
46 BINARY_SUBTRACT
48 LOAD_FAST 0 ( n )
50 LOAD_CONST 2 ( 1 )
52 BINARY_SUBTRACT
54 BINARY_SUBTRACT
56 LOAD_FAST 0 ( n )
58 LOAD_CONST 2 ( 1 )
60 BINARY_SUBTRACT
62 BINARY_SUBTRACT
64 LOAD_FAST 0 ( n )
66 LOAD_CONST 2 ( 1 )
68 BINARY_SUBTRACT
70 BINARY_SUBTRACT
72 LOAD_FAST 0 ( n )
74 LOAD_CONST 2 ( 1 )
76 BINARY_SUBTRACT
78 BINARY_SUBTRACT
80 LOAD_FAST 0 ( n )
82 LOAD_CONST 2 ( 1 )
84 BINARY_SUBTRACT
86 LOAD_FAST 0 ( n )
88 LOAD_CONST 2 ( 1 )
90 BINARY_SUBTRACT
92 BINARY_SUBTRACT
94 LOAD_FAST 0 ( n )
96 LOAD_CONST 2 ( 1 )
98 BINARY_SUBTRACT
100 LOAD_FAST 0 ( n )
102 LOAD_CONST 2 ( 1 )
104 BINARY_SUBTRACT
106 LOAD_FAST 0 ( n )
108 LOAD_CONST 2 ( 1 )
110 BINARY_SUBTRACT
112 BINARY_SUBTRACT
114 BINARY_SUBTRACT
116 LOAD_FAST 0 ( n )
118 LOAD_CONST 2 ( 1 )
120 BINARY_SUBTRACT
122 BINARY_SUBTRACT
124 BINARY_SUBTRACT
126 LOAD_FAST 0 ( n )
128 LOAD_CONST 2 ( 1 )
130 BINARY_SUBTRACT
132 BINARY_SUBTRACT
134 LOAD_FAST 0 ( n )
136 LOAD_CONST 2 ( 1 )
138 BINARY_SUBTRACT
140 LOAD_FAST 0 ( n )
142 LOAD_CONST 2 ( 1 )
144 BINARY_SUBTRACT
146 BINARY_SUBTRACT
148 LOAD_FAST 0 ( n )
150 LOAD_CONST 3 ( 2 )
152 BINARY_SUBTRACT
154 BINARY_SUBTRACT
156 LOAD_FAST 0 ( n )
158 LOAD_CONST 2 ( 1 )
160 BINARY_SUBTRACT
162 BINARY_SUBTRACT
164 BINARY_SUBTRACT
166 LOAD_FAST 0 ( n )
168 LOAD_CONST 2 ( 1 )
170 BINARY_SUBTRACT
172 BINARY_SUBTRACT
174 LOAD_FAST 0 ( n )
176 LOAD_CONST 2 ( 1 )
178 BINARY_SUBTRACT
180 BUILD_TUPLE 3
72 RETURN_VALUE
