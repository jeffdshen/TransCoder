{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    count = 0 ;\n    if ( n and not ( n & ( n - 1 ) ) ) :\n        return n\n    while ( n != 0 ) :\n        n >>= 1\n        count += 1\n    return 1 << count ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (13,),\n    (27,),\n    (1,),\n    (24,),\n    (98,),\n    (94,),\n    (36,),\n    (41,),\n    (74,),\n    (39,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def nextPowerOf2 ( n ) :\n    count = 0 ;\n    if ( n and not ( n & ( n - 1 ) ) ) :\n        return n\n    while ( n != 0 ) :\n        n >>= 1\n        count += 1\n    return 1 << count ;\n"}
Disassembly of <code object nextPowerOf2 at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( count )

3 4 LOAD_FAST 0 ( n )
6 POP_JUMP_IF_FALSE 32

4 8 LOAD_GLOBAL 0 ( ( n )
10 LOAD_FAST 0 ( n )
12 LOAD_CONST 2 ( 1 )
14 BINARY_SUBTRACT
16 CALL_FUNCTION 1
18 STORE_FAST 1 ( count )

5 20 LOAD_FAST 1 ( count )
22 LOAD_CONST 3 ( 0 )
24 COMPARE_OP 3 ( != )
26 POP_JUMP_IF_FALSE 32

6 28 LOAD_CONST 1 ( 0 )
30 RETURN_VALUE

7 >> 32 LOAD_FAST 1 ( count )
34 LOAD_CONST 3 ( 0 )
36 COMPARE_OP 3 ( != )
38 POP_JUMP_IF_FALSE 48

8 40 LOAD_CONST 1 ( 0 )
42 RETURN_VALUE

9 >> 44 LOAD_FAST 1 ( count )
46 LOAD_CONST 3 ( 0 )
48 COMPARE_OP 3 ( != )
50 POP_JUMP_IF_FALSE 64

10 52 LOAD_CONST 1 ( 0 )
54 RETURN_VALUE

11 >> 56 LOAD_CONST 1 ( 0 )
58 RETURN_VALUE

12 >> 60 LOAD_CONST 1 ( 0 )
62 RETURN_VALUE

13 >> 64 LOAD_CONST 1 ( 0 )
66 RETURN_VALUE
68 LOAD_CONST 0 ( None )
70 RETURN_VALUE
