{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( h , m ) :\n    if ( h < 0 or m < 0 or h > 12 or m > 60 ) :\n        print ( 'Wrong input' )\n    if ( h == 12 ) :\n        h = 0\n    if ( m == 60 ) :\n        m = 0\n    hour_angle = 0.5 * ( h * 60 + m )\n    minute_angle = 6 * m\n    angle = abs ( hour_angle - minute_angle )\n    angle = min ( 360 - angle , angle )\n    return angle\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (7322.337365895532,6996.326968156217,),\n    (-0.5025472034247969,-2910.070017192333,),\n    (8735.336068205026,1910.3752934680874,),\n    (-5478.862697905712,-9470.18148108585,),\n    (8264.126919165505,7058.937313484608,),\n    (-9671.311773842834,-3867.070379361206,),\n    (9995.328351000411,2145.339179488316,),\n    (-5274.574323066984,-3583.7503371694124,),\n    (1310.8711644223736,5214.059687285893,),\n    (-2829.678131972794,-9371.556600288217,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def calcAngle ( h , m ) :\n    if ( h < 0 or m < 0 or h > 12 or m > 60 ) :\n        print ( 'Wrong input' )\n    if ( h == 12 ) :\n        h = 0\n    if ( m == 60 ) :\n        m = 0\n    hour_angle = 0.5 * ( h * 60 + m )\n    minute_angle = 6 * m\n    angle = abs ( hour_angle - minute_angle )\n    angle = min ( 360 - angle , angle )\n    return angle\n"}
Disassembly of <code object calcAngle at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( h )
2 LOAD_CONST 1 ( 0 )
4 COMPARE_OP 0 ( < )
6 POP_JUMP_IF_FALSE 12

3 8 LOAD_GLOBAL 0 ( print )
10 LOAD_CONST 2 ( 'Wrong input' )
12 CALL_FUNCTION 1
14 POP_TOP

4 16 LOAD_GLOBAL 0 ( print )
18 LOAD_CONST 3 ( 'Wrong input' )
20 CALL_FUNCTION 1
22 POP_TOP

5 24 LOAD_GLOBAL 0 ( print )
26 LOAD_CONST 4 ( 'Wrong input' )
28 CALL_FUNCTION 1
30 POP_TOP

6 32 LOAD_GLOBAL 0 ( print )
34 LOAD_CONST 5 ( 'Wrong input ' )
36 CALL_FUNCTION 1
38 POP_TOP

7 40 LOAD_GLOBAL 0 ( print )
42 LOAD_CONST 6 ( 'Wrong input ' )
44 CALL_FUNCTION 1
46 POP_TOP

8 48 LOAD_GLOBAL 0 ( print )
50 LOAD_CONST 7 ( 'Wrong input ' )
52 CALL_FUNCTION 1
54 POP_TOP

9 56 LOAD_GLOBAL 0 ( print )
58 LOAD_CONST 8 ( 'Wrong input ' )
60 CALL_FUNCTION 1
62 POP_TOP

10 64 LOAD_GLOBAL 0 ( print )
66 LOAD_CONST 9 ( 'Wrong input ' )
68 CALL_FUNCTION 1
70 POP_TOP

11 72 LOAD_GLOBAL 0 ( print )
74 LOAD_CONST 10 ( 'Wrong input ' )
76 CALL_FUNCTION 1
78 POP_TOP

12 80 LOAD_GLOBAL 0 ( print )
82 LOAD_CONST 11 ( 'Wrong input ' )
84 CALL_FUNCTION 1
86 POP_TOP

13 88 LOAD_GLOBAL 0 ( print )
90 LOAD_CONST 12 ( 'Wrong input ' )
92 CALL_FUNCTION 1
94 POP_TOP

14 96 LOAD_GLOBAL 0 ( print )
98 LOAD_CONST 13 ( 'Wrong input ' )
100 CALL_FUNCTION 1
102 POP_TOP
104 LOAD_CONST 0 ( None )
106 RETURN_VALUE
