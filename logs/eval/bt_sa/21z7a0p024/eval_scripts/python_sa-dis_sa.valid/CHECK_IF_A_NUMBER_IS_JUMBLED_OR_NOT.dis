{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( num ) :\n    if ( num // 10 == 0 ) :\n        return True\n    while ( num != 0 ) :\n        if ( num // 10 == 0 ) :\n            return True\n        digit1 = num % 10\n        digit2 = ( num // 10 ) % 10\n        if ( abs ( digit2 - digit1 ) > 1 ) :\n            return False\n        num = num // 10\n    return True\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (67,),\n    (77,),\n    (35,),\n    (79,),\n    (45,),\n    (22,),\n    (68,),\n    (17,),\n    (5,),\n    (85,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def checkJumbled ( num ) :\n    if ( num / 10 == 0 ) :\n        return True\n    while ( num != 0 ) :\n        if ( num / 10 == 0 ) :\n            return True\n        digit1 = num % 10\n        digit2 = ( num / 10 ) % 10\n        if ( abs ( digit2 - digit1 ) > 1 ) :\n            return False\n        num = num / 10\n    return True\n"}
Disassembly of <code object checkJumbled at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( num )
2 LOAD_CONST 1 ( 10 )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 12

3 8 LOAD_CONST 2 ( True )
10 RETURN_VALUE

4 >> 12 LOAD_FAST 0 ( num )
14 LOAD_CONST 3 ( 10 )
16 COMPARE_OP 3 ( != )
18 POP_JUMP_IF_FALSE 24

5 20 LOAD_CONST 4 ( False )
22 RETURN_VALUE

6 >> 24 LOAD_CONST 5 ( '' )
26 LOAD_FAST 0 ( num )
28 COMPARE_OP 3 ( != )
30 POP_JUMP_IF_FALSE 48

7 32 LOAD_CONST 6 ( False )
34 RETURN_VALUE

8 >> 36 LOAD_CONST 7 ( '' )
38 LOAD_FAST 0 ( num )
40 COMPARE_OP 3 ( != )
42 POP_JUMP_IF_FALSE 48

9 44 LOAD_CONST 8 ( '' )
46 RETURN_VALUE

10 >> 48 LOAD_CONST 9 ( '' )
50 LOAD_FAST 0 ( num )
52 COMPARE_OP 3 ( != )
54 POP_JUMP_IF_FALSE 64

11 56 LOAD_CONST 10 ( False )
58 RETURN_VALUE

12 >> 60 LOAD_CONST 11 ( '' )
62 LOAD_FAST 0 ( num )
64 COMPARE_OP 3 ( != )
66 POP_JUMP_IF_FALSE 74

13 68 LOAD_CONST 12 ( True )
70 RETURN_VALUE
72 JUMP_FORWARD 4 ( to 76 )
>> 74 LOAD_CONST 13 ( False )
>> 76 RETURN_VALUE
