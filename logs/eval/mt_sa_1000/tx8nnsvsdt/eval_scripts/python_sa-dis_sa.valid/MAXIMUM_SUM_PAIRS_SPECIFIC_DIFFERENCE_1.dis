{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , N , k ) :\n    maxSum = 0 ;\n    arr.sort ( ) ;\n    i = N - 1 ;\n    while ( i >= 0 ) :\n        if ( arr [ i ] - arr [ i - 1 ] < k ) :\n            maxSum += arr [ i ] ;\n            maxSum += arr [ i - 1 ] ;\n            i -= 1 ;\n        i -= 1 ;\n    return maxSum ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([2, 10, 11, 11, 12, 14, 15, 17, 27, 27, 28, 36, 36, 44, 47, 47, 54, 55, 62, 64, 68, 69, 70, 70, 75, 76, 78, 85, 85, 91, 95, 97],26,18,),\n    ([-36, 78, 10, 30, -12, -70, -98, -14, -44, -66, -40, -8, 78, 2, -70, 40, 92, 58, 30, 10, -84, -62, -86, -50, 82, 36, -92, -30, -2, -34, 88, 2, -4, -72],26,25,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],47,26,),\n    ([77, 78, 58],1,1,),\n    ([-88, -88, -88, -82, -58, -54, -48, -46, -46, -44, -20, -2, 10, 28, 28, 28, 42, 42, 44, 50, 50, 54, 56, 58, 62, 68, 70, 72, 74, 76, 78, 88, 90, 92],21,24,),\n    ([0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1],41,40,),\n    ([5, 7, 10, 11, 15, 17, 20, 20, 29, 29, 32, 37, 38, 39, 40, 41, 45, 51, 60, 64, 64, 68, 68, 70, 71, 71, 71, 75, 76, 82, 84, 87, 88, 88, 95, 98],30,21,),\n    ([-46, -32, 76, -28, 44, -14, 94, -4, 60, -88, -52, 32, -66, 28, 94, 76, 86, -4, 74, 52, 64, -36, -98, -40, 70, 18, -22, -20, -16, -74, 12, 60, 94, 98, -28, -24, 4, -34, -60, 56],33,23,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],28,41,),\n    ([79, 13, 25, 22, 61, 1, 2, 73, 66, 94, 47, 9, 1, 99, 25, 39, 95, 46, 95, 20, 63, 15, 14, 36, 9, 91, 14],19,23,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxSumPairWithDifferenceLessThanK ( arr , N , k ) :\n    maxSum = 0 ;\n    arr.sort ( ) ;\n    i = N - 1 ;\n    while ( i >= 0 ) :\n        if ( arr [ i ] - arr [ i - 1 ] < k ) :\n            maxSum += arr [ i ] ;\n            maxSum += arr [ i - 1 ] ;\n            i -= 1 ;\n        i -= 1 ;\n    return maxSum ;\n"}
Disassembly of <code object maxSumPairWithDifferenceLessThanK at 0x7f2b0164d4b0, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 3 ( maxSum )

3 4 LOAD_FAST 0 ( arr )
6 LOAD_METHOD 0 ( sort )
8 CALL_METHOD 0
10 POP_TOP

4 12 LOAD_FAST 2 ( N )
14 LOAD_CONST 2 ( 1 )
16 BINARY_SUBTRACT
18 STORE_FAST 4 ( i )

5 20 SETUP_LOOP 70 ( to 92 )
>> 22 LOAD_FAST 4 ( i )
24 LOAD_CONST 1 ( 0 )
26 COMPARE_OP 5 ( >= )
28 POP_JUMP_IF_FALSE 90

6 30 LOAD_FAST 0 ( arr )
32 LOAD_FAST 4 ( i )
34 BINARY_SUBSCR
36 LOAD_FAST 0 ( arr )
38 LOAD_FAST 4 ( i )
40 LOAD_CONST 2 ( 1 )
42 BINARY_SUBTRACT
44 BINARY_SUBSCR
46 BINARY_SUBTRACT
48 LOAD_FAST 2 ( k )
50 COMPARE_OP 0 ( < )
52 POP_JUMP_IF_FALSE 90

7 54 LOAD_FAST 3 ( maxSum )
56 LOAD_FAST 0 ( arr )
58 LOAD_FAST 4 ( i )
60 BINARY_SUBSCR
62 INPLACE_ADD
64 STORE_FAST 3 ( maxSum )

8 66 LOAD_FAST 3 ( maxSum )
68 LOAD_FAST 0 ( arr )
70 LOAD_FAST 4 ( i )
72 LOAD_CONST 2 ( 1 )
74 BINARY_SUBTRACT
76 BINARY_SUBSCR
78 INPLACE_ADD
80 STORE_FAST 3 ( maxSum )

9 82 LOAD_FAST 4 ( i )
84 LOAD_CONST 2 ( 1 )
86 INPLACE_SUBTRACT
88 STORE_FAST 4 ( i )

10 >> 90 LOAD_FAST 4 ( i )
92 LOAD_CONST 2 ( 1 )
94 INPLACE_SUBTRACT
96 STORE_FAST 4 ( i )
98 JUMP_ABSOLUTE 22
>> 100 POP_BLOCK

11 >> 102 LOAD_FAST 3 ( maxSum )
104 RETURN_VALUE
