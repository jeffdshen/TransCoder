{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( a , b ) :\n    result = 0\n    rem = 0\n    if ( a < b ) :\n        a , b = b , a\n    while ( b > 0 ) :\n        result += int ( a / b )\n        rem = int ( a % b )\n        a = b\n        b = rem\n    return result\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (87,60,),\n    (18,35,),\n    (68,93,),\n    (80,20,),\n    (87,69,),\n    (64,29,),\n    (64,1,),\n    (65,95,),\n    (43,72,),\n    (97,41,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def minimumSquare ( a , b ) :\n    result = 0\n    rem = 0\n    if ( a < b ) :\n        a , b = b , a\n    while ( b > 0 ) :\n        result += int ( a / b )\n        rem = int ( a % b )\n        a = b\n        b = rem\n    return result\n"}
Disassembly of <code object minimumSquare at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 2 ( result )

3 4 LOAD_CONST 1 ( 0 )
6 STORE_FAST 3 ( rem )

4 8 LOAD_FAST 0 ( a )
10 LOAD_FAST 1 ( b )
12 COMPARE_OP 0 ( < )
14 POP_JUMP_IF_FALSE 28

5 16 LOAD_FAST 1 ( b )
18 LOAD_FAST 0 ( a )
20 ROT_TWO
22 STORE_FAST 0 ( a )
24 STORE_FAST 1 ( b )
26 JUMP_FORWARD 12 ( to 42 )

6 >> 28 SETUP_LOOP 48 ( to 76 )
>> 30 LOAD_FAST 1 ( b )
32 LOAD_CONST 1 ( 0 )
34 COMPARE_OP 4 ( > )
36 POP_JUMP_IF_FALSE 74

7 38 LOAD_FAST 2 ( result )
40 LOAD_GLOBAL 0 ( int )
42 LOAD_FAST 0 ( a )
44 LOAD_FAST 1 ( b )
46 BINARY_TRUE_DIVIDE
48 CALL_FUNCTION 1
50 INPLACE_ADD
52 STORE_FAST 2 ( result )

8 54 LOAD_GLOBAL 0 ( int )
56 LOAD_FAST 0 ( a )
58 LOAD_FAST 1 ( b )
60 BINARY_MODULO
62 CALL_FUNCTION 1
64 STORE_FAST 3 ( rem )

9 66 LOAD_FAST 1 ( b )
68 STORE_FAST 1 ( b )

10 70 LOAD_FAST 3 ( rem )
72 STORE_FAST 1 ( b )

11 >> 74 LOAD_FAST 2 ( result )
76 RETURN_VALUE
