{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , arr_size ) :\n    for i in range ( 0 , arr_size ) :\n        count = 0\n        for j in range ( 0 , arr_size ) :\n            if arr [ i ] == arr [ j ] :\n                count += 1\n        if ( count % 2 != 0 ) :\n            return arr [ i ]\n    return - 1\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([1, 5, 5, 8, 14, 15, 17, 17, 18, 23, 23, 25, 26, 35, 36, 39, 51, 53, 56, 56, 60, 62, 64, 64, 65, 66, 67, 68, 71, 75, 80, 82, 83, 88, 89, 91, 91, 92, 93, 95, 99],31,),\n    ([-56, 98, 44, 30, -88, 18, 60, 86, 4, 16, 10, 64, -22, -86, -66, -16, 70, -44, 98, 78, -96, -66, 92, 10, 40, -16],19,),\n    ([0, 0, 0, 0, 0, 1, 1, 1],6,),\n    ([36, 11, 83, 41, 42, 14, 46, 89, 91, 96, 57, 42, 74, 73, 9, 26, 79, 40, 31, 69, 44, 39, 14, 92, 34, 20, 52, 47, 14],25,),\n    ([-84, -84, -84, -78, -66, -62, -62, -36, -24, -10, -10, -8, -4, -2, 12, 14, 20, 22, 36, 42, 46, 66, 84, 96, 96, 98],23,),\n    ([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],19,),\n    ([11, 12, 14, 28, 42, 48, 50, 58, 67, 74, 86, 89, 95],7,),\n    ([52, -56, -6, 74, 10, 68, 74, 10, 16, -80, 82, -32, 6, -6, 82, 20],11,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],31,),\n    ([4, 80, 92],1,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def getOddOccurrence ( arr , arr_size ) :\n    for i in range ( 0 , arr_size ) :\n        count = 0\n        for j in range ( 0 , arr_size ) :\n            if arr [ i ] == arr [ j ] :\n                count += 1\n        if ( count % 2 != 0 ) :\n            return arr [ i ]\n    return - 1\n"}
Disassembly of <code object getOddOcCO_MEMORY 0x7f2b01639660, file "<dis>", line 1>:
2 0 SETUP_LOOP 70 ( to 72 )
2 LOAD_GLOBAL 0 ( range )
4 LOAD_CONST 1 ( 0 )
6 LOAD_FAST 1 ( arr_size )
8 CALL_FUNCTION 2
10 GET_ITER
>> 12 FOR_ITER 54 ( to 70 )
14 STORE_FAST 2 ( i )

3 16 LOAD_CONST 1 ( 0 )
18 STORE_FAST 3 ( count )

4 20 SETUP_LOOP 44 ( to 68 )
22 LOAD_GLOBAL 0 ( range )
24 LOAD_CONST 1 ( 0 )
26 LOAD_FAST 1 ( arr_size )
28 CALL_FUNCTION 2
30 GET_ITER
>> 32 FOR_ITER 28 ( to 66 )
34 STORE_FAST 4 ( j )

5 36 LOAD_FAST 0 ( arr )
38 LOAD_FAST 2 ( i )
40 BINARY_SUBSCR
42 LOAD_FAST 0 ( arr )
44 LOAD_FAST 4 ( j )
46 BINARY_SUBSCR
48 COMPARE_OP 2 ( == )
50 POP_JUMP_IF_FALSE 32

6 52 LOAD_FAST 3 ( count )
54 LOAD_CONST 2 ( 1 )
56 INPLACE_ADD
58 STORE_FAST 3 ( count )
60 JUMP_ABSOLUTE 32
>> 62 POP_BLOCK
>> 64 JUMP_ABSOLUTE 12
>> 66 POP_BLOCK

7 >> 68 LOAD_FAST 3 ( count )
70 LOAD_CONST 3 ( 2 )
72 BINARY_MODULO
74 LOAD_CONST 1 ( 0 )
76 COMPARE_OP 3 ( != )
78 POP_JUMP_IF_FALSE 96

8 80 LOAD_FAST 0 ( arr )
82 LOAD_FAST 2 ( i )
84 BINARY_SUBSCR
86 RETURN_VALUE
88 JUMP_ABSOLUTE 12
>> 90 POP_BLOCK

9 >> 92 LOAD_CONST 4 ( - 1 )
94 RETURN_VALUE
