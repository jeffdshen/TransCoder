{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( n ) :\n    if ( n < 0 ) :\n        return 0 ;\n    if ( n <= 1 ) :\n        return 1 ;\n    x = ( ( n * math.log10 ( n / math.e ) + math.log10 ( 2 * math.pi * n ) / 2.0 ) ) ;\n    return math.floor ( x ) + 1 ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (56,),\n    (92,),\n    (52,),\n    (96,),\n    (96,),\n    (63,),\n    (51,),\n    (79,),\n    (70,),\n    (9,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findDigits ( n ) :\n    if ( n < 0 ) :\n        return 0 ;\n    if ( n <= 1 ) :\n        return 1 ;\n    x = ( ( n * math.log10 ( n / math.e ) + math.log10 ( 2 * math.pi * n ) / 2.0 ) ) ;\n    return math.floor ( x ) + 1 ;\n"}
Disassembly of <code object findDigits at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 0 )
4 COMPARE_OP 0 ( < )
6 POP_JUMP_IF_FALSE 12

3 8 LOAD_CONST 1 ( 0 )
10 RETURN_VALUE

4 >> 12 LOAD_FAST 0 ( n )
14 LOAD_CONST 2 ( 1 )
16 COMPARE_OP 1 ( <= )
18 POP_JUMP_IF_FALSE 24

5 20 LOAD_CONST 2 ( 1 )
22 RETURN_VALUE

6 >> 24 LOAD_FAST 0 ( n )
26 LOAD_GLOBAL 0 ( math )
28 LOAD_METHOD 1 ( log10 )
30 LOAD_FAST 0 ( n )
32 LOAD_GLOBAL 0 ( math )
34 LOAD_ATTR 2 ( e )
36 BINARY_TRUE_DIVIDE
38 CALL_METHOD 1
40 BINARY_MULTIPLY
42 LOAD_GLOBAL 0 ( math )
44 LOAD_METHOD 1 ( log10 )
46 LOAD_CONST 3 ( 2 )
48 LOAD_GLOBAL 0 ( math )
50 LOAD_ATTR 2 ( pi )
52 BINARY_MULTIPLY
54 LOAD_FAST 0 ( n )
56 BINARY_MULTIPLY
58 LOAD_CONST 4 ( 2.0 )
60 BINARY_TRUE_DIVIDE
62 CALL_METHOD 1
64 BINARY_ADD
66 STORE_FAST 1 ( x )

7 68 LOAD_GLOBAL 0 ( math )
70 LOAD_METHOD 3 ( floor )
72 LOAD_FAST 1 ( x )
74 CALL_METHOD 1
76 LOAD_CONST 2 ( 1 )
78 BINARY_ADD
80 RETURN_VALUE
