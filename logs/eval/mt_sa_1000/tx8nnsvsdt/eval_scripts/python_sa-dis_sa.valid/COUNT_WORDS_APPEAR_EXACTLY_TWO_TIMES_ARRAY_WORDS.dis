{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( stri , n ) :\n    m = dict ( )\n    for i in range ( n ) :\n        m [ stri [ i ] ] = m.get ( stri [ i ] , 0 ) + 1\n    res = 0\n    for i in m.values ( ) :\n        if i == 2 :\n            res += 1\n    return res\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([\"hate\", \"love\", \"peace\", \"love\", \"peace\", \"hate\", \"love\", \"peace\", \"love\", \"peace\"],10,),\n    ([\"16\",\"946613197072\",\"532052\",\"42780833\",\"511552\",\"1241934\",\"4\",\"3444540\",\"47487223670074\",\"23753\",\"14158\",\"4\",\"95420017116714\",\"16\",\"0845\",\"689000748\",\"976403809728\",\"8922\",\"487784120896\",\"329\",\"611\",\"59101\",\"611\",\"2131059721\",\"53952148295020\",\"445948587\",\"3905249775372\",\"4683180907\",\"7169093\",\"01413852276627\",\"63\",\"5864\",\"40862536595\",\"2280304422294\",\"930028582\",\"05\",\"33447\"],32,),\n    ([\"001000100000\",\"1010\",\"01011\",\"11\",\"011\",\"1010\"],6,),\n    ([\"Om\", \"Om\", \"Shankar\", \"Tripathi\", \"Tom\", \"Jerry\", \"Jerry\"],7,),\n    ([\"2\",\"644\",\"2\",\"42484637089\",\"81578664\",\"0778\"],6,),\n    ([\"001000101\",\"011010\",\"1\",\"101010011\",\"011010\",\"01\",\"10111000101\",\"0\",\"1\",\"00101101\",\"0\",\"0\"],12,),\n    ([\"kl\",\"p sH\",\"PwCPMPu\",\"tQoIgPpk\",\"wtsNP WjS\",\"kl \",\"TXsFWgU\",\"kl\",\"AD\",\"NjjTyFGwNWZcB\",\"jpFQslbGbDI\",\"cEpGAgvpk\",\"EMaDkMOm\",\"YZuNZgfwDIjG\",\"k\",\"hJx jHmGpQYwQP\",\"CIETe\",\"RH\",\"Pj\",\"h\",\"DInR\",\"AEsqOvliQtz\",\"NwzHTALTt LS\",\"LwLR\",\"WvDCzlQF\",\"soJb\",\"WktoldCbWyTO\",\"pIdRJxY\",\"BmpWxjOwTXkjjL\",\"zmtCiQ\",\"g\",\"yBmDW\",\"QhaBZrQnOJaAJ\",\"u\",\"MGTwCKve\",\"UxYQrONag\",\"xsGSz\",\"dqNPTT\",\"U W\",\"ygJKvCEKDClby\",\"M\",\"yXJQHxjyDQDLkT\",\"oJmaREOEk YA\",\"zUwiwhSMdiC\",\"jYgZEktcdgLD\",\"fwyTAAW\",\"GENttdzeGY \"],43,),\n    ([\"938\",\"074209\",\"0949093096\",\"218622476\",\"71692175\",\"0714\",\"81217924991\",\"74016430795374\",\"52213147\",\"338\",\"939\",\"798161500954\",\"90528060774015\",\"68715\",\"75810\",\"43450\",\"8017\",\"0193164\",\"5945740\",\"212\",\"4589289\",\"2912211026\",\"0\",\"49\",\"8230114\",\"0733435391403\",\"5429\",\"10070\"],20,),\n    ([\"00\",\"0\",\"00\",\"0101111010100\",\"110\"],4,),\n    ([\"g\",\"h\",\"ok\",\"h\",\"ok\",\"sqozuC\",\"ut\",\"ZwRcG\",\"ok\",\"MR\",\"jHrWyy\",\"qaJlrokgRHuZH\",\"LjPNzDUKszYmCq\",\"g\",\"ZGjLfMnyAGL\",\"kEZoSxOMEWSFpw\",\"IFtqNaDVnG\",\"iJoJXl\",\"vjrQMyWor\",\"FTEHZqbHGlmHph\",\"QeSdzm\",\"nPostKHkigyJt\",\"mOSekk\"],15,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countWords ( stri , n ) :\n    m = dict ( )\n    for i in range ( n ) :\n        m [ stri [ i ] ] = m.get ( stri [ i ] , 0 ) + 1\n    res = 0\n    for i in m.values ( ) :\n        if i == 2 :\n            res += 1\n    return res\n"}
Disassembly of <code object countWords at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( dict )
2 CALL_FUNCTION 0
4 STORE_FAST 2 ( m )

3 6 SETUP_LOOP 46 ( to 58 )
8 LOAD_GLOBAL 1 ( range )
10 LOAD_FAST 1 ( n )
12 CALL_FUNCTION 1
14 GET_ITER
>> 16 FOR_ITER 38 ( to 56 )
18 STORE_FAST 3 ( i )

4 20 LOAD_FAST 2 ( m )
22 LOAD_METHOD 2 ( get )
24 LOAD_FAST 0 ( stri )
26 LOAD_FAST 3 ( i )
28 BINARY_SUBSCR
30 LOAD_CONST 1 ( 0 )
32 CALL_METHOD 2
34 LOAD_CONST 2 ( 1 )
36 BINARY_ADD
38 LOAD_FAST 2 ( m )
40 LOAD_FAST 0 ( stri )
42 LOAD_FAST 3 ( i )
44 BINARY_SUBSCR
46 STORE_SUBSCR
48 JUMP_ABSOLUTE 16
>> 50 POP_BLOCK

5 52 LOAD_CONST 1 ( 0 )
54 STORE_FAST 4 ( res )

6 56 SETUP_LOOP 40 ( to 96 )
58 LOAD_FAST 2 ( m )
60 LOAD_METHOD 3 ( values )
62 CALL_METHOD 0
64 GET_ITER
>> 66 FOR_ITER 28 ( to 94 )
68 STORE_FAST 3 ( i )

7 70 LOAD_FAST 3 ( i )
72 LOAD_CONST 3 ( 2 )
74 COMPARE_OP 2 ( == )
76 POP_JUMP_IF_FALSE 66

8 78 LOAD_FAST 4 ( res )
80 LOAD_CONST 2 ( 1 )
82 INPLACE_ADD
84 STORE_FAST 4 ( res )
86 JUMP_ABSOLUTE 66
>> 88 POP_BLOCK

9 >> 90 LOAD_FAST 4 ( res )
92 RETURN_VALUE
