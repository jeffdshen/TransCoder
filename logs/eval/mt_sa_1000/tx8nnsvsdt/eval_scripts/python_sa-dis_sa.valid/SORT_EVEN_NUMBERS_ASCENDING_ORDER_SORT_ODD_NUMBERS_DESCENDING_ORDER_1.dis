{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    for i in range ( 0 , n ) :\n        if ( arr [ i ] & 1 ) :\n            arr [ i ] *= - 1\n    arr.sort ( )\n    for i in range ( 0 , n ) :\n        if ( arr [ i ] & 1 ) :\n            arr [ i ] *= - 1\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([4],0,),\n    ([8, -74, 89, 65, 51, -15, 68, 51, 23, 44, 89],8,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],28,),\n    ([51, 74, 43, 15, 38, 15, 5, 93],6,),\n    ([-96, -75, -64, -20, -5, -2, 1, 40, 46, 64],7,),\n    ([0, 0, 1, 0, 0, 1, 0, 0, 0],5,),\n    ([1, 2, 4, 4, 17, 22, 23, 28, 35, 38, 39, 39, 41, 42, 42, 45, 46, 49, 49, 49, 50, 59, 62, 68, 69, 71, 73, 76, 78, 79, 80, 87, 88, 88, 90, 90, 91, 93, 95, 96, 98],34,),\n    ([11, 68, -52, -49, -57, -2, 83, 77, 24, -20, 85, 11, 43, -73, 96, 92, 58, 64, 95, 13, -14, 14, 24, -51, -24, -45, -44, 96, -5, -56, 59],24,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],14,),\n    ([44, 7, 44, 68, 34, 66, 69, 55, 10, 96, 42, 41, 77, 69, 10, 10, 91, 60, 51],13,)\n        ]\n    filled_function_param = [\n    ([4],0,),\n    ([8, -74, 89, 65, 51, -15, 68, 51, 23, 44, 89],8,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],28,),\n    ([51, 74, 43, 15, 38, 15, 5, 93],6,),\n    ([-96, -75, -64, -20, -5, -2, 1, 40, 46, 64],7,),\n    ([0, 0, 1, 0, 0, 1, 0, 0, 0],5,),\n    ([1, 2, 4, 4, 17, 22, 23, 28, 35, 38, 39, 39, 41, 42, 42, 45, 46, 49, 49, 49, 50, 59, 62, 68, 69, 71, 73, 76, 78, 79, 80, 87, 88, 88, 90, 90, 91, 93, 95, 96, 98],34,),\n    ([11, 68, -52, -49, -57, -2, 83, 77, 24, -20, 85, 11, 43, -73, 96, 92, 58, 64, 95, 13, -14, 14, 24, -51, -24, -45, -44, 96, -5, -56, 59],24,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],14,),\n    ([44, 7, 44, 68, 34, 66, 69, 55, 10, 96, 42, 41, 77, 69, 10, 10, 91, 60, 51],13,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        f_filled(*(filled_function_param[i]))\n        f_gold(*parameters_set)\n        if parameters_set == filled_function_param[i]:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def twoWaySort ( arr , n ) :\n    for i in range ( 0 , n ) :\n        if ( arr [ i ] & 1 ) :\n            arr [ i ] *= - 1\n    arr.sort ( )\n    for i in range ( 0 , n ) :\n        if ( arr [ i ] & 1 ) :\n            arr [ i ] *= - 1\n"}
Disassembly of <code object twoWaySort at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 SETUP_LOOP 46 ( to 48 )
2 LOAD_GLOBAL 0 ( range )
4 LOAD_CONST 1 ( 0 )
6 LOAD_FAST 1 ( n )
8 CALL_FUNCTION 2
10 GET_ITER
>> 12 FOR_ITER 30 ( to 46 )
14 STORE_FAST 2 ( i )

3 16 LOAD_FAST 0 ( arr )
18 LOAD_FAST 2 ( i )
20 BINARY_SUBSCR
22 LOAD_CONST 2 ( 1 )
24 BINARY_AND
26 POP_JUMP_IF_FALSE 12

4 28 LOAD_FAST 0 ( arr )
30 LOAD_FAST 2 ( i )
32 DUP_TOP_TWO
34 BINARY_SUBSCR
36 LOAD_CONST 3 ( - 1 )
38 INPLACE_MULTIPLY
40 ROT_THREE
42 STORE_SUBSCR
44 JUMP_ABSOLUTE 12
>> 46 POP_BLOCK

5 >> 48 LOAD_FAST 0 ( arr )
50 LOAD_METHOD 1 ( sort )
52 CALL_METHOD 0
54 POP_TOP

6 56 SETUP_LOOP 40 ( to 96 )
58 LOAD_GLOBAL 0 ( range )
60 LOAD_CONST 1 ( 0 )
62 LOAD_FAST 1 ( n )
64 CALL_FUNCTION 2
66 GET_ITER
>> 68 FOR_ITER 28 ( to 94 )
70 STORE_FAST 2 ( i )

7 72 LOAD_FAST 0 ( arr )
74 LOAD_FAST 2 ( i )
76 BINARY_SUBSCR
78 LOAD_CONST 2 ( 1 )
80 BINARY_AND
82 POP_JUMP_IF_FALSE 68

8 84 LOAD_FAST 0 ( arr )
86 LOAD_FAST 2 ( i )
88 DUP_TOP_TWO
90 BINARY_SUBSCR
92 LOAD_CONST 3 ( - 1 )
94 INPLACE_MULTIPLY
96 ROT_THREE
98 STORE_SUBSCR
100 JUMP_ABSOLUTE 68
>> 102 POP_BLOCK
>> 104 LOAD_CONST 0 ( None )
106 RETURN_VALUE
