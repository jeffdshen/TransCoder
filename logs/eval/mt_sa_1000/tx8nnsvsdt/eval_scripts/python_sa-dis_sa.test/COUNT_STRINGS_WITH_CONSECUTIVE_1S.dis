{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    a = [ 0 ] * n\n    b = [ 0 ] * n\n    a [ 0 ] = b [ 0 ] = 1\n    for i in range ( 1 , n ) :\n        a [ i ] = a [ i - 1 ] + b [ i - 1 ]\n        b [ i ] = a [ i - 1 ]\n    return ( 1 << n ) - a [ n - 1 ] - b [ n - 1 ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (27,),\n    (72,),\n    (13,),\n    (83,),\n    (75,),\n    (33,),\n    (57,),\n    (51,),\n    (10,),\n    (1,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countStrings ( n ) :\n    a = [ 0 ] * n\n    b = [ 0 ] * n\n    a [ 0 ] = b [ 0 ] = 1\n    for i in range ( 1 , n ) :\n        a [ i ] = a [ i - 1 ] + b [ i - 1 ]\n        b [ i ] = a [ i - 1 ]\n    return ( 1 << n ) - a [ n - 1 ] - b [ n - 1 ]\n"}
Disassembly of <code object countStrings at 0x7f2b016399c0, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 BUILD_LIST 1
4 LOAD_FAST 0 ( n )
6 BINARY_MULTIPLY
8 STORE_FAST 1 ( a )

3 10 LOAD_CONST 1 ( 0 )
12 BUILD_LIST 1
14 LOAD_FAST 0 ( n )
16 BINARY_MULTIPLY
18 STORE_FAST 2 ( b )

4 20 LOAD_CONST 2 ( 1 )
22 LOAD_FAST 1 ( a )
24 LOAD_CONST 1 ( 0 )
26 STORE_SUBSCR

5 28 SETUP_LOOP 76 ( to 102 )
30 LOAD_GLOBAL 0 ( range )
32 LOAD_CONST 2 ( 1 )
34 LOAD_FAST 0 ( n )
36 CALL_FUNCTION 2
38 GET_ITER
>> 40 FOR_ITER 60 ( to 100 )
42 STORE_FAST 3 ( i )

6 44 LOAD_FAST 1 ( a )
46 LOAD_FAST 3 ( i )
48 LOAD_CONST 2 ( 1 )
50 BINARY_SUBTRACT
52 BINARY_SUBSCR
54 LOAD_FAST 2 ( b )
56 LOAD_FAST 3 ( i )
58 LOAD_CONST 2 ( 1 )
60 BINARY_SUBTRACT
62 BINARY_SUBSCR
64 BINARY_ADD
66 LOAD_FAST 1 ( a )
68 LOAD_FAST 3 ( i )
70 STORE_SUBSCR

7 72 LOAD_FAST 1 ( a )
74 LOAD_FAST 3 ( i )
76 LOAD_CONST 2 ( 1 )
78 BINARY_SUBTRACT
80 BINARY_SUBSCR
82 LOAD_FAST 2 ( b )
84 LOAD_FAST 3 ( i )
86 STORE_SUBSCR
88 JUMP_ABSOLUTE 40
>> 90 POP_BLOCK

8 >> 92 LOAD_CONST 2 ( 1 )
94 LOAD_FAST 0 ( n )
96 BINARY_LSHIFT
98 LOAD_FAST 1 ( a )
100 LOAD_FAST 0 ( n )
102 LOAD_CONST 2 ( 1 )
104 BINARY_SUBTRACT
106 BINARY_SUBSCR
108 BINARY_SUBTRACT
110 LOAD_FAST 1 ( a )
112 LOAD_FAST 0 ( n )
114 LOAD_CONST 2 ( 1 )
116 BINARY_SUBTRACT
118 BINARY_SUBSCR
120 BINARY_SUBTRACT
122 RETURN_VALUE
