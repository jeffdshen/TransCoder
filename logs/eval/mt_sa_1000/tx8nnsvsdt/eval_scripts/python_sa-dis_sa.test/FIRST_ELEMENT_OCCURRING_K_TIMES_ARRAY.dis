{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , k ) :\n    count_map = { } ;\n    for i in range ( 0 , n ) :\n        if ( arr [ i ] in count_map.keys ( ) ) :\n            count_map [ arr [ i ] ] += 1\n        else :\n            count_map [ arr [ i ] ] = 1\n        i += 1\n    for i in range ( 0 , n ) :\n        if ( count_map [ arr [ i ] ] == k ) :\n            return arr [ i ]\n        i += 1\n    return - 1\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([2, 3, 4, 4, 7, 18, 20, 23, 27, 30, 31, 31, 32, 35, 36, 43, 45, 46, 49, 50, 53, 55, 59, 60, 64, 64, 65, 68, 78, 80, 80, 85, 95],30,2,),\n    ([-26, 32, 36, 6, 64, 24, -28, 96],6,3,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],15,7,),\n    ([38, 40, 43, 70, 20, 40, 95, 96, 81, 82],9,1,),\n    ([-68, -8, -8, 16, 24, 54],3,2,),\n    ([1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1],6,4,),\n    ([13, 18, 19, 28, 31, 34, 49, 49, 53, 57, 58, 62, 75, 76, 77, 78, 80, 84, 84, 85, 87, 91, 98, 99],20,2,),\n    ([-4, 24, -86, -84, 30, -16, 12, -92, -68, 22],6,5,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],8,10,),\n    ([55, 44, 75, 97, 25, 65, 76, 53, 20, 78, 25, 59, 61, 29, 81, 35, 15, 78, 41, 44, 31, 33, 39, 93, 26, 67],23,20,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def firstElement ( arr , n , k ) :\n    count_map = { } ;\n    for i in range ( 0 , n ) :\n        if ( arr [ i ] in count_map.keys ( ) ) :\n            count_map [ arr [ i ] ] += 1\n        else :\n            count_map [ arr [ i ] ] = 1\n        i += 1\n    for i in range ( 0 , n ) :\n        if ( count_map [ arr [ i ] ] == k ) :\n            return arr [ i ]\n        i += 1\n    return - 1\n"}
Disassembly of <code object firstElement at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 BUILD_MAP 0
2 STORE_FAST 3 ( count_map )

3 4 SETUP_LOOP 76 ( to 82 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_CONST 1 ( 0 )
10 LOAD_FAST 1 ( n )
12 CALL_FUNCTION 2
14 GET_ITER
>> 16 FOR_ITER 56 ( to 80 )
18 STORE_FAST 4 ( i )

4 20 LOAD_FAST 0 ( arr )
22 LOAD_FAST 4 ( i )
24 BINARY_SUBSCR
26 LOAD_FAST 3 ( count_map )
28 LOAD_METHOD 1 ( keys )
30 CALL_METHOD 0
32 COMPARE_OP 6 ( in )
34 POP_JUMP_IF_FALSE 62

5 36 LOAD_FAST 3 ( count_map )
38 LOAD_FAST 0 ( arr )
40 LOAD_FAST 4 ( i )
42 BINARY_SUBSCR
44 DUP_TOP_TWO
46 BINARY_SUBSCR
48 LOAD_CONST 2 ( 1 )
50 INPLACE_ADD
52 ROT_THREE
54 STORE_SUBSCR
56 JUMP_ABSOLUTE 16

7 >> 58 LOAD_CONST 2 ( 1 )
60 LOAD_FAST 3 ( count_map )
62 LOAD_FAST 0 ( arr )
64 LOAD_FAST 4 ( i )
66 BINARY_SUBSCR
68 STORE_SUBSCR

8 70 LOAD_FAST 4 ( i )
72 LOAD_CONST 2 ( 1 )
74 INPLACE_ADD
76 STORE_FAST 4 ( i )
78 JUMP_ABSOLUTE 16
>> 80 POP_BLOCK

9 >> 82 SETUP_LOOP 48 ( to 120 )
84 LOAD_GLOBAL 0 ( range )
86 LOAD_CONST 1 ( 0 )
88 LOAD_FAST 1 ( n )
90 CALL_FUNCTION 2
92 GET_ITER
>> 94 FOR_ITER 36 ( to 118 )
96 STORE_FAST 4 ( i )

10 98 LOAD_FAST 3 ( count_map )
100 LOAD_FAST 0 ( arr )
102 LOAD_FAST 4 ( i )
104 BINARY_SUBSCR
106 BINARY_SUBSCR
108 LOAD_FAST 2 ( k )
110 COMPARE_OP 2 ( == )
112 POP_JUMP_IF_FALSE 122

11 114 LOAD_FAST 0 ( arr )
116 LOAD_FAST 4 ( i )
118 BINARY_SUBSCR
120 RETURN_VALUE

12 >> 122 LOAD_FAST 4 ( i )
124 LOAD_CONST 2 ( 1 )
126 INPLACE_ADD
128 STORE_FAST 4 ( i )

13 >> 130 LOAD_FAST 4 ( i )
132 LOAD_CONST 2 ( 1 )
134 INPLACE_ADD
136 STORE_FAST 4 ( i )
138 JUMP_ABSOLUTE 94
>> 140 POP_BLOCK

14 >> 142 LOAD_CONST 3 ( - 1 )
144 RETURN_VALUE
