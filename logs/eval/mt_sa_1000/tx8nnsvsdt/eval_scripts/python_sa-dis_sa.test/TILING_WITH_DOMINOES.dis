{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    A = [ 0 ] * ( n + 1 )\n    B = [ 0 ] * ( n + 1 )\n    A [ 0 ] = 1\n    A [ 1 ] = 0\n    B [ 0 ] = 0\n    B [ 1 ] = 1\n    for i in range ( 2 , n + 1 ) :\n        A [ i ] = A [ i - 2 ] + 2 * B [ i - 1 ]\n        B [ i ] = A [ i - 1 ] + B [ i - 2 ]\n    return A [ n ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (29,),\n    (13,),\n    (25,),\n    (65,),\n    (27,),\n    (42,),\n    (19,),\n    (50,),\n    (59,),\n    (13,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countWays ( n ) :\n    A = [ 0 ] * ( n + 1 )\n    B = [ 0 ] * ( n + 1 )\n    A [ 0 ] = 1\n    A [ 1 ] = 0\n    B [ 0 ] = 0\n    B [ 1 ] = 1\n    for i in range ( 2 , n + 1 ) :\n        A [ i ] = A [ i - 2 ] + 2 * B [ i - 1 ]\n        B [ i ] = A [ i - 1 ] + B [ i - 2 ]\n    return A [ n ]\n"}
Disassembly of <code object countWays at 0x7f2b016399c0, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 BUILD_LIST 1
4 LOAD_FAST 0 ( n )
6 LOAD_CONST 2 ( 1 )
8 BINARY_ADD
10 BINARY_MULTIPLY
12 STORE_FAST 1 ( A )

3 14 LOAD_CONST 1 ( 0 )
16 BUILD_LIST 1
18 LOAD_FAST 0 ( n )
20 LOAD_CONST 2 ( 1 )
22 BINARY_ADD
24 BINARY_MULTIPLY
26 STORE_FAST 2 ( B )

4 28 LOAD_CONST 2 ( 1 )
30 LOAD_FAST 1 ( A )
32 LOAD_CONST 1 ( 0 )
34 STORE_SUBSCR

5 36 LOAD_CONST 1 ( 0 )
38 LOAD_FAST 1 ( A )
40 LOAD_CONST 2 ( 1 )
42 STORE_SUBSCR

6 44 LOAD_CONST 1 ( 0 )
46 LOAD_FAST 2 ( B )
48 LOAD_CONST 1 ( 0 )
50 STORE_SUBSCR

7 52 LOAD_CONST 2 ( 1 )
54 LOAD_FAST 2 ( B )
56 LOAD_CONST 2 ( 1 )
58 STORE_SUBSCR

8 60 SETUP_LOOP 92 ( to 146 )
62 LOAD_GLOBAL 0 ( range )
64 LOAD_CONST 3 ( 2 )
66 LOAD_FAST 0 ( n )
68 LOAD_CONST 2 ( 1 )
70 BINARY_ADD
72 CALL_FUNCTION 2
74 GET_ITER
>> 76 FOR_ITER 76 ( to 144 )
78 STORE_FAST 3 ( i )

9 80 LOAD_FAST 1 ( A )
82 LOAD_FAST 3 ( i )
84 LOAD_CONST 3 ( 2 )
86 BINARY_SUBTRACT
88 BINARY_SUBSCR
90 LOAD_CONST 3 ( 2 )
92 LOAD_FAST 2 ( B )
94 LOAD_FAST 3 ( i )
96 LOAD_CONST 2 ( 1 )
98 BINARY_SUBTRACT
100 BINARY_SUBSCR
102 BINARY_MULTIPLY
104 BINARY_ADD
106 LOAD_FAST 1 ( A )
108 LOAD_FAST 3 ( i )
110 STORE_SUBSCR

10 112 LOAD_FAST 1 ( A )
114 LOAD_FAST 3 ( i )
116 LOAD_CONST 2 ( 1 )
118 BINARY_SUBTRACT
120 BINARY_SUBSCR
122 LOAD_FAST 2 ( B )
124 LOAD_FAST 3 ( i )
126 LOAD_CONST 3 ( 2 )
128 BINARY_SUBTRACT
130 BINARY_SUBSCR
132 BINARY_ADD
134 LOAD_FAST 2 ( B )
136 LOAD_FAST 3 ( i )
138 STORE_SUBSCR
140 JUMP_ABSOLUTE 76
>> 142 POP_BLOCK

11 >> 144 LOAD_FAST 1 ( A )
146 LOAD_FAST 0 ( n )
148 BINARY_SUBSCR
150 RETURN_VALUE
