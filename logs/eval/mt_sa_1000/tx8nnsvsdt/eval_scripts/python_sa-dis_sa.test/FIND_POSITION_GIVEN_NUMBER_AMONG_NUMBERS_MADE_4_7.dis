{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    i = 0\n    j = len ( n )\n    pos = 0\n    while ( i < j ) :\n        if ( n [ i ] == '4' ) :\n            pos = pos * 2 + 1\n        if ( n [ i ] == '7' ) :\n            pos = pos * 2 + 2\n        i = i + 1\n    return pos\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('7',),\n    ('305745689',),\n    ('444',),\n    ('4',),\n    ('2074',),\n    ('27',),\n    ('447',),\n    ('255',),\n    ('10000111111011',),\n    ('fAKcSDRTNz',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findpos ( n ) :\n    i = 0\n    j = len ( n )\n    pos = 0\n    while ( i < j ) :\n        if ( n [ i ] == '4' ) :\n            pos = pos * 2 + 1\n        if ( n [ i ] == '7' ) :\n            pos = pos * 2 + 2\n        i = i + 1\n    return pos\n"}
Disassembly of <code object findpos at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( i )

3 4 LOAD_GLOBAL 0 ( len )
6 LOAD_FAST 0 ( n )
8 CALL_FUNCTION 1
10 STORE_FAST 2 ( j )

4 12 LOAD_CONST 1 ( 0 )
14 STORE_FAST 3 ( pos )

5 16 SETUP_LOOP 52 ( to 68 )
>> 18 LOAD_FAST 1 ( i )
20 LOAD_FAST 2 ( j )
22 COMPARE_OP 0 ( < )
24 POP_JUMP_IF_FALSE 66

6 26 LOAD_FAST 0 ( n )
28 LOAD_FAST 1 ( i )
30 BINARY_SUBSCR
32 LOAD_CONST 2 ( '4' )
34 COMPARE_OP 2 ( == )
36 POP_JUMP_IF_FALSE 52

7 38 LOAD_FAST 3 ( pos )
40 LOAD_CONST 3 ( 2 )
42 BINARY_MULTIPLY
44 LOAD_CONST 4 ( 1 )
46 BINARY_ADD
48 STORE_FAST 3 ( pos )
50 JUMP_ABSOLUTE 18
>> 52 POP_BLOCK

8 >> 54 LOAD_FAST 0 ( n )
56 LOAD_FAST 1 ( i )
58 BINARY_SUBSCR
60 LOAD_CONST 5 ( '7' )
62 COMPARE_OP 2 ( == )
64 POP_JUMP_IF_FALSE 78

9 66 LOAD_FAST 3 ( pos )
68 LOAD_CONST 3 ( 2 )
70 BINARY_MULTIPLY
72 LOAD_CONST 3 ( 2 )
74 BINARY_ADD
76 STORE_FAST 3 ( pos )

10 >> 78 LOAD_FAST 1 ( i )
80 LOAD_CONST 4 ( 1 )
82 BINARY_ADD
84 STORE_FAST 1 ( i )
86 JUMP_ABSOLUTE 18
>> 88 POP_BLOCK

11 90 LOAD_FAST 3 ( pos )
92 RETURN_VALUE
