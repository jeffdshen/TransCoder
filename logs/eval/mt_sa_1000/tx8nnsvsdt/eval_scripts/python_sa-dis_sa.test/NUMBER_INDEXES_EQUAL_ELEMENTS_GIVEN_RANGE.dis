{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( a , n , l , r ) :\n    count = 0\n    for i in range ( l , r ) :\n        if ( a [ i ] == a [ i + 1 ] ) :\n            count += 1\n    return count\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([4, 13, 13, 16, 16, 19, 39, 41, 48, 52, 57, 62, 65, 67, 76, 84, 88, 91, 95, 96, 97, 98],18,12,17,),\n    ([62, 76, 86, -8, 84, -6, 72, 84, 6, -50, -18, -94, 54, 90, -74, -64, -26, -14, -32, 62, 10, 4, 70, -28, 8, 18, 4, -62, -76, 84, -78, -4, 84, 98, 58, -68, 42, -6, 34, -38, 52, -84, 78],32,38,23,),\n    ([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],10,6,6,),\n    ([11, 75, 98, 29, 62, 53, 48, 91, 86, 66, 48, 94],8,6,6,),\n    ([-94, -84, -70, -70, -40, -40, -36, -24, 10, 48, 62, 74],11,7,8,),\n    ([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0],36,40,37,),\n    ([1, 2, 6, 7, 10, 11, 13, 19, 19, 25, 29, 30, 32, 34, 35, 45, 45, 46, 47, 48, 48, 53, 58, 61, 64, 65, 67, 75, 76, 81, 81, 84, 84, 85, 86, 94, 94, 96, 99],25,19,37,),\n    ([-56, 42, -34, -12, -86, 82, -96, -66, 30, 16, -40, 72, 84, 94, -48, -30, 26, 50, 42, -44, -50, 22, -38, 8, 34, 94, 2, 16, -32, 18, -58, 12, -26, 28, -62],21,30,26,),\n    ([0, 0, 0, 0, 1, 1, 1],4,5,5,),\n    ([6, 29],1,1,1,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def answer_query ( a , n , l , r ) :\n    count = 0\n    for i in range ( l , r ) :\n        if ( a [ i ] == a [ i + 1 ] ) :\n            count += 1\n    return count\n"}
Disassembly of <code object answer_query at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 4 ( count )

3 4 SETUP_LOOP 48 ( to 54 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_FAST 2 ( l )
10 LOAD_FAST 3 ( r )
12 CALL_FUNCTION 2
14 GET_ITER
>> 16 FOR_ITER 34 ( to 52 )
18 STORE_FAST 5 ( i )

4 20 LOAD_FAST 0 ( a )
22 LOAD_FAST 5 ( i )
24 BINARY_SUBSCR
26 LOAD_FAST 0 ( a )
28 LOAD_FAST 5 ( i )
30 LOAD_CONST 2 ( 1 )
32 BINARY_ADD
34 BINARY_SUBSCR
36 COMPARE_OP 2 ( == )
38 POP_JUMP_IF_FALSE 16

5 40 LOAD_FAST 4 ( count )
42 LOAD_CONST 2 ( 1 )
44 INPLACE_ADD
46 STORE_FAST 4 ( count )
48 JUMP_ABSOLUTE 16
>> 50 POP_BLOCK

6 >> 52 LOAD_FAST 4 ( count )
54 RETURN_VALUE
