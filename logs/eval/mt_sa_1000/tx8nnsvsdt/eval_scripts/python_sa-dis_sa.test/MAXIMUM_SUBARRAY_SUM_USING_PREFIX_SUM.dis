{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( arr , n ) :\n    min_prefix_sum = 0\n    res = - math.inf\n    prefix_sum = [ ]\n    prefix_sum.append ( arr [ 0 ] )\n    for i in range ( 1 , n ) :\n        prefix_sum.append ( prefix_sum [ i - 1 ] + arr [ i ] )\n    for i in range ( n ) :\n        res = max ( res , prefix_sum [ i ] - min_prefix_sum )\n        min_prefix_sum = min ( min_prefix_sum , prefix_sum [ i ] )\n    return res\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([8, 9, 11, 17, 18, 19, 23, 24, 27, 30, 31, 31, 35, 44, 46, 47, 49, 51, 55, 58, 59, 61, 65, 67, 71, 71, 71, 71, 78, 78, 82, 91, 98],20,),\n    ([-82, -28, -66, -52, -36, 36, -88, 52, -62, 46, 42, 26, -60, 18, -52, 38, 94, -68, 44, -94, 14, 36, -70],15,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],19,),\n    ([28, 36, 42, 42, 5, 52, 74, 86, 55, 82, 59, 81, 4, 90, 24, 34, 20, 99, 86, 25, 52, 48, 62, 5, 67, 83, 60, 72, 80, 73, 38, 55, 8, 70, 95],19,),\n    ([-92, -52, -24, 36, 56],3,),\n    ([0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0],13,),\n    ([1, 1, 4, 4, 7, 7, 17, 18, 20, 26, 26, 32, 37, 38, 42, 44, 44, 46, 50, 53, 57, 58, 58, 60, 61, 61, 64, 74, 75, 77, 83, 83, 84, 84, 85, 87, 88, 90, 95, 96, 97, 98, 99, 99],25,),\n    ([-86, 2, 26, 54, -16, 16, 48, 24, 50, -10, -32, -62, 48, -12, -66],13,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],14,),\n    ([58, 14, 79, 11, 31, 28, 61, 86, 25, 27, 75, 78, 32, 55, 86, 48, 15, 51, 6, 78, 23, 82, 16, 62, 35, 51, 91, 16, 79, 38, 97, 30, 23, 58, 95, 57, 82, 35, 57, 43, 22, 41, 58, 69, 25, 65, 13, 79],39,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maximumSumSubarray ( arr , n ) :\n    min_prefix_sum = 0\n    res = - math.inf\n    prefix_sum = [ ]\n    prefix_sum.append ( arr [ 0 ] )\n    for i in range ( 1 , n ) :\n        prefix_sum.append ( prefix_sum [ i - 1 ] + arr [ i ] )\n    for i in range ( n ) :\n        res = max ( res , prefix_sum [ i ] - min_prefix_sum )\n        min_prefix_sum = min ( min_prefix_sum , prefix_sum [ i ] )\n    return res\n"}
Disassembly of <code object maximumSumSubarray at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 2 ( min_prefix_sum )

3 4 LOAD_GLOBAL 0 ( math )
6 LOAD_ATTR 1 ( inf )
8 UNARY_NEGATIVE
10 STORE_FAST 3 ( res )

4 12 BUILD_LIST 0
14 STORE_FAST 4 ( prefix_sum )

5 16 LOAD_FAST 4 ( prefix_sum )
18 LOAD_METHOD 2 ( append )
20 LOAD_FAST 0 ( arr )
22 LOAD_CONST 1 ( 0 )
24 BINARY_SUBSCR
26 CALL_METHOD 1
28 POP_TOP

6 30 SETUP_LOOP 36 ( to 68 )
32 LOAD_GLOBAL 3 ( range )
34 LOAD_CONST 2 ( 1 )
36 LOAD_FAST 1 ( n )
38 CALL_FUNCTION 2
40 GET_ITER
>> 42 FOR_ITER 24 ( to 66 )
44 STORE_FAST 5 ( i )

7 46 LOAD_FAST 4 ( prefix_sum )
48 LOAD_METHOD 2 ( append )
50 LOAD_FAST 4 ( prefix_sum )
52 LOAD_FAST 5 ( i )
54 LOAD_CONST 2 ( 1 )
56 BINARY_SUBTRACT
58 BINARY_SUBSCR
60 LOAD_FAST 0 ( arr )
62 LOAD_FAST 5 ( i )
64 BINARY_SUBSCR
66 BINARY_ADD
68 CALL_METHOD 1
70 POP_TOP
72 JUMP_ABSOLUTE 42
>> 74 POP_BLOCK

8 >> 76 SETUP_LOOP 52 ( to 126 )
78 LOAD_GLOBAL 3 ( range )
80 LOAD_FAST 1 ( n )
82 CALL_FUNCTION 1
84 GET_ITER
>> 86 FOR_ITER 44 ( to 124 )
88 STORE_FAST 5 ( i )

9 90 LOAD_GLOBAL 4 ( max )
92 LOAD_FAST 3 ( res )
94 LOAD_FAST 4 ( prefix_sum )
96 LOAD_FAST 5 ( i )
98 BINARY_SUBSCR
100 LOAD_FAST 2 ( min_prefix_sum )
102 BINARY_SUBTRACT
104 CALL_FUNCTION 2
106 STORE_FAST 3 ( res )

10 108 LOAD_GLOBAL 5 ( min )
110 LOAD_FAST 2 ( min_prefix_sum )
112 LOAD_FAST 4 ( prefix_sum )
114 LOAD_FAST 5 ( i )
116 BINARY_SUBSCR
118 CALL_FUNCTION 2
120 STORE_FAST 2 ( min_prefix_sum )
122 JUMP_ABSOLUTE 86
>> 124 POP_BLOCK

11 >> 126 LOAD_FAST 3 ( res )
128 RETURN_VALUE
