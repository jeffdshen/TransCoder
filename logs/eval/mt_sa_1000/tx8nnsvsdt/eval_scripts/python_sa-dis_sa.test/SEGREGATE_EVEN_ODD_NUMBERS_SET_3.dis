{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    i = - 1\n    j = 0\n    while ( j != n ) :\n        if ( arr [ j ] % 2 == 0 ) :\n            i = i + 1\n            arr [ i ] , arr [ j ] = arr [ j ] , arr [ i ]\n        j = j + 1\n    for i in arr :\n        print ( str ( i ) + \" \" , end = '' )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([20, 67],1,),\n    ([-54, 22, -42, -22, -48, -20, 34, -50, -22, -30, -94, 62, -24, 70, -54, -38, 84],11,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],20,),\n    ([62, 45, 87, 31, 67, 53, 61, 9, 20, 8, 99, 18, 69, 54, 99, 64, 35, 88, 85, 74, 58, 93, 65, 30, 96, 4, 77, 24, 54, 88, 43, 84, 62, 34, 93],28,),\n    ([-28, -6, 18, 42, 98],2,),\n    ([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0],21,),\n    ([10, 42, 46],2,),\n    ([88, 4, -88, 2, -16, -74, -18, -60, 86, 88, -2, 82, -8, 54, -84, -4, 32, 20],17,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],35,),\n    ([80, 52, 9, 56, 68, 69, 48, 40, 64, 73, 44, 4, 97, 20, 25, 66, 46, 64, 72, 79, 24],15,)\n        ]\n    filled_function_param = [\n    ([20, 67],1,),\n    ([-54, 22, -42, -22, -48, -20, 34, -50, -22, -30, -94, 62, -24, 70, -54, -38, 84],11,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],20,),\n    ([62, 45, 87, 31, 67, 53, 61, 9, 20, 8, 99, 18, 69, 54, 99, 64, 35, 88, 85, 74, 58, 93, 65, 30, 96, 4, 77, 24, 54, 88, 43, 84, 62, 34, 93],28,),\n    ([-28, -6, 18, 42, 98],2,),\n    ([0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0],21,),\n    ([10, 42, 46],2,),\n    ([88, 4, -88, 2, -16, -74, -18, -60, 86, 88, -2, 82, -8, 54, -84, -4, 32, 20],17,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],35,),\n    ([80, 52, 9, 56, 68, 69, 48, 40, 64, 73, 44, 4, 97, 20, 25, 66, 46, 64, 72, 79, 24],15,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        f_filled(*(filled_function_param[i]))\n        f_gold(*parameters_set)\n        if parameters_set == filled_function_param[i]:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def arrayEvenAndOdd ( arr , n ) :\n    i = - 1\n    j = 0\n    while ( j != n ) :\n        if ( arr [ j ] % 2 == 0 ) :\n            i = i + 1\n            arr [ i ] , arr [ j ] = arr [ j ] , arr [ i ]\n        j = j + 1\n    for i in arr :\n        print ( str ( i ) + \" \" , end = '' )\n"}
Disassembly of <code object arrayEvenAndOdd at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( - 1 )
2 STORE_FAST 2 ( i )

3 4 LOAD_CONST 2 ( 0 )
6 STORE_FAST 3 ( j )

4 8 SETUP_LOOP 54 ( to 66 )
>> 10 LOAD_FAST 3 ( j )
12 LOAD_FAST 1 ( n )
14 COMPARE_OP 3 ( != )
16 POP_JUMP_IF_FALSE 64

5 18 LOAD_FAST 0 ( arr )
20 LOAD_FAST 3 ( j )
22 BINARY_SUBSCR
24 LOAD_CONST 3 ( 2 )
26 BINARY_MODULO
28 LOAD_CONST 2 ( 0 )
30 COMPARE_OP 2 ( == )
32 POP_JUMP_IF_FALSE 64

6 34 LOAD_FAST 2 ( i )
36 LOAD_CONST 4 ( 1 )
38 BINARY_ADD
40 STORE_FAST 2 ( i )

7 42 LOAD_FAST 0 ( arr )
44 LOAD_FAST 3 ( j )
46 BINARY_SUBSCR
48 LOAD_FAST 0 ( arr )
50 LOAD_FAST 3 ( j )
52 STORE_SUBSCR
54 JUMP_ABSOLUTE 10
>> 56 POP_BLOCK

8 >> 58 LOAD_FAST 3 ( j )
60 LOAD_CONST 4 ( 1 )
62 BINARY_ADD
64 STORE_FAST 3 ( j )
66 JUMP_ABSOLUTE 10
>> 68 POP_BLOCK

9 >> 70 SETUP_LOOP 40 ( to 108 )
72 LOAD_FAST 0 ( arr )
74 GET_ITER
>> 76 FOR_ITER 32 ( to 106 )
78 STORE_FAST 2 ( i )

10 80 LOAD_GLOBAL 0 ( print )
82 LOAD_GLOBAL 1 ( str )
84 LOAD_FAST 2 ( i )
86 CALL_FUNCTION 1
88 LOAD_CONST 5 ( ' ' )
90 BINARY_ADD
92 LOAD_CONST 6 ( '' )
94 LOAD_CONST 6 ( ( 'end' , ) )
96 CALL_FUNCTION_KW 2
98 POP_TOP
100 JUMP_ABSOLUTE 76
>> 102 POP_BLOCK
>> 104 LOAD_CONST 0 ( None )
106 RETURN_VALUE
