{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( N ) :\n    ans = 0\n    for i in range ( 1 , N + 1 ) :\n        for j in range ( 1 , N + 1 ) :\n            ans += i // j\n    return ans\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (60,),\n    (74,),\n    (8,),\n    (74,),\n    (34,),\n    (66,),\n    (96,),\n    (11,),\n    (45,),\n    (72,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findSum ( N ) :\n    ans = 0\n    for i in range ( 1 , N + 1 ) :\n        for j in range ( 1 , N + 1 ) :\n            ans += i // j\n    return ans\n"}
Disassembly of <code object findSum at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( ans )

3 4 SETUP_LOOP 64 ( to 70 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_CONST 2 ( 1 )
10 LOAD_FAST 0 ( N )
12 LOAD_CONST 2 ( 1 )
14 BINARY_ADD
16 CALL_FUNCTION 2
18 GET_ITER
>> 20 FOR_ITER 46 ( to 68 )
22 STORE_FAST 2 ( i )

4 24 SETUP_LOOP 40 ( to 66 )
26 LOAD_GLOBAL 0 ( range )
28 LOAD_CONST 2 ( 1 )
30 LOAD_FAST 0 ( N )
32 LOAD_CONST 2 ( 1 )
34 BINARY_ADD
36 CALL_FUNCTION 2
38 GET_ITER
>> 40 FOR_ITER 24 ( to 64 )
42 STORE_FAST 3 ( j )

5 44 LOAD_FAST 1 ( ans )
46 LOAD_FAST 2 ( i )
48 LOAD_FAST 3 ( j )
50 BINARY_FLOOR_DIVIDE
52 INPLACE_ADD
54 STORE_FAST 1 ( ans )
56 JUMP_ABSOLUTE 40
>> 58 POP_BLOCK
>> 60 JUMP_ABSOLUTE 20
>> 62 POP_BLOCK

6 >> 64 LOAD_FAST 1 ( ans )
66 RETURN_VALUE
