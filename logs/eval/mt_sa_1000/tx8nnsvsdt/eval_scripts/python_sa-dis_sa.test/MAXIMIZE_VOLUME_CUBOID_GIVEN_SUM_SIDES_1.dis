{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( s ) :\n    length = int ( s / 3 )\n    s -= length\n    breadth = s / 2\n    height = s - breadth\n    return int ( length * breadth * height )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (8,),\n    (96,),\n    (96,),\n    (96,),\n    (12,),\n    (95,),\n    (72,),\n    (81,),\n    (42,),\n    (13,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxvolume ( s ) :\n    length = int ( s / 3 )\n    s -= length\n    breadth = s / 2\n    height = s - breadth\n    return int ( length * breadth * height )\n"}
Disassembly of <code object maxvolume at 0x7f2b01639660, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( int )
2 LOAD_FAST 0 ( s )
4 LOAD_CONST 1 ( 3 )
6 BINARY_TRUE_DIVIDE
8 CALL_FUNCTION 1
10 STORE_FAST 1 ( length )

3 12 LOAD_FAST 0 ( s )
14 LOAD_FAST 1 ( length )
16 INPLACE_SUBTRACT
18 STORE_FAST 0 ( s )

4 20 LOAD_FAST 0 ( s )
22 LOAD_CONST 2 ( 2 )
24 BINARY_TRUE_DIVIDE
26 STORE_FAST 2 ( breadth )

5 28 LOAD_FAST 0 ( s )
30 LOAD_FAST 2 ( breadth )
32 BINARY_SUBTRACT
34 STORE_FAST 3 ( height )

6 36 LOAD_GLOBAL 0 ( int )
38 LOAD_FAST 1 ( length )
40 LOAD_FAST 2 ( breadth )
42 BINARY_MULTIPLY
44 CALL_FUNCTION 1
46 RETURN_VALUE
