{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( num ) :\n    sum = 0\n    i = 2\n    while ( i * i <= num ) :\n        while ( num % i == 0 ) :\n            sum += i\n            num /= i\n        i += 1\n    sum += num\n    return sum\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (83,),\n    (88,),\n    (60,),\n    (6,),\n    (26,),\n    (98,),\n    (38,),\n    (90,),\n    (76,),\n    (66,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findMinSum ( num ) :\n    sum = 0\n    i = 2\n    while ( i * i <= num ) :\n        while ( num % i == 0 ) :\n            sum += i\n            num /= i\n        i += 1\n    sum += num\n    return sum\n"}
Disassembly of <code object findMinSum at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( sum )

3 4 LOAD_CONST 2 ( 2 )
6 STORE_FAST 2 ( i )

4 8 SETUP_LOOP 62 ( to 74 )
>> 10 LOAD_FAST 2 ( i )
12 LOAD_FAST 2 ( i )
14 BINARY_MULTIPLY
16 LOAD_FAST 0 ( num )
18 COMPARE_OP 1 ( <= )
20 POP_JUMP_IF_FALSE 72

5 22 SETUP_LOOP 38 ( to 60 )
>> 24 LOAD_FAST 0 ( num )
26 LOAD_FAST 2 ( i )
28 BINARY_MODULO
30 LOAD_CONST 1 ( 0 )
32 COMPARE_OP 2 ( == )
34 POP_JUMP_IF_FALSE 58

6 36 LOAD_FAST 1 ( sum )
38 LOAD_FAST 2 ( i )
40 INPLACE_ADD
42 STORE_FAST 1 ( sum )

7 44 LOAD_FAST 0 ( num )
46 LOAD_FAST 2 ( i )
48 INPLACE_TRUE_DIVIDE
50 STORE_FAST 0 ( num )
52 JUMP_ABSOLUTE 24
>> 54 POP_BLOCK

8 >> 56 LOAD_FAST 1 ( sum )
58 LOAD_FAST 0 ( num )
60 INPLACE_ADD
62 STORE_FAST 1 ( sum )

9 64 LOAD_FAST 1 ( sum )
66 LOAD_FAST 1 ( sum )
68 INPLACE_ADD
70 STORE_FAST 1 ( sum )

10 >> 72 LOAD_FAST 1 ( sum )
74 LOAD_FAST 0 ( num )
76 INPLACE_ADD
78 STORE_FAST 1 ( sum )
80 JUMP_ABSOLUTE 10
>> 82 POP_BLOCK

11 >> 84 LOAD_FAST 1 ( sum )
86 RETURN_VALUE
