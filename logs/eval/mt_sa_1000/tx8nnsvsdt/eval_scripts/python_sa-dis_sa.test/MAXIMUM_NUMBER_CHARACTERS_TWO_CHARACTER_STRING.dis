{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( str ) :\n    n = len ( str )\n    res = - 1\n    for i in range ( 0 , n - 1 ) :\n        for j in range ( i + 1 , n ) :\n            if ( str [ i ] == str [ j ] ) :\n                res = max ( res , abs ( j - i - 1 ) )\n    return res\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('cI',),\n    ('76478',),\n    ('1',),\n    ('tr',),\n    ('10',),\n    ('01',),\n    ('Rmhzp',),\n    ('5784080133917',),\n    ('1100',),\n    ('OK',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maximumChars ( str ) :\n    n = len ( str )\n    res = - 1\n    for i in range ( 0 , n - 1 ) :\n        for j in range ( i + 1 , n ) :\n            if ( str [ i ] == str [ j ] ) :\n                res = max ( res , abs ( j - i - 1 ) )\n    return res\n"}
Disassembly of <code object maximumChars at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_GLOBAL 0 ( len )
2 LOAD_FAST 0 ( str )
4 CALL_FUNCTION 1
6 STORE_FAST 1 ( n )

3 8 LOAD_CONST 1 ( - 1 )
10 STORE_FAST 2 ( res )

4 12 SETUP_LOOP 74 ( to 88 )
14 LOAD_GLOBAL 1 ( range )
16 LOAD_CONST 2 ( 0 )
18 LOAD_FAST 1 ( n )
20 LOAD_CONST 3 ( 1 )
22 BINARY_SUBTRACT
24 CALL_FUNCTION 2
26 GET_ITER
>> 28 FOR_ITER 58 ( to 86 )
30 STORE_FAST 3 ( i )

5 32 SETUP_LOOP 52 ( to 84 )
34 LOAD_GLOBAL 1 ( range )
36 LOAD_FAST 3 ( i )
38 LOAD_CONST 3 ( 1 )
40 BINARY_ADD
42 LOAD_FAST 1 ( n )
44 CALL_FUNCTION 2
46 GET_ITER
>> 48 FOR_ITER 34 ( to 82 )
50 STORE_FAST 4 ( j )

6 52 LOAD_FAST 0 ( str )
54 LOAD_FAST 3 ( i )
56 BINARY_SUBSCR
58 LOAD_FAST 0 ( str )
60 LOAD_FAST 4 ( j )
62 BINARY_SUBSCR
64 COMPARE_OP 2 ( == )
66 POP_JUMP_IF_FALSE 48

7 68 LOAD_GLOBAL 2 ( max )
70 LOAD_FAST 2 ( res )
72 LOAD_GLOBAL 3 ( abs )
74 LOAD_FAST 4 ( j )
76 LOAD_FAST 3 ( i )
78 BINARY_SUBTRACT
80 LOAD_CONST 3 ( 1 )
82 BINARY_SUBTRACT
84 CALL_FUNCTION 1
86 CALL_FUNCTION 2
88 STORE_FAST 2 ( res )
90 JUMP_ABSOLUTE 48
>> 92 POP_BLOCK
>> 94 JUMP_ABSOLUTE 28
>> 96 POP_BLOCK

8 >> 98 LOAD_FAST 2 ( res )
100 RETURN_VALUE
