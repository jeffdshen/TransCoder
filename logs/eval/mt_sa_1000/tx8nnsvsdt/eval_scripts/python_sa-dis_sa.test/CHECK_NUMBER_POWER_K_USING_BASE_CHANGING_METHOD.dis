{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n , k ) :\n    oneSeen = False\n    while ( n > 0 ) :\n        digit = n % k\n        if ( digit > 1 ) :\n            return False\n        if ( digit == 1 ) :\n            if ( oneSeen ) :\n                return False\n            oneSeen = True\n        n //= k\n    return True\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (64,4,),\n    (16,2,),\n    (27,3,),\n    (81,72,),\n    (1,9,),\n    (69,17,),\n    (8,20,),\n    (31,79,),\n    (43,81,),\n    (54,89,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def isPowerOfK ( n , k ) :\n    oneSeen = False\n    while ( n > 0 ) :\n        digit = n % k\n        if ( digit > 1 ) :\n            return False\n        if ( digit == 1 ) :\n            if ( oneSeen ) :\n                return False\n            oneSeen = True\n        n //= k\n    return True\n"}
Disassembly of <code object isPowerOfK at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( False )
2 STORE_FAST 2 ( oneSeen )

3 4 SETUP_LOOP 54 ( to 60 )
>> 6 LOAD_FAST 0 ( n )
8 LOAD_CONST 2 ( 0 )
10 COMPARE_OP 4 ( > )
12 POP_JUMP_IF_FALSE 58

4 14 LOAD_FAST 0 ( n )
16 LOAD_FAST 1 ( k )
18 BINARY_MODULO
20 STORE_FAST 3 ( digit )

5 22 LOAD_FAST 3 ( digit )
24 LOAD_CONST 3 ( 1 )
26 COMPARE_OP 4 ( > )
28 POP_JUMP_IF_FALSE 34

6 30 LOAD_CONST 1 ( False )
32 RETURN_VALUE

7 >> 34 LOAD_FAST 3 ( digit )
36 LOAD_CONST 3 ( 1 )
38 COMPARE_OP 2 ( == )
40 POP_JUMP_IF_FALSE 46

8 42 LOAD_FAST 2 ( oneSeen )
44 POP_JUMP_IF_FALSE 46

9 46 LOAD_CONST 1 ( False )
48 RETURN_VALUE

10 >> 50 LOAD_CONST 4 ( True )
52 STORE_FAST 2 ( oneSeen )
54 JUMP_ABSOLUTE 6
56 POP_BLOCK

11 58 LOAD_CONST 4 ( True )
60 STORE_FAST 2 ( oneSeen )
62 JUMP_FORWARD 4 ( to 68 )

12 >> 64 LOAD_FAST 0 ( n )
66 LOAD_FAST 1 ( k )
>> 68 BINARY_MODULO
70 STORE_FAST 0 ( n )

13 72 LOAD_CONST 4 ( True )
74 RETURN_VALUE
