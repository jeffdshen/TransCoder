{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( a , b , c , x1 , y1 ) :\n    temp = - 2 * ( a * x1 + b * y1 + c ) / ( a * a + b * b )\n    x = temp * a + x1\n    y = temp * b + y1\n    return ( x , y )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (3732.666168699511,6717.4319776458415,8487.605110792734,3122.488414306167,7288.495313569254,),\n    (-6160.28797099689,-9526.951282445563,-2727.4586614461805,-7534.755781098465,-8258.639928049572,),\n    (9707.663226287044,3545.24083205238,7876.511569086982,1470.811329180811,6452.68041640754,),\n    (-6911.228913076611,-2028.0397959113661,-9156.730104961494,-9225.561292876928,-1370.1493253417884,),\n    (2437.324652060757,6351.663596100777,9309.29692624503,9217.775327187837,124.92622868105929,),\n    (-9772.988102067504,-7037.832078976599,-1106.0784469214657,-9822.961372946284,-9850.889686793544,),\n    (962.3813406727966,2636.211531080329,3803.337776332597,8968.88804348246,768.6415184062179,),\n    (-5295.715793735837,-1371.1549844447245,-4574.9652965175055,-5723.073256651608,-3979.742641311409,),\n    (8277.666437028653,3894.6319227476024,1927.1038244370075,8277.958654483882,4293.94644558483,),\n    (-8233.422168737996,-5956.055383069726,-5624.546627814419,-4024.7562734644903,-3480.155957748129,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def mirrorImage ( a , b , c , x1 , y1 ) :\n    temp = - 2 * ( a * x1 + b * y1 + c ) / ( a * a + b * b )\n    x = temp * a + x1\n    y = temp * b + y1\n    return ( x , y )\n"}
Disassembly of <code object mirrorImage at 0x7f2b0163dc90, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( - 2 )
2 LOAD_FAST 0 ( a )
4 LOAD_FAST 2 ( x1 )
6 BINARY_MULTIPLY
8 LOAD_FAST 1 ( b )
10 LOAD_FAST 3 ( y1 )
12 BINARY_MULTIPLY
14 BINARY_ADD
16 LOAD_FAST 2 ( c )
18 BINARY_ADD
20 BINARY_TRUE_DIVIDE
22 LOAD_FAST 0 ( a )
24 LOAD_FAST 0 ( a )
26 BINARY_MULTIPLY
28 LOAD_FAST 1 ( b )
30 LOAD_FAST 1 ( b )
32 BINARY_MULTIPLY
34 BINARY_ADD
36 BINARY_TRUE_DIVIDE
38 STORE_FAST 5 ( temp )

3 40 LOAD_FAST 5 ( temp )
42 LOAD_FAST 0 ( a )
44 BINARY_MULTIPLY
46 LOAD_FAST 2 ( x1 )
48 BINARY_ADD
50 STORE_FAST 6 ( x )

4 52 LOAD_FAST 5 ( temp )
54 LOAD_FAST 1 ( b )
56 BINARY_MULTIPLY
58 LOAD_FAST 3 ( y1 )
60 BINARY_ADD
62 STORE_FAST 7 ( y )

5 64 LOAD_FAST 6 ( x )
66 LOAD_FAST 7 ( y )
68 BUILD_TUPLE 2
70 RETURN_VALUE
