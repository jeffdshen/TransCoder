{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , x ) :\n    res = 0\n    for i in range ( n ) :\n        if x == arr [ i ] :\n            res += 1\n    return res\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([16, 18, 24, 27, 34, 36, 41, 43, 43, 52, 59, 76, 86, 87, 90, 91, 94, 96, 98, 98],14,43,),\n    ([64, 66, -36],1,64,),\n    ([0, 0, 0],2,0,),\n    ([9, 85, 34, 43, 70, 96, 44, 7, 27, 33, 34, 5, 91, 84, 76, 45, 20, 37, 15, 37, 20, 24, 13, 49, 74, 13, 50, 81, 81, 66, 23, 36, 91, 80, 61, 15, 96, 70, 90, 25, 16, 62, 75, 63, 6, 65, 38, 12],43,5,),\n    ([-98, -98, -98, -34, -32, -26, -12, 0, 18, 52, 68, 72],11,-98,),\n    ([1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1],11,1,),\n    ([1, 3, 6, 6, 10, 12, 15, 16, 21, 22, 23, 29, 33, 37, 40, 40, 43, 52, 55, 59, 64, 65, 71, 72, 80, 83, 86, 86, 88, 88],29,40,),\n    ([-14, -30, -38, -38, -8, 40, -34, 2, -84, 68, -42, 38, -14, 0, -64, 12, -2, -38, -8, -44, -88, -34, -80, -36, 82, 70, 96, -32, 16, -52, -12, -46, -28, -86, 30, -14, 50, -44, 22, 30, -4, 78, 52],39,26,),\n    ([1, 1, 1, 1],2,3,),\n    ([11, 50, 1, 93, 12, 7, 55, 35, 36, 62, 61, 71, 16],11,8,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countOccurrences ( arr , n , x ) :\n    res = 0\n    for i in range ( n ) :\n        if x == arr [ i ] :\n            res += 1\n    return res\n"}
Disassembly of <code object countOccurrences at 0x7f2b01639f60, file "<dis>", line 1>:
2 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 3 ( res )

3 4 SETUP_LOOP 32 ( to 38 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_FAST 1 ( n )
10 CALL_FUNCTION 1
12 GET_ITER
>> 14 FOR_ITER 20 ( to 36 )
16 STORE_FAST 4 ( i )

4 18 LOAD_FAST 2 ( x )
20 LOAD_FAST 0 ( arr )
22 LOAD_FAST 4 ( i )
24 BINARY_SUBSCR
26 COMPARE_OP 2 ( == )
28 POP_JUMP_IF_FALSE 14

5 30 LOAD_FAST 3 ( res )
32 LOAD_CONST 2 ( 1 )
34 INPLACE_ADD
36 STORE_FAST 3 ( res )
38 JUMP_ABSOLUTE 14
>> 40 POP_BLOCK

6 >> 42 LOAD_FAST 3 ( res )
44 RETURN_VALUE
