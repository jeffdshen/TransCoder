{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( num , divisor ) :\n    return ( num - divisor * ( num // divisor ) )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (80,54,),\n    (63,21,),\n    (1,56,),\n    (22,39,),\n    (66,7,),\n    (61,67,),\n    (45,63,),\n    (29,44,),\n    (95,65,),\n    (9,68,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def getRemainder ( num , divisor ) :\n    return ( num - divisor * ( num // divisor ) )\n"}
Disassembly of <code object getRemainder at 0x7f816a6e4b70, file "<dis>", line 17>:
18 0 LOAD_CONST 1 ( - divisor )
2 LOAD_FAST 0 ( num )
4 LOAD_FAST 1 ( divisor )
6 COMPARE_OP 2 ( == )
8 POP_JUMP_IF_FALSE 20

19 10 LOAD_CONST 2 ( '%d divisor %d divisor %d divisor %d divisor %d divisor %d divisor %d divisor %d divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor divisor