{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport sys\n\ndef f_gold ( arr , n ) :\n    arr.sort ( )\n    minXor = int ( sys.float_info.max )\n    val = 0\n    for i in range ( 0 , n - 1 ) :\n        val = arr [ i ] ^ arr [ i + 1 ] ;\n        minXor = min ( minXor , val ) ;\n    return minXor\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([8, 11, 12, 27, 32, 32, 36, 56, 57, 66, 68, 70, 74, 78, 82, 83, 96],10,),\n    ([40, 48, 66, 4, -60, 42, -8, 38],7,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],19,),\n    ([98, 6, 82, 95, 87, 20, 11, 63, 78, 70, 37, 12, 57, 67, 10, 49, 38, 28, 86, 7, 61, 50, 32, 68, 91, 66, 57, 29, 2, 64, 65, 15, 16, 4, 7, 76, 44, 52, 81, 89, 3, 36, 57, 95, 48, 24],36,),\n    ([-88, -84, -76, -58, -40, -38, -28, -24, -20, -14, -12, 16, 20, 28, 28, 30, 40, 44, 56, 58, 60, 92, 92],13,),\n    ([0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0],20,),\n    ([6, 6, 19, 31, 41, 45, 49, 56, 78, 96, 98],6,),\n    ([62, -90, 22, -84, -4],3,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],21,),\n    ([83, 13, 43, 99, 34, 74, 56, 20, 93, 65, 92, 58, 91, 72, 37, 10, 39, 7, 29, 69, 42, 28],14,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def minXOR ( arr , n ) :\n    arr.sort ( )\n    minXor = int ( sys.float_info.max )\n    val = 0\n    for i in range ( 0 , n - 1 ) :\n        val = arr [ i ] ^ arr [ i + 1 ] ;\n        minXor = min ( minXor , val ) ;\n    return minXor\n"}
Disassembly of <code object minXOR at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( arr )
2 LOAD_METHOD 0 ( sort )
4 CALL_METHOD 0
6 STORE_FAST 1 ( n )

27 8 LOAD_FAST 1 ( n )
10 LOAD_CONST 1 ( 1 )
12 INPLACE_ADD
14 STORE_FAST 1 ( n )

28 16 LOAD_FAST 1 ( n )
18 LOAD_CONST 2 ( 0 )
20 COMPARE_OP 4 ( > )
22 POP_JUMP_IF_FALSE 28

29 24 LOAD_FAST 1 ( n )
26 LOAD_CONST 3 ( 1 )
28 INPLACE_ADD
30 STORE_FAST 1 ( n )

30 >> 32 LOAD_FAST 1 ( n )
34 LOAD_CONST 4 ( - 1 )
36 INPLACE_ADD
38 STORE_FAST 1 ( n )
40 JUMP_FORWARD 4 ( to 34 )

31 >> 42 LOAD_FAST 1 ( n )
44 LOAD_CONST 5 ( 1 )
46 INPLACE_ADD
48 STORE_FAST 1 ( n )

32 50 LOAD_FAST 1 ( n )
52 LOAD_CONST 6 ( 2 )
54 INPLACE_ADD
56 STORE_FAST 1 ( n )

33 58 LOAD_FAST 1 ( n )
60 LOAD_CONST 7 ( 2 )
62 INPLACE_ADD
64 STORE_FAST 1 ( n )

34 >> 66 LOAD_FAST 1 ( n )
68 LOAD_CONST 8 ( - 2 )
70 INPLACE_ADD
72 STORE_FAST 1 ( n )
74 JUMP_FORWARD 4 ( to 76 )

35 >> 76 LOAD_FAST 1 ( n )
78 LOAD_CONST 9 ( 2 )
80 INPLACE_ADD
82 STORE_FAST 1 ( n )

36 84 LOAD_FAST 1 ( n )
86 LOAD_CONST 10 ( 2 )
88 INPLACE_ADD
90 STORE_FAST 1 ( n )

37 >> 92 LOAD_FAST 1 ( n )
94 LOAD_CONST 11 ( - 2 )
96 INPLACE_ADD
98 STORE_FAST 1 ( n )
100 STORE_FAST 1 ( n )

38 102 LOAD_FAST 1 ( n )
104 LOAD_FAST 1 ( n )
106 INPLACE_ADD
108 STORE_FAST 1 ( n )

39 110 LOAD_FAST 1 ( n )
112 LOAD_FAST 0 ( arr )
114 LOAD_FAST 1 ( n )
116 INPLACE_ADD
118 STORE_FAST 1 ( n )

40 120 LOAD_FAST 1 ( n )
122 LOAD_FAST 1 ( n )
124 INPLACE_ADD
126 STORE_FAST 1 ( n )
128 STORE_FAST 1 ( n )

41 130 LOAD_FAST 1 ( n )
132 LOAD_FAST 1 ( n )
134 INPLACE_ADD
136 STORE_FAST 1 ( n )

42 138 LOAD_FAST 1 ( n )
140 RETURN_VALUE

