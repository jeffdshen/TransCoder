{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    if ( n == 0 ) :\n        return 1\n    return n * f_gold ( n - 1 )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (77,),\n    (62,),\n    (42,),\n    (16,),\n    (82,),\n    (37,),\n    (29,),\n    (32,),\n    (82,),\n    (91,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def fact ( n ) :\n    if ( n == 0 ) :\n        return 1\n    return n * fact ( n - 1 )\n"}
Disassembly of <code object fact at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 STORE_FAST 1 ( fact )

27 8 LOAD_FAST 1 ( fact )
10 LOAD_FAST 0 ( n )
12 LOAD_CONST 2 ( 1 )
14 BINARY_SUBSCR
16 LOAD_CONST 3 ( 2 )
18 BINARY_SUBSCR
20 LOAD_CONST 4 ( 1 )
22 BINARY_SUBSCR
24 LOAD_CONST 5 ( 3 )
26 COMPARE_OP 2 ( == )
28 POP_JUMP_IF_FALSE 38

28 30 LOAD_FAST 1 ( fact )
32 LOAD_FAST 0 ( n )
34 LOAD_CONST 2 ( 1 )
36 BINARY_SUBSCR
38 LOAD_CONST 6 ( 4 )
40 COMPARE_OP 2 ( == )
42 POP_JUMP_IF_FALSE 44

29 44 LOAD_FAST 1 ( fact )
46 LOAD_FAST 0 ( n )
48 LOAD_CONST 2 ( 1 )
50 BINARY_SUBSCR
52 LOAD_CONST 7 ( 4 )
54 BINARY_SUBSCR
56 LOAD_CONST 8 ( 4 )
58 COMPARE_OP 2 ( == )
60 POP_JUMP_IF_FALSE 60

30 62 LOAD_FAST 1 ( fact )
64 LOAD_FAST 0 ( n )
66 LOAD_CONST 2 ( 1 )
68 BINARY_SUBSCR
70 LOAD_CONST 9 ( 4 )
72 COMPARE_OP 2 ( == )
74 POP_JUMP_IF_FALSE 60

31 76 LOAD_FAST 1 ( fact )
78 LOAD_FAST 0 ( n )
80 LOAD_CONST 2 ( 1 )
82 BINARY_SUBSCR
84 LOAD_CONST 10 ( 4 )
86 COMPARE_OP 2 ( == )
88 POP_JUMP_IF_FALSE 90

32 90 LOAD_FAST 1 ( fact )
92 LOAD_FAST 0 ( n )
94 LOAD_CONST 2 ( 1 )
96 BINARY_SUBSCR
98 LOAD_CONST 11 ( 4 )
100 BINARY_SUBSCR
102 LOAD_CONST 12 ( 1 )
104 BINARY_SUBSCR
106 LOAD_CONST 13 ( 2 )
108 BINARY_SUBSCR
110 LOAD_CONST 14 ( 4 )
112 COMPARE_OP 2 ( == )
114 POP_JUMP_IF_FALSE 90

33 116 LOAD_FAST 1 ( fact )
118 LOAD_FAST 0 ( n )
120 LOAD_CONST 2 ( 1 )
122 BINARY_SUBSCR
124 LOAD_CONST 12 ( 1 )
126 BINARY_SUBSCR
128 LOAD_CONST 13 ( 2 )
130 BINARY_SUBSCR
132 LOAD_CONST 14 ( 4 )
134 COMPARE_OP 2 ( == )
136 POP_JUMP_IF_FALSE 130

34 138 LOAD_FAST 1 ( fact )
140 LOAD_FAST 0 ( n )
142 LOAD_CONST 2 ( 1 )
144 BINARY_SUBSCR
146 LOAD_CONST 15 ( 2 )
148 BINARY_SUBSCR
150 LOAD_CONST 16 ( 1 )
152 BINARY_SUBSCR
154 LOAD_CONST 17 ( 2 )
156 BINARY_SUBSCR
158 LOAD_CONST 18 ( 4 )
160 BUILD_SLICE 2
162 BINARY_SUBSCR
164 RETURN_VALUE

35 >> 166 LOAD_FAST 1 ( fact )
168 RETURN_VALUE
