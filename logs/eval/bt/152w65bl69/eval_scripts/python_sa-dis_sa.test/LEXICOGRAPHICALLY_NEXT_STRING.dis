{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( s ) :\n    if ( s == \" \" ) :\n        return \"a\"\n    i = len ( s ) - 1\n    while ( s [ i ] == 'z' and i >= 0 ) :\n        i -= 1\n    if ( i == - 1 ) :\n        s = s + 'a'\n    else :\n        s = s.replace ( s [ i ] , chr ( ord ( s [ i ] ) + 1 ) , 1 )\n    return s\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('amKIRzPiqLTIy',),\n    ('68',),\n    ('100',),\n    ('f',),\n    ('802205375',),\n    ('0111',),\n    ('GRjRYIvYwgua',),\n    ('8139910006809',),\n    ('100101',),\n    ('rw',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def nextWord ( s ) :\n    if ( s == \" \" ) :\n        return \"a\"\n    i = len ( s ) - 1\n    while ( s [ i ] == 'z' and i >= 0 ) :\n        i -= 1\n    if ( i == - 1 ) :\n        s = s + 'a'\n    else :\n        s = s.replace ( s [ i ] , chr ( ord ( s [ i ] ) + 1 ) , 1 )\n    return s\n"}
Disassembly of <code object nextWord at 0x7f816a673a50, file "<dis>", line 19>:
20 0 LOAD_FAST 0 ( s )
2 LOAD_CONST 1 ( 'a' )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 12

21 8 LOAD_FAST 0 ( s )
10 LOAD_CONST 2 ( 'z' )
12 COMPARE_OP 2 ( == )
14 POP_JUMP_IF_FALSE 28

22 >> 16 LOAD_CONST 3 ( 'a' )
18 RETURN_VALUE

24 >> 20 LOAD_FAST 0 ( s )
22 LOAD_CONST 4 ( 'z' )
24 COMPARE_OP 2 ( == )
26 POP_JUMP_IF_FALSE 28

25 28 LOAD_CONST 5 ( 'z' )
30 RETURN_VALUE

26 >> 32 LOAD_FAST 0 ( s )
34 LOAD_CONST 6 ( 'z' )
36 COMPARE_OP 2 ( == )
38 POP_JUMP_IF_FALSE 44
40 LOAD_FAST 0 ( s )
42 LOAD_CONST 7 ( 'z' )
44 COMPARE_OP 2 ( == )
46 POP_JUMP_IF_FALSE 44

27 48 LOAD_CONST 8 ( 'z' )
50 RETURN_VALUE

28 >> 52 LOAD_FAST 0 ( s )
54 LOAD_CONST 9 ( 'z' )
56 COMPARE_OP 2 ( == )
58 POP_JUMP_IF_FALSE 60

29 60 LOAD_CONST 10 ( 'z' )
62 RETURN_VALUE

30 >> 64 LOAD_FAST 0 ( s )
66 LOAD_CONST 11 ( 'z' )
68 COMPARE_OP 2 ( == )
70 POP_JUMP_IF_FALSE 76
72 LOAD_FAST 0 ( s )
74 LOAD_CONST 12 ( 'z' )
76 COMPARE_OP 2 ( == )
78 POP_JUMP_IF_FALSE 76

31 80 LOAD_CONST 13 ( 'z' )
82 RETURN_VALUE
>> 84 LOAD_CONST 0 ( None )
86 RETURN_VALUE

