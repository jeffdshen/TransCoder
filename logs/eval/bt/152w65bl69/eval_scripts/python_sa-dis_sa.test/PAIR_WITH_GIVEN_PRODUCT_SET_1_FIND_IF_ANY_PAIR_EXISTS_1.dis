{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , x ) :\n    if n < 2 :\n        return False\n    s = set ( )\n    for i in range ( 0 , n ) :\n        if arr [ i ] == 0 :\n            if x == 0 :\n                return True\n            else :\n                continue\n        if x % arr [ i ] == 0 :\n            if x // arr [ i ] in s :\n                return True\n            s.add ( arr [ i ] )\n    return False\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([1, 2, 3, 7, 23, 23, 25, 27, 37, 42, 53, 56, 58, 61, 69, 78, 79, 84, 85, 86, 90, 93, 95],15,17,),\n    ([-10, -18, 88, -36, 78, 66, -70, -34, -88, -98, -70, -4, -94, -92, -76, -78, -30, -48, -72, 86, -64, 38, -80, 20, 70, -32, -90, 74, -78, 12, -54, 88, 38, -96, 28],17,22,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 1, 1],9,5,),\n    ([83, 61, 55, 89, 16, 78, 44, 54, 22, 49, 58, 62, 53, 99, 35, 83, 29, 19, 96, 39, 60, 6, 34, 67, 43, 29, 46, 3, 81, 78, 80, 39, 86, 78, 21],23,27,),\n    ([-96, -88, -80, -62, -58, -56, -54, -52, -34, -20, -6, -2, 6, 20, 52, 54, 70, 72, 80, 82, 94],18,12,),\n    ([0, 1, 1, 0, 0, 1, 1, 1],4,6,),\n    ([8, 11, 11, 20, 22, 23, 26, 27, 31, 38, 40, 40, 45, 46, 46, 48, 50, 61, 73, 76, 78, 78, 79, 80, 81, 84, 90, 91, 93, 95],24,28,),\n    ([18],0,0,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],37,39,),\n    ([19, 37, 47, 40, 72, 59, 51, 53, 92, 3, 21, 81, 29, 48, 97, 59, 10, 74, 11, 37, 49, 95, 88, 85, 6, 26, 76, 33],22,21,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def isProduct ( arr , n , x ) :\n    if n < 2 :\n        return False\n    s = set ( )\n    for i in range ( 0 , n ) :\n        if arr [ i ] == 0 :\n            if x == 0 :\n                return True\n            else :\n                continue\n        if x % arr [ i ] == 0 :\n            if x // arr [ i ] in s :\n                return True\n            s.add ( arr [ i ] )\n    return False\n"}
Disassembly of <code object isProduct at 0x7f816a6828a0, file "<dis>", line 99>:
100 0 LOAD_FAST 0 ( arr )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 STORE_FAST 1 ( n )

101 8 LOAD_FAST 1 ( n )
10 LOAD_CONST 2 ( 1 )
12 BINARY_SUBSCR
14 STORE_FAST 2 ( n )

102 16 LOAD_FAST 1 ( n )
18 LOAD_CONST 3 ( 1 )
20 BINARY_SUBSCR
22 STORE_FAST 3 ( n )

103 24 LOAD_FAST 1 ( n )
26 LOAD_CONST 4 ( 1 )
28 BINARY_SUBSCR
30 LOAD_CONST 5 ( 1 )
32 BINARY_SUBSCR
34 LOAD_CONST 6 ( 2 )
36 BINARY_SUBSCR
38 STORE_FAST 4 ( n )

104 40 LOAD_FAST 1 ( n )
42 LOAD_CONST 7 ( 1 )
44 BINARY_SUBSCR
46 LOAD_CONST 8 ( 2 )
48 BINARY_SUBSCR
50 STORE_FAST 5 ( n )

105 52 LOAD_FAST 1 ( n )
54 LOAD_CONST 9 ( 1 )
56 BINARY_SUBSCR
58 LOAD_CONST 10 ( 2 )
60 BINARY_SUBSCR
62 STORE_FAST 6 ( n )

106 64 LOAD_FAST 1 ( n )
66 LOAD_CONST 10 ( 2 )
68 BINARY_SUBSCR
70 LOAD_CONST 11 ( 1 )
72 BINARY_SUBSCR
74 LOAD_CONST 12 ( 2 )
76 BINARY_SUBSCR
78 LOAD_CONST 13 ( 1 )
80 BINARY_SUBSCR
82 LOAD_CONST 14 ( 2 )
84 BINARY_SUBSCR
86 LOAD_CONST 15 ( 1 )
88 BINARY_SUBSCR
90 LOAD_CONST 16 ( 2 )
92 BINARY_SUBSCR
94 LOAD_CONST 17 ( 1 )
96 BINARY_SUBSCR
98 LOAD_CONST 18 ( 2 )
100 BINARY_SUBSCR
102 LOAD_CONST 19 ( 1 )
104 BINARY_SUBSCR
106 LOAD_CONST 20 ( 2 )
108 BINARY_SUBSCR
110 LOAD_CONST 21 ( 1 )
112 BINARY_SUBSCR
114 LOAD_CONST 22 ( 2 )
116 BINARY_SUBSCR
118 LOAD_CONST 21 ( 1 )
120 BINARY_SUBSCR
122 LOAD_CONST 22 ( 2 )
124 BINARY_SUBSCR
126 LOAD_CONST 23 ( 1 )
128 BINARY_SUBSCR
130 LOAD_CONST 22 ( 2 )
132 BINARY_SUBSCR
134 LOAD_CONST 23 ( 1 )
136 BINARY_SUBSCR
138 LOAD_CONST 22 ( 2 )
140 BINARY_SUBSCR
142 LOAD_CONST 23 ( 1 )
144 BINARY_SUBSCR
146 LOAD_CONST 22 ( 2 )
148 BINARY_SUBSCR
150 LOAD_CONST 23 ( 1 )
152 BINARY_SUBSCR
154 LOAD_CONST 22 ( 2 )
156 BINARY_SUBSCR
158 LOAD_CONST 23 ( 1 )
160 BINARY_SUBSCR
162 LOAD_CONST 24 ( 2 )
164 BINARY_SUBSCR
166 LOAD_CONST 23 ( 1 )
168 BINARY_SUBSCR
170 LOAD_CONST 24 ( 2 )
172 BINARY_SUBSCR
174 LOAD_CONST 25 ( 2 )
176 BINARY_SUBSCR
174 LOAD_CONST 24 ( 2 )
176 COMPARE_OP 2 ( == )
