{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    arr.sort ( )\n    return ( arr [ n - 1 ] + arr [ n - 2 ] + arr [ n - 3 ] )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([6, 8, 18, 18, 27, 33, 33, 38, 42, 43, 44, 47, 52, 58, 64, 65, 67, 68, 71, 75, 85, 89, 91, 94, 94, 95, 95],26,),\n    ([24, 24, 44, 28, -88, 18, 34, 92, -84, 94, -12, 30, -82, -58],8,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],15,),\n    ([95, 75, 5, 51, 67, 63, 26, 47, 70, 11, 21, 9, 18, 31, 76, 66, 81, 73, 63, 55, 16, 72, 15, 28, 25, 25, 35, 79, 4, 73, 23, 87, 2, 1, 92, 94, 18, 70, 87, 27, 34, 84, 12],37,),\n    ([-86, -86, -78, -56, -24, -14, -10, -6, 12, 12, 18, 22, 22, 26, 50, 50, 72, 78, 94],9,),\n    ([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0],9,),\n    ([2, 13, 17, 19, 20, 23, 28, 28, 29, 40, 45, 51, 52, 58, 58, 68, 70, 75, 79, 81, 92, 96, 97],15,),\n    ([94, 6, 52, 6, -78, 40, -46, -20, 64, 76, -36, -62, 50, -4, 4],13,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],27,),\n    ([34, 11, 15, 42, 32, 4, 6, 25, 52, 44, 14, 57, 3, 44, 7, 89, 35, 3, 70, 66, 58, 22, 5, 17, 33, 11],13,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxTripletSum ( arr , n ) :\n    arr.sort ( )\n    return ( arr [ n - 1 ] + arr [ n - 2 ] + arr [ n - 3 ] )\n"}
Disassembly of <code object maxTripletSum at 0x7f816a673a50, file "<dis>", line 30>:
31 0 LOAD_FAST 0 ( arr )
2 LOAD_FAST 1 ( n )
4 LOAD_CONST 1 ( 1 )
6 BINARY_ADD
8 LOAD_FAST 2 ( n )
10 LOAD_CONST 2 ( 2 )
12 BINARY_ADD
14 LOAD_FAST 1 ( n )
16 LOAD_CONST 3 ( 3 )
18 BINARY_ADD
20 LOAD_FAST 2 ( n )
22 LOAD_CONST 4 ( 3 )
24 BINARY_ADD
26 LOAD_FAST 1 ( n )
28 LOAD_CONST 5 ( 4 )
30 BINARY_ADD
32 LOAD_FAST 2 ( n )
34 LOAD_CONST 6 ( 3 )
36 BINARY_ADD
38 LOAD_FAST 2 ( n )
40 BINARY_ADD
42 BUILD_SLICE 2
44 BINARY_SUBSCR
46 BINARY_ADD
48 LOAD_FAST 1 ( n )
50 LOAD_CONST 7 ( 3 )
52 BINARY_ADD
54 LOAD_FAST 2 ( n )
56 LOAD_CONST 8 ( 2 )
58 BINARY_ADD
60 BINARY_ADD
62 BUILD_SLICE 2
64 BINARY_SUBSCR
66 BINARY_ADD
68 LOAD_FAST 2 ( n )
70 LOAD_CONST 9 ( 3 )
72 BINARY_ADD
74 BUILD_SLICE 2
76 BINARY_SUBSCR
78 BINARY_ADD
80 LOAD_FAST 2 ( n )
82 LOAD_CONST 10 ( 3 )
84 BINARY_ADD
86 BINARY_ADD
88 LOAD_FAST 2 ( n )
90 LOAD_CONST 11 ( 3 )
92 BINARY_ADD
94 BINARY_ADD
96 BUILD_SLICE 2
98 BINARY_SUBSCR
100 BINARY_ADD
102 LOAD_FAST 2 ( n )
104 LOAD_CONST 12 ( 3 )
106 BINARY_ADD
108 BUILD_SLICE 2
110 BINARY_SUBSCR
112 BINARY_ADD
114 LOAD_FAST 2 ( n )
116 LOAD_CONST 13 ( 3 )
118 BINARY_ADD
120 LOAD_FAST 2 ( n )
122 LOAD_CONST 6 ( 3 )
124 BINARY_ADD
126 BUILD_SLICE 2
128 BINARY_SUBSCR
130 BINARY_ADD
132 LOAD_FAST 2 ( n )
134 LOAD_CONST 6 ( 3 )
136 BINARY_ADD
138 BUILD_SLICE 2
140 BINARY_SUBSCR
142 BINARY_ADD
144 LOAD_FAST 2 ( n )
146 LOAD_CONST 6 ( 3 )
148 BINARY_ADD
150 BUILD_SLICE 2
152 BINARY_SUBSCR
154 BINARY_ADD
156 LOAD_FAST 2 ( n )
158 LOAD_CONST 6 ( 3 )
160 BINARY_ADD
162 BUILD_SLICE 2
164 BINARY_SUBSCR
166 BINARY_ADD

33 164 LOAD_FAST 2 ( n )
166 LOAD_CONST 6 ( 3 )
168 BINARY_ADD
170 BUILD_SLICE 2
168 BINARY_SUBSCR
170 BINARY_ADD

34 172 LOAD_FAST 2 ( n )
174 LOAD_CONST 7 ( 3 )
176 BINARY_ADD
178 LOAD_FAST 2 ( n )
180 LOAD_CONST 6 ( 3 )

35 170 LOAD_FAST 2 ( n )
172 LOAD_CONST 6 ( 3 )
174 BINARY_ADD

36 176 LOAD_FAST 2 ( n )