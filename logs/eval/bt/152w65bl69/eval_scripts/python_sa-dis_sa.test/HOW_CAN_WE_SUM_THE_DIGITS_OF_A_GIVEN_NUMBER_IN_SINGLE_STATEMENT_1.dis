{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    sum = 0\n    while ( n > 0 ) :\n        sum += int ( n % 10 )\n        n = int ( n / 10 )\n    return sum\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (50,),\n    (92,),\n    (49,),\n    (94,),\n    (7,),\n    (30,),\n    (88,),\n    (98,),\n    (94,),\n    (23,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def getSum ( n ) :\n    sum = 0\n    while ( n > 0 ) :\n        sum += int ( n % 10 )\n        n = int ( n / 10 )\n    return sum\n"}
Disassembly of <code object getSum at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_GLOBAL 0 ( sum )
2 LOAD_FAST 0 ( n )
4 CALL_FUNCTION 1
6 LOAD_CONST 1 ( 10 )
8 COMPARE_OP 0 ( < )
10 POP_JUMP_IF_FALSE 20

27 12 LOAD_GLOBAL 1 ( sum )
14 LOAD_FAST 0 ( n )
16 CALL_FUNCTION 1
18 LOAD_CONST 2 ( 1 )
20 COMPARE_OP 4 ( > )
22 POP_JUMP_IF_FALSE 28

28 24 LOAD_GLOBAL 2 ( sum )
26 LOAD_FAST 0 ( n )
28 CALL_FUNCTION 1
30 LOAD_CONST 3 ( 1 )
32 COMPARE_OP 4 ( > )
34 POP_JUMP_IF_FALSE 44

29 36 LOAD_GLOBAL 3 ( sum )
38 LOAD_FAST 0 ( n )
40 CALL_FUNCTION 1
42 LOAD_CONST 4 ( 0 )
44 COMPARE_OP 4 ( > )
46 POP_JUMP_IF_FALSE 44

30 48 LOAD_GLOBAL 4 ( sum )
50 LOAD_FAST 0 ( n )
52 CALL_FUNCTION 1
54 LOAD_CONST 5 ( 1 )
56 COMPARE_OP 4 ( > )
58 POP_JUMP_IF_FALSE 44

31 60 LOAD_GLOBAL 5 ( sum )
62 LOAD_FAST 0 ( n )
64 CALL_FUNCTION 1
66 LOAD_CONST 6 ( 1 )
68 COMPARE_OP 4 ( > )
70 POP_JUMP_IF_FALSE 44

32 72 LOAD_GLOBAL 6 ( sum )
74 LOAD_FAST 0 ( n )
76 CALL_FUNCTION 1
78 LOAD_CONST 7 ( 1 )
80 COMPARE_OP 4 ( > )
82 POP_JUMP_IF_FALSE 90

33 84 LOAD_GLOBAL 7 ( sum )
86 LOAD_FAST 0 ( n )
88 CALL_FUNCTION 1
90 LOAD_CONST 8 ( 1 )
92 COMPARE_OP 4 ( > )
94 POP_JUMP_IF_FALSE 90

34 96 LOAD_GLOBAL 8 ( sum )
98 LOAD_FAST 0 ( n )
100 CALL_FUNCTION 1
102 LOAD_CONST 9 ( 1 )
104 COMPARE_OP 4 ( > )
106 POP_JUMP_IF_FALSE 90

35 108 LOAD_GLOBAL 9 ( sum )
110 LOAD_FAST 0 ( n )
112 CALL_FUNCTION 1
114 LOAD_CONST 10 ( 1 )
116 COMPARE_OP 4 ( > )
118 POP_JUMP_IF_FALSE 120

36 120 LOAD_GLOBAL 10 ( sum )
122 LOAD_FAST 0 ( n )
124 CALL_FUNCTION 1
126 LOAD_CONST 11 ( 1 )
128 COMPARE_OP 4 ( > )
130 POP_JUMP_IF_FALSE 120

37 132 LOAD_GLOBAL 11 ( sum )
134 LOAD_FAST 0 ( n )
136 CALL_FUNCTION 1
138 LOAD_CONST 12 ( 0 )
140 COMPARE_OP 4 ( > )
142 POP_JUMP_IF_FALSE 120

38 144 LOAD_FAST 0 ( n )
146 RETURN_VALUE

39 >> 148 LOAD_FAST 0 ( n )
150 RETURN_VALUE

