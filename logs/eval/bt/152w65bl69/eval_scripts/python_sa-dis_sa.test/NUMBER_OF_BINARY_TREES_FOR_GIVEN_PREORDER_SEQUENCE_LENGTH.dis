{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    BT = [ 0 ] * ( n + 1 )\n    BT [ 0 ] = BT [ 1 ] = 1\n    for i in range ( 2 , n + 1 ) :\n        for j in range ( i ) :\n            BT [ i ] += BT [ j ] * BT [ i - j - 1 ]\n    return BT [ n ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (87,),\n    (69,),\n    (15,),\n    (11,),\n    (11,),\n    (15,),\n    (47,),\n    (65,),\n    (50,),\n    (58,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countTrees ( n ) :\n    BT = [ 0 ] * ( n + 1 )\n    BT [ 0 ] = BT [ 1 ] = 1\n    for i in range ( 2 , n + 1 ) :\n        for j in range ( i ) :\n            BT [ i ] += BT [ j ] * BT [ i - j - 1 ]\n    return BT [ n ]\n"}
Disassembly of <code object countTrees at 0x7f816a673a50, file "<dis>", line 64>:
65 0 LOAD_GLOBAL 0 ( BT )
2 LOAD_FAST 0 ( n )
4 CALL_FUNCTION 1
6 STORE_FAST 1 ( s )

66 8 LOAD_FAST 1 ( s )
10 LOAD_CONST 1 ( 0 )
12 BINARY_SUBSCR
14 STORE_FAST 2 ( s )

67 16 LOAD_FAST 2 ( s )
18 LOAD_CONST 1 ( 0 )
20 BINARY_SUBSCR
22 STORE_FAST 3 ( s )

68 24 LOAD_FAST 3 ( s )
26 LOAD_CONST 1 ( 0 )
28 BINARY_SUBSCR
30 STORE_FAST 4 ( s )

69 32 LOAD_FAST 2 ( s )
34 LOAD_CONST 1 ( 0 )
36 BINARY_SUBSCR
38 STORE_FAST 5 ( s )

70 40 LOAD_FAST 0 ( n )
42 LOAD_CONST 1 ( 0 )
44 BINARY_SUBSCR
46 STORE_FAST 6 ( s )

71 48 LOAD_FAST 6 ( s )
50 LOAD_CONST 1 ( 0 )
52 BINARY_SUBSCR
54 STORE_FAST 7 ( s )

72 56 LOAD_FAST 0 ( n )
58 LOAD_CONST 1 ( 0 )
60 BINARY_SUBSCR
62 STORE_FAST 8 ( s )

73 64 LOAD_FAST 0 ( n )
66 LOAD_CONST 1 ( 0 )
68 BINARY_SUBSCR
70 STORE_FAST 9 ( s )

74 72 LOAD_FAST 0 ( n )
74 LOAD_CONST 1 ( 0 )
76 BINARY_SUBSCR
78 STORE_FAST 10 ( s )

75 80 LOAD_FAST 0 ( n )
82 LOAD_CONST 1 ( 0 )
84 BINARY_SUBSCR
86 STORE_FAST 11 ( s )

76 88 LOAD_FAST 0 ( n )
90 LOAD_CONST 1 ( 0 )
92 BINARY_SUBSCR
94 STORE_FAST 10 ( s )

77 96 LOAD_FAST 0 ( n )
98 LOAD_CONST 1 ( 0 )
100 BINARY_SUBSCR
102 STORE_FAST 10 ( s )

78 104 LOAD_FAST 0 ( n )
106 LOAD_CONST 1 ( 0 )
108 BINARY_SUBSCR
110 LOAD_CONST 1 ( 0 )
112 BINARY_SUBSCR
114 LOAD_CONST 1 ( 0 )
116 BINARY_SUBSCR
118 LOAD_CONST 1 ( 0 )
120 BINARY_SUBSCR
122 LOAD_CONST 1 ( 0 )
124 BINARY_SUBSCR
126 STORE_FAST 10 ( s )

79 128 LOAD_FAST 0 ( n )
130 LOAD_CONST 1 ( 0 )
132 BINARY_SUBSCR
134 LOAD_CONST 1 ( 0 )
136 BINARY_SUBSCR
138 LOAD_FAST 10 ( s )
140 LOAD_CONST 1 ( 0 )
142 BINARY_SUBSCR
144 LOAD_CONST 1 ( 0 )
146 BINARY_SUBSCR
148 LOAD_FAST 10 ( s )
150 LOAD_CONST 1 ( 0 )
152 BINARY_SUBSCR
154 LOAD_CONST 1 ( 0 )
156 BINARY_SUBSCR
158 LOAD_FAST 10 ( s )
160 LOAD_CONST