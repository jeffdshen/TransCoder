{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    n -= 1\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    n += 1\n    return n\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (63,),\n    (78,),\n    (13,),\n    (5,),\n    (34,),\n    (69,),\n    (63,),\n    (78,),\n    (80,),\n    (19,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def nextPowerOf2 ( n ) :\n    n -= 1\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    n += 1\n    return n\n"}
Disassembly of <code object nextPowerOf2 at 0x7f816a6e4b70, file "<dis>", line 19>:
20 0 LOAD_FAST 1 ( n )
2 LOAD_CONST 1 ( 1 )
4 INPLACE_ADD
6 STORE_FAST 1 ( n )

21 8 LOAD_FAST 1 ( n )
10 LOAD_CONST 2 ( 2 )
12 BINARY_MULTIPLY
14 LOAD_FAST 1 ( n )
16 LOAD_CONST 3 ( 1 )
18 BINARY_ADD
20 INPLACE_ADD
22 STORE_FAST 1 ( n )

22 24 LOAD_FAST 1 ( n )
26 LOAD_CONST 4 ( 2 )
28 BINARY_MULTIPLY
30 INPLACE_ADD
32 STORE_FAST 1 ( n )

23 34 LOAD_FAST 1 ( n )
36 LOAD_CONST 5 ( 3 )
38 BINARY_MULTIPLY
40 INPLACE_ADD
42 STORE_FAST 1 ( n )

24 44 LOAD_FAST 1 ( n )
46 LOAD_CONST 6 ( 4 )
48 BINARY_MULTIPLY
50 INPLACE_ADD
52 STORE_FAST 1 ( n )

25 54 LOAD_FAST 1 ( n )
56 LOAD_CONST 7 ( 3 )
58 BINARY_MULTIPLY
60 INPLACE_ADD
62 STORE_FAST 1 ( n )

26 64 LOAD_FAST 1 ( n )
66 LOAD_CONST 8 ( 2 )
68 BINARY_MULTIPLY
70 INPLACE_ADD
72 STORE_FAST 1 ( n )
74 JUMP_FORWARD 14 ( to 80 )

27 >> 76 LOAD_FAST 1 ( n )
78 LOAD_CONST 9 ( 4 )
80 BINARY_MULTIPLY
82 INPLACE_ADD
84 STORE_FAST 1 ( n )

28 86 LOAD_FAST 1 ( n )
88 LOAD_CONST 10 ( 4 )
90 INPLACE_ADD
92 STORE_FAST 1 ( n )

29 94 LOAD_FAST 1 ( n )
96 LOAD_CONST 11 ( 2 )
98 BINARY_MULTIPLY
100 INPLACE_ADD
102 STORE_FAST 1 ( n )

30 104 LOAD_FAST 1 ( n )
106 LOAD_CONST 12 ( 2 )
108 BINARY_MULTIPLY
110 INPLACE_ADD
112 STORE_FAST 1 ( n )
114 JUMP_FORWARD 14 ( to 80 )

31 >> 116 LOAD_FAST 1 ( n )
118 LOAD_FAST 0 ( n )
120 BINARY_MULTIPLY
122 INPLACE_ADD
124 STORE_FAST 1 ( n )

32 126 LOAD_FAST 1 ( n )
128 LOAD_FAST 0 ( n )
130 BINARY_MULTIPLY
132 INPLACE_ADD
134 STORE_FAST 1 ( n )

33 >> 136 LOAD_FAST 1 ( n )
138 LOAD_FAST 0 ( n )
140 BINARY_MULTIPLY
142 INPLACE_ADD
144 STORE_FAST 1 ( n )

34 >> 146 LOAD_FAST 1 ( n )
148 RETURN_VALUE

