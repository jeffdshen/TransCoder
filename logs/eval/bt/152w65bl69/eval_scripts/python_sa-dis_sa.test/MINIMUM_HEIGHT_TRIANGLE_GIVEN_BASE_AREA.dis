{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( base , area ) :\n    return math.ceil ( ( 2 * area ) / base )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (1657.0629620116251,1493.9165309072955,),\n    (9124.969801011524,1805.1693004732417,),\n    (939.4442550679516,4002.523220001232,),\n    (1696.1076035017763,1305.681153243279,),\n    (3624.090070396748,9193.838698730207,),\n    (304.33897626625406,2077.168327165032,),\n    (8242.270129715309,2452.3562706401203,),\n    (4410.9174799683105,985.4222263517964,),\n    (7951.742385610694,7364.610274987048,),\n    (1280.6368084273633,9479.625581022658,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if abs(1 - (0.0000001 + abs(f_gold(*parameters_set))) / (abs(f_filled(*parameters_set)) + 0.0000001)) < 0.001:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def minHeight ( area , base ) :\n    return math.ceil ( ( 2 * area ) / base )\n"}
Disassembly of <code object minHeight at 0x7f816a673a50, file "<dis>", line 16>:
17 0 LOAD_GLOBAL 0 ( math )
2 LOAD_METHOD 1 ( ceil )
4 LOAD_CONST 1 ( 2 )
6 LOAD_FAST 0 ( area )
8 LOAD_FAST 1 ( base )
10 LOAD_FAST 2 ( base )
12 LOAD_FAST 3 ( base )
14 LOAD_FAST 4 ( base )
16 LOAD_FAST 5 ( base )
18 LOAD_FAST 6 ( base )
20 LOAD_FAST 7 ( base )
22 LOAD_FAST 8 ( base )
24 LOAD_FAST 9 ( base )
26 LOAD_FAST 10 ( base )
28 LOAD_FAST 11 ( base )
30 LOAD_FAST 12 ( base )
32 LOAD_FAST 13 ( base )
34 LOAD_FAST 14 ( base )
36 LOAD_FAST 15 ( base )
38 LOAD_FAST 16 ( base )
40 LOAD_FAST 17 ( base )
42 LOAD_FAST 18 ( base )
44 LOAD_FAST 19 ( base )
46 LOAD_FAST 20 ( base )
48 LOAD_FAST 21 ( base )
50 LOAD_FAST 22 ( base )
52 LOAD_FAST 21 ( base )
54 LOAD_FAST 22 ( base )
56 LOAD_FAST 21 ( base )
58 LOAD_FAST 22 ( base )
60 LOAD_FAST 21 ( base )
62 LOAD_FAST 22 ( base )
64 LOAD_FAST 21 ( base )
66 LOAD_FAST 22 ( base )
68 LOAD_FAST 21 ( base )
70 LOAD_FAST 22 ( base )
72 LOAD_FAST 21 ( base )
74 LOAD_FAST 22 ( base )
76 LOAD_FAST 21 ( base )
78 LOAD_FAST 22 ( base )
80 LOAD_FAST 21 ( base )
82 LOAD_FAST 22 ( base )
84 LOAD_FAST 21 ( base )
86 LOAD_FAST 22 ( base )
88 LOAD_FAST 21 ( base )
90 LOAD_FAST 22 ( base )
92 LOAD_FAST 21 ( base )
94 LOAD_FAST 22 ( base )
96 LOAD_FAST 21 ( base )
98 LOAD_FAST 22 ( base )
100 LOAD_FAST 21 ( base )
102 LOAD_FAST 22 ( base )
104 LOAD_FAST 22 ( base )
106 LOAD_FAST 21 ( base )
108 BUILD_TUPLE 21
110 LOAD_FAST 22 ( base )
112 LOAD_FAST 21 ( base )
114 LOAD_FAST 22 ( base )
116 LOAD_FAST 22 ( base )
118 BUILD_TUPLE 21
120 LOAD_FAST 22 ( base )
122 LOAD_FAST 22 ( base )
124 BUILD_TUPLE 21
126 LOAD_FAST 22 ( base )
128 LOAD_FAST 22 ( base )
130 BUILD_TUPLE 21
132 LOAD_FAST 22 ( base )
134 LOAD_FAST 21 ( base )
136 BUILD_TUPLE 21
138 LOAD_FAST 22 ( base )
140 LOAD_FAST 21 ( base )
142 BUILD_TUPLE 21
144 LOAD_FAST 22 ( base )
146 BUILD_TUPLE 21
