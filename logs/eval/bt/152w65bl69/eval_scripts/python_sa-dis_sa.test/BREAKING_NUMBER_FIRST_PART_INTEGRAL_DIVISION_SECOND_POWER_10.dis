{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( N ) :\n    length = len ( N )\n    l = int ( ( length ) / 2 )\n    count = 0\n    for i in range ( l + 1 ) :\n        s = N [ 0 : 0 + i ]\n        l1 = len ( s )\n        t = N [ i : l1 + i ]\n        try :\n            if s [ 0 ] == '0' or t [ 0 ] == '0' :\n                continue\n        except :\n            continue\n        if s == t :\n            count += 1\n    return count\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('ZCoQhuM',),\n    ('2674377254',),\n    ('11',),\n    ('LbuGlvRyWAPBpo',),\n    ('26382426486138',),\n    ('111010111010',),\n    ('hUInqJXNdbfP',),\n    ('5191',),\n    ('1110101101',),\n    ('2202200',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def calculate ( N ) :\n    length = len ( N )\n    l = int ( ( length ) / 2 )\n    count = 0\n    for i in range ( l + 1 ) :\n        s = N [ 0 : 0 + i ]\n        l1 = len ( s )\n        t = N [ i : l1 + i ]\n        try :\n            if s [ 0 ] == '0' or t [ 0 ] == '0' :\n                continue\n        except :\n            continue\n        if s == t :\n            count += 1\n    return count\n"}
Disassembly of <code object calculate at 0x7f8169feb660, file "<dis>", line 148>:
149 0 LOAD_FAST 1 ( length )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 STORE_FAST 2 ( N )

150 8 LOAD_FAST 0 ( N )
10 LOAD_CONST 1 ( 0 )
12 BINARY_SUBSCR
14 STORE_FAST 3 ( N )

151 16 LOAD_FAST 2 ( N )
18 LOAD_CONST 1 ( 0 )
20 BINARY_SUBSCR
22 STORE_FAST 4 ( N )

152 24 LOAD_FAST 3 ( N )
26 LOAD_CONST 1 ( 0 )
28 BINARY_SUBSCR
30 LOAD_CONST 1 ( 0 )
32 BINARY_SUBSCR
34 STORE_FAST 5 ( N )

153 36 LOAD_FAST 4 ( N )
38 LOAD_CONST 1 ( 0 )
40 BINARY_SUBSCR
42 LOAD_CONST 1 ( 0 )
44 BINARY_SUBSCR
46 LOAD_FAST 5 ( N )
48 LOAD_CONST 1 ( 0 )
50 BINARY_SUBSCR
52 LOAD_CONST 1 ( 0 )
54 BINARY_SUBSCR
56 LOAD_CONST 1 ( 0 )
58 BINARY_SUBSCR
60 LOAD_CONST 1 ( 0 )
62 BINARY_SUBSCR
64 LOAD_CONST 1 ( 0 )
66 BINARY_SUBSCR
68 LOAD_CONST 1 ( 0 )
70 BINARY_SUBSCR
72 LOAD_CONST 1 ( 0 )
74 BINARY_SUBSCR
76 LOAD_CONST 1 ( 0 )
78 BINARY_SUBSCR
80 LOAD_CONST 1 ( 0 )
82 BINARY_SUBSCR
84 LOAD_CONST 1 ( 0 )
86 BINARY_SUBSCR
88 LOAD_CONST 1 ( 0 )
90 BINARY_SUBSCR
92 LOAD_CONST 1 ( 0 )
94 BINARY_SUBSCR
96 LOAD_CONST 1 ( 0 )
98 BINARY_SUBSCR
100 LOAD_CONST 1 ( 0 )
102 BINARY_SUBSCR
104 LOAD_CONST 1 ( 0 )
106 BINARY_SUBSCR
108 LOAD_CONST 1 ( 0 )
110 BINARY_SUBSCR
112 LOAD_CONST 1 ( 0 )
114 BINARY_SUBSCR
116 LOAD_CONST 1 ( 0 )
118 BINARY_SUBSCR
120 LOAD_CONST 1 ( 0 )
122 BINARY_SUBSCR
124 LOAD_CONST 1 ( 0 )
126 BINARY_SUBSCR
128 LOAD_CONST 1 ( 0 )
130 BINARY_SUBSCR
132 LOAD_CONST 1 ( 0 )
134 BINARY_SUBSCR
136 LOAD_CONST 1 ( 0 )
138 BINARY_SUBSCR
140 LOAD_CONST 1 ( 0 )
142 BINARY_SUBSCR
144 LOAD_CONST 1 ( 0 )
146 BINARY_SUBSCR
148 LOAD_CONST 1 ( 0 )
150 BINARY_SUBSCR
152 LOAD_CONST 1 ( 0 )
154 BINARY_SUBSCR
156 LOAD_CONST 1 ( 0 )
158 BINARY_SUBSCR
160 LOAD_CONST 1 ( 0 )
162 BINARY_SUBSCR
164 LOAD_CONST 1 ( 0 )
166 BINARY_SUBSCR
168 LOAD_CONST 1 ( 0 )
170 BINARY_SUBSCR

151 172 LOAD_CONST 1 ( 0 )
174 LOAD_CONST 1 ( 0 )
176 BINARY_SUBSCR
174 LOAD_CONST 1 ( 0 )
176 BINARY_SUBSCR
178 LOAD_CONST 1 ( 0 )
180 BINARY_SUBSCR

