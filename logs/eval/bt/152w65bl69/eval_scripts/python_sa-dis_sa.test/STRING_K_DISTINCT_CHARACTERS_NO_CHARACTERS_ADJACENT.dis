{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n , k ) :\n    res = \"\"\n    for i in range ( k ) :\n        res = res + chr ( ord ( 'a' ) + i )\n    count = 0\n    for i in range ( n - k ) :\n        res = res + chr ( ord ( 'a' ) + count )\n        count += 1\n        if ( count == k ) :\n            count = 0 ;\n    return res\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (60,71,),\n    (56,17,),\n    (16,16,),\n    (42,60,),\n    (55,56,),\n    (64,59,),\n    (68,24,),\n    (88,2,),\n    (64,94,),\n    (42,79,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findString ( n , k ) :\n    res = \"\"\n    for i in range ( k ) :\n        res = res + chr ( ord ( 'a' ) + i )\n    count = 0\n    for i in range ( n - k ) :\n        res = res + chr ( ord ( 'a' ) + count )\n        count += 1\n        if ( count == k ) :\n            count = 0 ;\n    return res\n"}
Disassembly of <code object findString at 0x7f816a677930, file "<dis>", line 25>:
26 0 LOAD_CONST 1 ( "" )
2 STORE_FAST 1 ( k )

27 4 LOAD_FAST 1 ( k )
6 LOAD_CONST 2 ( 0 )
8 COMPARE_OP 4 ( > )
10 POP_JUMP_IF_FALSE 20

28 12 LOAD_FAST 1 ( k )
14 LOAD_CONST 3 ( 1 )
16 INPLACE_ADD
18 STORE_FAST 1 ( k )

29 >> 20 LOAD_FAST 1 ( k )
22 LOAD_CONST 4 ( 2 )
24 INPLACE_ADD
26 STORE_FAST 1 ( k )

30 28 LOAD_FAST 1 ( k )
30 LOAD_CONST 5 ( 3 )
32 INPLACE_ADD
34 STORE_FAST 1 ( k )

31 36 LOAD_FAST 1 ( k )
38 LOAD_CONST 6 ( 4 )
40 INPLACE_ADD
42 STORE_FAST 1 ( k )

32 44 LOAD_FAST 1 ( k )
46 LOAD_CONST 7 ( 3 )
48 INPLACE_ADD
50 STORE_FAST 1 ( k )

33 52 LOAD_FAST 1 ( k )
54 LOAD_FAST 1 ( k )
56 LOAD_FAST 0 ( n )
58 LOAD_FAST 0 ( n )
60 LOAD_FAST 0 ( n )
62 LOAD_FAST 0 ( n )
64 BINARY_ADD
66 BUILD_SLICE 2
68 BINARY_SUBSCR
70 LOAD_CONST 8 ( 2 )
72 INPLACE_ADD
74 STORE_FAST 1 ( k )

34 76 LOAD_FAST 1 ( k )
78 LOAD_FAST 0 ( n )
80 LOAD_FAST 0 ( n )
82 LOAD_FAST 0 ( n )
84 LOAD_FAST 0 ( n )
86 LOAD_FAST 0 ( n )
88 LOAD_FAST 0 ( n )
90 LOAD_FAST 0 ( n )
92 LOAD_FAST 0 ( n )
94 LOAD_FAST 0 ( n )
96 LOAD_FAST 0 ( n )
98 LOAD_FAST 0 ( n )
100 LOAD_FAST 0 ( n )
102 LOAD_FAST 0 ( n )
104 LOAD_FAST 0 ( n )
106 LOAD_FAST 0 ( n )
108 LOAD_FAST 0 ( n )
110 LOAD_FAST 0 ( n )
112 BUILD_TUPLE 3
114 STORE_SUBSCR

35 116 LOAD_FAST 1 ( k )
118 RETURN_VALUE

