{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    A = [ 0 ] * ( n + 1 )\n    B = [ 0 ] * ( n + 1 )\n    A [ 0 ] = 1\n    A [ 1 ] = 0\n    B [ 0 ] = 0\n    B [ 1 ] = 1\n    for i in range ( 2 , n + 1 ) :\n        A [ i ] = A [ i - 2 ] + 2 * B [ i - 1 ]\n        B [ i ] = A [ i - 1 ] + B [ i - 2 ]\n    return A [ n ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (29,),\n    (13,),\n    (25,),\n    (65,),\n    (27,),\n    (42,),\n    (19,),\n    (50,),\n    (59,),\n    (13,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countWays ( n ) :\n    A = [ 0 ] * ( n + 1 )\n    B = [ 0 ] * ( n + 1 )\n    A [ 0 ] = 1\n    A [ 1 ] = 0\n    B [ 0 ] = 0\n    B [ 1 ] = 1\n    for i in range ( 2 , n + 1 ) :\n        A [ i ] = A [ i - 2 ] + 2 * B [ i - 1 ]\n        B [ i ] = A [ i - 1 ] + B [ i - 2 ]\n    return A [ n ]\n"}
Disassembly of <code object countWays at 0x7f816a673a50, file "<dis>", line 25>:
26 0 LOAD_CONST 1 ( 0 )
2 LOAD_CONST 2 ( ( '*' , ) )
4 IMPORT_NAME 0 ( itertools . itertools )
6 IMPORT_FROM 1 ( * ',))
8STORE_FAST1( itertools )
10 POP_TOP

27 12 LOAD_FAST 1 ( itertools )
14 LOAD_METHOD 2 ( count )
16 CALL_METHOD 0
18 STORE_FAST 2 ( itertools )

28 20 LOAD_FAST 2 ( itertools )
22 LOAD_METHOD 3 ( count )
24 CALL_METHOD 0
26 STORE_FAST 3 ( count )

29 28 LOAD_FAST 0 ( n )
30 LOAD_CONST 3 ( 1 )
32 INPLACE_ADD
34 STORE_FAST 2 ( itertools )

30 36 LOAD_FAST 2 ( itertools )
38 LOAD_METHOD 4 ( count )
40 CALL_METHOD 0
42 STORE_FAST 4 ( count )

31 44 LOAD_FAST 0 ( n )
46 LOAD_CONST 4 ( 1 )
48 INPLACE_ADD
50 STORE_FAST 2 ( itertools )

32 52 LOAD_FAST 2 ( itertools )
54 LOAD_METHOD 5 ( count )
56 CALL_METHOD 0
58 STORE_FAST 5 ( count )

33 60 LOAD_FAST 0 ( n )
62 LOAD_CONST 5 ( 1 )
64 INPLACE_ADD
66 STORE_FAST 2 ( itertools )

34 68 LOAD_FAST 5 ( count )
70 LOAD_CONST 6 ( 2 )
72 INPLACE_ADD
74 STORE_FAST 2 ( itertools )
76 STORE_FAST 6 ( itertools )
78 LOAD_FAST 6 ( itertools )
80 LOAD_METHOD 6 ( count )
82 CALL_METHOD 0
84 STORE_FAST 7 ( count )

35 86 LOAD_FAST 0 ( n )
88 LOAD_CONST 7 ( 1 )
90 INPLACE_ADD
92 STORE_FAST 2 ( itertools )
94 LOAD_FAST 6 ( itertools )
96 LOAD_METHOD 7 ( count )
98 CALL_METHOD 0
100 LOAD_FAST 7 ( count )
102 LOAD_CONST 8 ( 1 )
104 INPLACE_ADD
106 STORE_FAST 2 ( itertools )
108 LOAD_FAST 6 ( itertools )
110 LOAD_METHOD 8 ( count )
112 CALL_METHOD 0
114 LOAD_FAST 7 ( count )
116 LOAD_CONST 9 ( 1 )
118 INPLACE_ADD
120 STORE_FAST 2 ( itertools )
122 LOAD_FAST 6 ( itertools )
124 LOAD_METHOD 9 ( count )
126 CALL_METHOD 0
128 LOAD_FAST 7 ( count )
130 LOAD_CONST 10 ( 1 )
132 INPLACE_ADD
134 ROT_THREE
136 STORE_SUBSCR
138 LOAD_CONST 11 ( None )
140 RETURN_VALUE

