{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( low , high ) :\n    f1 , f2 , f3 = 0 , 1 , 1\n    result = 0\n    while ( f1 <= high ) :\n        if ( f1 >= low ) :\n            result += 1\n        f1 = f2\n        f2 = f3\n        f3 = f1 + f2\n    return result\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (76,43,),\n    (96,52,),\n    (19,79,),\n    (36,2,),\n    (60,11,),\n    (20,15,),\n    (76,4,),\n    (63,93,),\n    (2,25,),\n    (41,39,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countFibs ( low , high ) :\n    f1 , f2 , f3 = 0 , 1 , 1\n    result = 0\n    while ( f1 <= high ) :\n        if ( f1 >= low ) :\n            result += 1\n        f1 = f2\n        f2 = f3\n        f3 = f1 + f2\n    return result\n"}
Disassembly of <code object countFibs at 0x7f816a673a50, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( low )
2 LOAD_CONST 1 ( 0 )
4 COMPARE_OP 5 ( >= )
6 POP_JUMP_IF_FALSE 12

27 8 LOAD_FAST 0 ( low )
10 LOAD_CONST 1 ( 0 )
12 BINARY_SUBSCR
14 STORE_FAST 1 ( high )

28 16 LOAD_FAST 1 ( high )
18 LOAD_CONST 1 ( 0 )
20 COMPARE_OP 4 ( > )
22 POP_JUMP_IF_FALSE 28

29 24 LOAD_FAST 1 ( high )
26 LOAD_CONST 1 ( 0 )
28 COMPARE_OP 4 ( > )
30 POP_JUMP_IF_FALSE 28

30 32 LOAD_FAST 1 ( high )
34 LOAD_CONST 1 ( 0 )
36 COMPARE_OP 4 ( > )
38 POP_JUMP_IF_FALSE 52

31 40 LOAD_FAST 1 ( high )
42 LOAD_CONST 1 ( 0 )
44 COMPARE_OP 4 ( > )
46 POP_JUMP_IF_FALSE 52

32 48 LOAD_FAST 1 ( high )
50 LOAD_CONST 1 ( 0 )
52 COMPARE_OP 4 ( > )
54 POP_JUMP_IF_FALSE 52

33 56 LOAD_FAST 1 ( high )
58 LOAD_CONST 1 ( 0 )
60 COMPARE_OP 4 ( > )
62 POP_JUMP_IF_FALSE 52

34 64 LOAD_FAST 1 ( high )
66 LOAD_CONST 1 ( 0 )
68 COMPARE_OP 4 ( > )
70 POP_JUMP_IF_FALSE 52

35 72 LOAD_FAST 1 ( high )
74 LOAD_CONST 1 ( 0 )
76 COMPARE_OP 4 ( > )
78 POP_JUMP_IF_FALSE 82

36 80 LOAD_FAST 1 ( high )
82 LOAD_CONST 1 ( 0 )
84 COMPARE_OP 4 ( > )
86 POP_JUMP_IF_FALSE 82

37 >> 88 LOAD_FAST 1 ( high )
90 LOAD_CONST 1 ( 0 )
92 COMPARE_OP 4 ( > )
94 POP_JUMP_IF_FALSE 82

38 96 LOAD_FAST 1 ( high )
98 LOAD_CONST 1 ( 0 )
100 COMPARE_OP 4 ( > )
102 POP_JUMP_IF_FALSE 82

39 104 LOAD_FAST 1 ( high )
106 LOAD_CONST 1 ( 0 )
108 COMPARE_OP 4 ( > )
110 POP_JUMP_IF_FALSE 82

40 112 LOAD_FAST 1 ( high )
114 LOAD_CONST 1 ( 0 )
116 COMPARE_OP 4 ( > )
118 POP_JUMP_IF_FALSE 82

41 120 LOAD_FAST 1 ( high )
122 LOAD_CONST 1 ( 0 )
124 COMPARE_OP 4 ( > )
126 POP_JUMP_IF_FALSE 130

42 128 LOAD_FAST 1 ( high )
130 LOAD_CONST 1 ( 0 )
132 COMPARE_OP 4 ( > )
134 POP_JUMP_IF_FALSE 130

43 136 LOAD_FAST 1 ( high )
138 RETURN_VALUE
>> 140 LOAD_CONST 1 ( 0 )
142 RETURN_VALUE

