{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( str1 ) :\n    result = 0 ;\n    n = len ( str1 )\n    for i in range ( 0 , n ) :\n        for j in range ( i + 1 , n ) :\n            if ( abs ( ord ( str1 [ i ] ) - ord ( str1 [ j ] ) ) == abs ( i - j ) ) :\n                result += 1 ;\n    return result ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('smnKL',),\n    ('270083',),\n    ('0',),\n    ('kcZdsz',),\n    ('483544224',),\n    ('000011',),\n    ('WysGCirMwKBzP',),\n    ('3366',),\n    ('110',),\n    ('NlaMkpCjUgg',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countPairs ( str1 ) :\n    result = 0 ;\n    n = len ( str1 )\n    for i in range ( 0 , n ) :\n        for j in range ( i + 1 , n ) :\n            if ( abs ( ord ( str1 [ i ] ) - ord ( str1 [ j ] ) ) == abs ( i - j ) ) :\n                result += 1 ;\n    return result ;\n"}
Disassembly of <code object countPairs at 0x7f816a683c00, file "<dis>", line 100>:
101 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( i )

102 4 SETUP_LOOP 52 ( to 54 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_CONST 2 ( 1 )
10 CALL_FUNCTION 1
12 GET_ITER
>> 14 FOR_ITER 52 ( to 52 )
16 STORE_FAST 2 ( i )

103 18 LOAD_FAST 0 ( str1 )
20 LOAD_METHOD 1 ( split )
22 LOAD_CONST 3 ( '=' )
24 CALL_METHOD 1
26 STORE_FAST 3 ( i )

104 28 LOAD_FAST 0 ( str1 )
30 LOAD_METHOD 2 ( split )
32 LOAD_CONST 4 ( '=' )
34 CALL_METHOD 1
36 STORE_FAST 4 ( match )

105 38 LOAD_FAST 0 ( str1 )
40 LOAD_METHOD 3 ( split )
42 LOAD_CONST 5 ( '=' )
44 CALL_METHOD 1
46 STORE_FAST 5 ( i )

106 48 LOAD_FAST 0 ( str1 )
50 LOAD_METHOD 4 ( append )
52 LOAD_FAST 5 ( i )
54 CALL_METHOD 1
56 POP_TOP
58 JUMP_ABSOLUTE 14
>> 60 POP_BLOCK
>> 62 LOAD_CONST 0 ( None )
64 RETURN_VALUE

