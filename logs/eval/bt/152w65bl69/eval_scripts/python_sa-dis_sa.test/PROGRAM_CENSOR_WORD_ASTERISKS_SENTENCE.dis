{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( text , word ) :\n    word_list = text.split ( )\n    result = ''\n    stars = '*' * len ( word )\n    count = 0\n    index = 0 ;\n    for i in word_list :\n        if i == word :\n            word_list [ index ] = stars\n        index += 1\n    result = ' '.join ( word_list )\n    return result\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('IggvAXtmJ','kzHdEJuCaO',),\n    ('76711241128','5',),\n    ('010','0101001',),\n    ('HIKOn','XlnBwpx',),\n    ('3680369217','017523',),\n    ('1111','1011',),\n    ('zIi','ONNXygON',),\n    ('06','54171617',),\n    ('111','0010001011001',),\n    ('NJNnrVU','AGwmS',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def censor ( text , word ) :\n    word_list = text.split ( )\n    result = ''\n    stars = '*' * len ( word )\n    count = 0\n    index = 0 ;\n    for i in word_list :\n        if i == word :\n            word_list [ index ] = stars\n        index += 1\n    result = ' '.join ( word_list )\n    return result\n"}
Disassembly of <code object censor at 0x7f816a677930, file "<dis>", line 64>:
65 0 LOAD_FAST 0 ( text )
2 LOAD_CONST 1 ( 'stars' )
4 BINARY_SUBSCR
6 STORE_FAST 1 ( word )

66 8 LOAD_FAST 1 ( word )
10 LOAD_CONST 2 ( '' )
12 BINARY_SUBSCR
14 STORE_FAST 2 ( word )

67 16 LOAD_FAST 2 ( word )
18 LOAD_CONST 3 ( 'stars' )
20 BINARY_SUBSCR
22 STORE_FAST 3 ( word )

68 24 LOAD_FAST 3 ( word )
26 LOAD_CONST 4 ( '' )
28 BINARY_SUBSCR
30 LOAD_CONST 5 ( '' )
32 BINARY_SUBSCR
34 LOAD_CONST 6 ( '' )
36 BINARY_SUBSCR
38 LOAD_CONST 7 ( '' )
40 BINARY_SUBSCR
42 LOAD_CONST 8 ( '' )
44 BINARY_SUBSCR
46 LOAD_CONST 9 ( '' )
48 BINARY_SUBSCR
50 LOAD_CONST 10 ( '' )
52 BINARY_SUBSCR
54 LOAD_CONST 11 ( '' )
56 BINARY_SUBSCR
58 LOAD_CONST 12 ( '' )
60 BINARY_SUBSCR
62 LOAD_CONST 13 ( '' )
64 BINARY_SUBSCR
66 LOAD_CONST 14 ( '' )
68 BINARY_SUBSCR
70 LOAD_CONST 15 ( '' )
72 BINARY_SUBSCR
74 LOAD_CONST 16 ( '' )
76 BINARY_SUBSCR
78 LOAD_CONST 17 ( 'stars' )
80 BINARY_SUBSCR
82 LOAD_CONST 18 ( 'stars' )
84 BINARY_SUBSCR
86 LOAD_CONST 19 ( 'stars' )
88 BINARY_SUBSCR
90 LOAD_CONST 20 ( 'stars' )
92 BINARY_SUBSCR
94 LOAD_CONST 21 ( 'stars' )
96 BINARY_SUBSCR
98 LOAD_CONST 22 ( 'stars' )
100 BINARY_SUBSCR
102 LOAD_CONST 21 ( 'stars' )
104 BINARY_SUBSCR
106 LOAD_CONST 22 ( 'stars' )
108 BINARY_SUBSCR
110 LOAD_CONST 21 ( 'stars' )
112 BINARY_SUBSCR
114 LOAD_CONST 22 ( 'stars' )
116 BINARY_SUBSCR
118 LOAD_CONST 23 ( 'stars' )
120 BINARY_SUBSCR
122 LOAD_CONST 22 ( 'stars' )
124 BINARY_SUBSCR
126 LOAD_CONST 23 ( 'stars' )
128 BINARY_SUBSCR
130 LOAD_CONST 22 ( 'stars' )
132 BINARY_SUBSCR
134 LOAD_CONST 23 ( 'stars' )
136 BINARY_SUBSCR
138 LOAD_CONST 22 ( 'stars' )
140 BINARY_SUBSCR
142 LOAD_CONST 23 ( 'stars' )
144 BINARY_SUBSCR
146 LOAD_CONST 24 ( 'stars' )
148 BINARY_SUBSCR
150 LOAD_CONST 25 ( 'stars' )
152 BINARY_SUBSCR
154 LOAD_CONST 26 ( 'stars' )
156 BINARY_SUBSCR
158 LOAD_CONST 24 ( 'stars' )
160 STORE_SUBSCR

67 162 LOAD_FAST 1 ( word )
164 RETURN_VALUE
