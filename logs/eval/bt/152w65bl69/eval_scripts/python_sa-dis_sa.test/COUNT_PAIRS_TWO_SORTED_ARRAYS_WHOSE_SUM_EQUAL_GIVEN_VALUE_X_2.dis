{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr1 , arr2 , m , n , x ) :\n    count , l , r = 0 , 0 , n - 1\n    while ( l < m and r >= 0 ) :\n        if ( ( arr1 [ l ] + arr2 [ r ] ) == x ) :\n            l += 1\n            r -= 1\n            count += 1\n        elif ( ( arr1 [ l ] + arr2 [ r ] ) < x ) :\n            l += 1\n        else :\n            r -= 1\n    return count\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([5, 5, 7, 10, 14, 14, 17, 21, 32, 34, 37, 40, 40, 40, 46, 46, 50, 50, 51, 55, 57, 62, 65, 67, 67, 69, 70, 70, 72, 73, 76, 77, 77, 78, 84, 85, 85, 86, 87, 88, 88, 89, 89, 90, 93, 99],[2, 5, 8, 8, 10, 12, 13, 15, 17, 18, 20, 20, 21, 27, 28, 31, 34, 37, 40, 46, 48, 52, 53, 54, 54, 58, 59, 60, 66, 68, 68, 69, 70, 71, 72, 73, 77, 77, 80, 84, 84, 92, 92, 95, 97, 97],28,29,23,),\n    ([-84, 52, -34, 96, 16, 92, -64, -74],[-22, 26, -12, -54, 66, 86, 38, 76],6,5,7,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],37,26,42,),\n    ([60, 92, 42, 83, 55, 76, 29, 62],[71, 2, 74, 42, 80, 71, 26, 76],4,7,7,),\n    ([-94, -94, -58, -40, -40, -26, -24, -22, -22, -22, -2, 0, 4, 8, 12, 16, 16, 18, 22, 32, 42, 44, 50, 58, 64, 78, 80, 90],[-86, -84, -78, -76, -72, -70, -62, -58, -54, -54, -50, -46, -44, -40, -30, -28, -16, -10, 10, 36, 36, 48, 70, 84, 84, 90, 94, 98],17,27,17,),\n    ([0, 0, 1, 1, 1, 0, 0, 1, 1, 1],[1, 1, 1, 0, 1, 1, 0, 0, 0, 0],5,8,9,),\n    ([1, 5, 7, 7, 7, 14, 15, 16, 17, 18, 18, 19, 20, 25, 27, 31, 36, 42, 47, 51, 56, 56, 56, 58, 58, 59, 63, 63, 63, 65, 66, 67, 76, 83, 93, 94, 97],[2, 3, 7, 8, 9, 10, 17, 18, 21, 28, 29, 29, 33, 35, 46, 47, 47, 49, 49, 49, 53, 56, 58, 59, 59, 60, 65, 67, 70, 78, 81, 85, 85, 87, 90, 92, 96],28,34,31,),\n    ([78, -74, 52, 56, -8, 92, 14, 56, -72, -92, 32, -94, -26, -8, -66, 72, -24, 36, -84, -4, -68, 14, 78, 40, -82, -10, 16, 56, 6, -16, 30, 24, -32],[-74, 22, -14, -2, 36, 86, -70, -20, -76, -84, -40, -36, 42, 22, -60, -94, -18, 8, -14, -42, -68, 62, -60, 2, 40, -66, 68, 96, 70, 98, -38, -74, -92],16,30,24,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],25,33,33,),\n    ([17, 50, 65, 4, 19, 10, 45, 70, 76, 81, 28, 97, 55, 70, 38, 2, 40, 67, 36, 33, 6, 85, 25],[78, 92, 65, 23, 7, 94, 18, 4, 2, 53, 31, 58, 98, 18, 46, 16, 17, 92, 80, 92, 43, 70, 50],16,22,22,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countPairs ( arr1 , arr2 , m , n , x ) :\n    count , l , r = 0 , 0 , n - 1\n    while ( l < m and r >= 0 ) :\n        if ( ( arr1 [ l ] + arr2 [ r ] ) == x ) :\n            l += 1\n            r -= 1\n            count += 1\n        elif ( ( arr1 [ l ] + arr2 [ r ] ) < x ) :\n            l += 1\n        else :\n            r -= 1\n    return count\n"}
Disassembly of <code object countPairs at 0x7f816a683c00, file "<dis>", line 49>:
50 0 LOAD_FAST 1 ( arr2 )
2 LOAD_FAST 0 ( arr1 )
4 LOAD_FAST 2 ( arr2 )
6 LOAD_FAST 3 ( arr2 )
8 LOAD_FAST 4 ( arr2 )
10 LOAD_FAST 5 ( arr2 )
12 LOAD_FAST 6 ( arr2 )
14 LOAD_FAST 7 ( arr2 )
16 LOAD_FAST 8 ( arr2 )
18 LOAD_FAST 9 ( arr2 )
20 LOAD_FAST 10 ( arr2 )
22 LOAD_FAST 11 ( arr2 )
24 LOAD_FAST 12 ( arr2 )
26 LOAD_FAST 13 ( arr2 )
28 LOAD_FAST 14 ( arr2 )
30 LOAD_FAST 15 ( arr2 )
32 LOAD_FAST 14 ( arr2 )
34 LOAD_FAST 15 ( arr2 )
36 LOAD_FAST 16 ( arr2 )
38 LOAD_FAST 17 ( arr2 )
40 LOAD_FAST 18 ( arr2 )
42 LOAD_FAST 17 ( arr2 )
44 LOAD_FAST 18 ( arr2 )
46 LOAD_FAST 19 ( arr2 )
48 LOAD_FAST 20 ( arr2 )
50 LOAD_FAST 21 ( arr2 )
52 LOAD_FAST 22 ( arr2 )
54 LOAD_FAST 21 ( arr2 )
56 LOAD_FAST 22 ( arr2 )
58 LOAD_FAST 21 ( arr2 )
60 LOAD_FAST 22 ( arr2 )
62 LOAD_FAST 21 ( arr2 )
64 LOAD_FAST 22 ( arr2 )
66 LOAD_FAST 21 ( arr2 )
68 LOAD_FAST 22 ( arr2 )
70 LOAD_FAST 21 ( arr2 )
72 LOAD_FAST 22 ( arr2 )
74 LOAD_FAST 22 ( arr2 )
76 LOAD_FAST 21 ( arr2 )
78 LOAD_FAST 22 ( arr2 )
80 LOAD_FAST 23 ( arr2 )
82 LOAD_FAST 22 ( arr2 )
84 LOAD_FAST 21 ( arr2 )
86 LOAD_FAST 22 ( arr2 )
88 LOAD_FAST 22 ( arr2 )
90 LOAD_FAST 23 ( arr2 )
92 LOAD_FAST 22 ( arr2 )
94 LOAD_FAST 23 ( arr2 )
96 LOAD_FAST 22 ( arr2 )
98 LOAD_FAST 23 ( arr2 )
100 LOAD_FAST 22 ( arr2 )
102 LOAD_FAST 24 ( arr2 )
104 LOAD_FAST 23 ( arr2 )
106 LOAD_FAST 22 ( arr2 )
108 LOAD_FAST 24 ( arr2 )
110 LOAD_FAST 23 ( arr2 )
112 LOAD_FAST 24 ( arr2 )
114 LOAD_FAST 26 ( arr2 )
116 LOAD_FAST 25 ( arr2 )
118 LOAD_FAST 24 ( arr2 )
120 LOAD_FAST 26 ( arr2 )
122 LOAD_FAST 28 ( arr2 )
124 LOAD_FAST 30 ( arr2 )
126 LOAD_FAST 30 ( arr2 )
128 LOAD_FAST 5 ( arr2 )
130 LOAD_FAST 6 ( arr2 )
132 LOAD_FAST 7 ( arr2 )
134 LOAD_FAST 8 ( arr2 )
136 LOAD_FAST 7 ( arr2 )
138 LOAD_FAST 8 ( arr2 )
140 BUILD_TUPLE 7
142 LOAD_FAST 8