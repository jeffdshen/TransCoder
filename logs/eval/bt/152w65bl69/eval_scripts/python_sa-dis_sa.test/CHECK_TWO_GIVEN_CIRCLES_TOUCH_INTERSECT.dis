{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( x1 , y1 , x2 , y2 , r1 , r2 ) :\n    distSq = ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) ;\n    radSumSq = ( r1 + r2 ) * ( r1 + r2 ) ;\n    if ( distSq == radSumSq ) :\n        return 1\n    elif ( distSq > radSumSq ) :\n        return - 1\n    else :\n        return 0\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (11,36,62,64,50,4,),\n    (87,1,62,64,54,41,),\n    (51,1,47,90,14,71,),\n    (89,67,9,52,94,21,),\n    (64,10,79,45,67,78,),\n    (57,86,99,43,83,63,),\n    (65,90,42,82,77,32,),\n    (32,23,28,26,60,45,),\n    (73,61,63,77,92,76,),\n    (3,99,6,19,21,28,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def circle ( x1 , y1 , x2 , y2 , r1 , r2 ) :\n    distSq = ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) ;\n    radSumSq = ( r1 + r2 ) * ( r1 + r2 ) ;\n    if ( distSq == radSumSq ) :\n        return 1\n    elif ( distSq > radSumSq ) :\n        return - 1\n    else :\n        return 0\n"}
Disassembly of <code object circle at 0x7f8169feb9c0, file "<dis>", line r1>:
r2 0 LOAD_GLOBAL 0 ( distSq )
2 LOAD_FAST 0 ( x1 )
4 LOAD_FAST 1 ( y1 )
6 LOAD_FAST 2 ( x2 )
8 LOAD_FAST 3 ( x2 )
10 LOAD_FAST 4 ( x2 )
12 LOAD_FAST 5 ( x2 )
14 LOAD_FAST 6 ( x2 )
16 LOAD_FAST 7 ( x1 )
18 LOAD_FAST 8 ( dist_b_b_bq )
20 LOAD_FAST 9 ( x1 )
22 LOAD_FAST 10 ( x2 )
24 LOAD_FAST 11 ( x1 )
26 LOAD_FAST 12 ( x2 )
28 LOAD_FAST 13 ( x1 )
30 LOAD_FAST 14 ( x2 )
32 LOAD_FAST 15 ( x2 )
34 LOAD_FAST 16 ( x2 )
36 LOAD_FAST 17 ( x1 )
38 LOAD_FAST 18 ( x2 )
40 LOAD_FAST 19 ( x1 )
42 LOAD_FAST 20 ( x2 )
44 LOAD_FAST 21 ( x1 )
46 LOAD_FAST 22 ( x2 )
48 LOAD_FAST 21 ( x1 )
50 LOAD_FAST 22 ( x2 )
52 LOAD_FAST 21 ( x1 )
54 LOAD_FAST 22 ( x2 )
56 LOAD_FAST 21 ( x1 )
58 LOAD_FAST 22 ( x2 )
60 LOAD_FAST 21 ( x1 )
62 LOAD_FAST 22 ( x2 )
64 LOAD_FAST 21 ( x1 )
66 LOAD_FAST 22 ( x2 )
68 LOAD_FAST 21 ( x1 )
70 LOAD_FAST 22 ( x2 )
72 LOAD_FAST 21 ( x1 )
74 LOAD_FAST 22 ( x2 )
76 LOAD_FAST 22 ( x2 )
78 LOAD_FAST 23 ( x1 )
80 LOAD_FAST 22 ( x2 )
82 LOAD_FAST 21 ( x1 )
84 LOAD_FAST 22 ( x2 )
86 LOAD_FAST 23 ( x1 )
88 LOAD_FAST 22 ( x2 )
90 LOAD_FAST 23 ( x1 )
92 LOAD_FAST 22 ( x2 )
94 LOAD_FAST 23 ( x1 )
96 LOAD_FAST 22 ( x2 )
98 LOAD_FAST 23 ( x1 )
100 LOAD_FAST 24 ( x2 )
102 LOAD_FAST 23 ( x1 )
104 LOAD_FAST 22 ( x2 )
106 LOAD_FAST 24 ( x2 )
108 LOAD_FAST 23 ( x1 )
110 LOAD_FAST 24 ( x2 )
112 LOAD_FAST 23 ( x1 )
114 LOAD_FAST 24 ( x2 )
116 LOAD_FAST 23 ( x1 )
118 LOAD_FAST 24 ( x2 )
120 LOAD_FAST 23 ( x1 )
122 LOAD_FAST 24 ( x2 )
124 LOAD_FAST 25 ( x2 )
126 LOAD_FAST 26 ( x2 )
128 LOAD_FAST 24 ( x2 )
130 LOAD_FAST 25 ( x1 )
132 LOAD_FAST 26 ( x2 )
134 LOAD_FAST 25 ( x1 )
136 LOAD_FAST 26 ( x2 )
138 LOAD_FAST 25 ( x1 )
140 LOAD_FAST