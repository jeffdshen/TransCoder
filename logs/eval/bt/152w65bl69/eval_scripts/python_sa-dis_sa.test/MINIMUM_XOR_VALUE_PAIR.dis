{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    arr.sort ( ) ;\n    min_xor = 999999\n    val = 0\n    for i in range ( 0 , n - 1 ) :\n        for j in range ( i + 1 , n - 1 ) :\n            val = arr [ i ] ^ arr [ j ]\n            min_xor = min ( min_xor , val )\n    return min_xor\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([4, 5, 7, 10, 10, 11, 14, 19, 21, 24, 27, 27, 27, 28, 28, 28, 33, 34, 41, 42, 43, 48, 52, 53, 53, 59, 62, 64, 66, 71, 77, 78, 78, 79, 80, 82, 90, 97, 99, 99],34,),\n    ([-68, -58, 52, 88, 90, 66, -66, -84, -70, -64, 56, 42, 94, -10, 0, 80, 8, 28, -94, 36, 90, 56, 56, 80, -94, 50, 90, -28, -22, -2, -96, 74, -16, -14],17,),\n    ([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],9,),\n    ([57, 63, 11, 73, 60, 73, 25, 65, 39, 48, 31, 17, 23, 94, 10, 97, 42, 45, 83, 75, 97, 96],21,),\n    ([-92, -92, -90, -88, -84, -82, -66, -64, -64, -62, -44, -42, -40, -28, -22, -12, -4, -2, 0, 4, 16, 22, 28, 34, 54, 60, 72, 74, 78, 86, 94],18,),\n    ([1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0],36,),\n    ([2, 2, 6, 13, 16, 16, 17, 19, 19, 20, 22, 25, 27, 29, 34, 34, 34, 36, 38, 39, 42, 49, 49, 53, 59, 59, 71, 77, 79, 82, 83, 83, 84, 84, 86, 86, 87, 88, 93, 96],36,),\n    ([-14, 20, 36, 12, -54, -50, 92, -28, 44, -46, 6, 96, 82, 70, -20, 24, -96, -14, 46, -28, -46, -28, 22, -82, 36, -94, -48, -92, 96, 74, 14],20,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],39,),\n    ([50, 48, 94, 64, 60, 48, 79, 75, 77, 62, 33, 42, 22, 78, 32, 99, 27, 23, 76, 51, 34, 54, 70, 12, 19, 17, 13, 82, 96, 70, 4, 12, 5, 11, 23, 23, 18, 93, 38, 69],30,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def minXOR ( arr , n ) :\n    arr.sort ( ) ;\n    min_xor = 999999\n    val = 0\n    for i in range ( 0 , n - 1 ) :\n        for j in range ( i + 1 , n - 1 ) :\n            val = arr [ i ] ^ arr [ j ]\n            min_xor = min ( min_xor , val )\n    return min_xor\n"}
Disassembly of <code object minXOR at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( arr )
2 LOAD_METHOD 0 ( sort )
4 LOAD_CONST 1 ( 999999 )
6 LOAD_CONST 2 ( 999999 )
8 LOAD_CONST 3 ( 999999 )
10 LOAD_CONST 4 ( 999999 )
12 LOAD_CONST 5 ( 999999 )
14 LOAD_CONST 6 ( 999999 )
16 LOAD_CONST 7 ( 999999 )
18 LOAD_CONST 8 ( 999999 )
20 LOAD_CONST 9 ( 999999 )
22 LOAD_CONST 10 ( 999999 )
24 LOAD_CONST 11 ( 999999 )
26 LOAD_CONST 12 ( 999999 )
28 LOAD_CONST 13 ( 999999 )
30 LOAD_CONST 14 ( 999999 )
32 LOAD_CONST 15 ( 999999 )
34 LOAD_CONST 16 ( 999999 )
36 LOAD_CONST 17 ( 999999 )
38 LOAD_CONST 18 ( 999999 )
40 LOAD_CONST 19 ( 999999 )
42 LOAD_CONST 20 ( 999999 )
44 LOAD_CONST 21 ( 999999 )
46 LOAD_CONST 22 ( 999999 )
48 LOAD_CONST 23 ( 999999 )
50 LOAD_CONST 22 ( 999999 )
52 LOAD_CONST 24 ( 999999 )
54 LOAD_CONST 23 ( 999999 )
56 LOAD_CONST 23 ( 999999 )
58 LOAD_CONST 24 ( 999999 )
60 LOAD_CONST 25 ( 999999 )
62 LOAD_CONST 26 ( 999999 )
64 LOAD_CONST 25 ( 999999 )
66 LOAD_CONST 26 ( 999999 )
68 LOAD_CONST 27 ( 999999 )
70 LOAD_CONST 28 ( 999999 )
72 LOAD_CONST 29 ( 999999 )
74 LOAD_CONST 30 ( 999999 )
76 LOAD_CONST 29 ( 999999 )
78 LOAD_CONST 30 ( 999999 )
80 LOAD_CONST 28 ( 999999 )
82 LOAD_CONST 29 ( 999999 )
84 LOAD_CONST 30 ( 999999 )
86 LOAD_CONST 31 ( 999999 )
88 LOAD_CONST 30 ( 999999 )
90 LOAD_CONST 31 ( 999999 )
92 LOAD_CONST 32 ( 999999 )
94 LOAD_CONST 34 ( 999999 )
96 LOAD_CONST 33 ( 999999 )
98 LOAD_CONST 34 ( 999999 )
100 LOAD_CONST 35 ( 999999 )
102 LOAD_CONST 34 ( 999999 )
104 LOAD_CONST 35 ( 999999 )
106 LOAD_CONST 34 ( 999999 )
108 LOAD_CONST 35 ( 999999 )
110 LOAD_CONST 36 ( 999999 )
112 LOAD_CONST 37 ( 999999 )
114 LOAD_CONST 36 ( 999999 )
116 LOAD_CONST 37 ( 999999 )
118 LOAD_CONST 38 ( 999999 )
120 LOAD_CONST 40 ( 999999 )
122 LOAD_CONST 41 ( 999999 )
124 LOAD_CONST 40 (