{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    arr.sort ( )\n    a = 0 ; b = 0\n    for i in range ( n ) :\n        if ( i % 2 != 0 ) :\n            a = a * 10 + arr [ i ]\n        else :\n            b = b * 10 + arr [ i ]\n    return a + b\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([3, 4, 5, 10, 14, 16, 18, 42, 43, 43, 45, 46, 51, 52, 53, 58, 61, 66, 79, 81, 82, 84],19,),\n    ([48, -22, 60, 32, 48, -2, -76, -50, -26, 56, -86, 98, -30, -22, 82, -20, 58, 40, 76, -2, 82, -90, 8, -46, 22, 94],25,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],23,),\n    ([79, 45],1,),\n    ([-90, -68, -38, -34, -4, 6, 10, 28, 48, 52, 54, 68, 88, 90],11,),\n    ([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0],22,),\n    ([4, 8, 8, 23, 26, 27, 30, 42, 44, 55, 59, 64, 67, 69, 74, 77, 82, 82, 87, 96, 97],17,),\n    ([0, -18, -98, -36, -62, 0, -32, -98, 46, 72, -18, 30, -86, -42, -82, 2, -76, -64, -66, -48, -28, 52, -46, -76, 76, 10, 70, 4, 18, 94, 88, 80, -60, -36, 62, 96, -4, 88, 50],32,),\n    ([0, 0, 0, 0, 0, 0, 1, 1, 1, 1],6,),\n    ([8, 71, 75, 58, 97, 24, 56, 98, 71, 69, 32, 64, 54, 96, 69, 22, 7, 47, 45, 68, 17, 36, 90, 9, 71, 86, 16, 61, 53, 63, 9, 74, 38, 87, 14, 86, 42, 42, 14, 43, 58, 82, 72, 73, 32],25,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def solve ( arr , n ) :\n    arr.sort ( )\n    a = 0 ; b = 0\n    for i in range ( n ) :\n        if ( i % 2 != 0 ) :\n            a = a * 10 + arr [ i ]\n        else :\n            b = b * 10 + arr [ i ]\n    return a + b\n"}
Disassembly of <code object solve at 0x7f8169feb660, file "<dis>", line 533>:
534 0 LOAD_FAST 0 ( arr )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 STORE_FAST 1 ( n )

535 8 LOAD_FAST 1 ( n )
10 LOAD_CONST 2 ( 1 )
12 BINARY_SUBSCR
14 LOAD_FAST 1 ( n )
16 LOAD_CONST 3 ( 2 )
18 BINARY_SUBSCR
20 LOAD_FAST 1 ( n )
22 LOAD_CONST 4 ( 3 )
24 BINARY_SUBSCR
26 LOAD_FAST 1 ( n )
28 LOAD_CONST 5 ( 1 )
30 BINARY_SUBSCR
32 BINARY_SUBTRACT
34 LOAD_FAST 1 ( n )
36 LOAD_CONST 6 ( 2 )
38 BINARY_SUBSCR
40 BINARY_SUBTRACT
42 LOAD_FAST 1 ( n )
44 LOAD_CONST 7 ( 2 )
46 BINARY_SUBSCR
48 BINARY_SUBTRACT
50 BINARY_SUBTRACT
52 LOAD_FAST 1 ( n )
54 LOAD_CONST 8 ( 2 )
56 BINARY_SUBSCR
58 BINARY_SUBTRACT
60 BINARY_SUBTRACT
62 LOAD_FAST 1 ( n )
64 LOAD_CONST 9 ( 2 )
66 BINARY_SUBSCR
68 BINARY_SUBTRACT
70 BINARY_SUBTRACT
72 BINARY_SUBTRACT
74 LOAD_FAST 1 ( n )
76 LOAD_CONST 10 ( 2 )
78 BINARY_SUBSCR
80 BINARY_SUBTRACT
82 BINARY_SUBTRACT
84 LOAD_FAST 1 ( n )
86 LOAD_CONST 11 ( 3 )
88 BINARY_SUBSCR
90 BINARY_SUBTRACT
92 BINARY_SUBTRACT
94 BINARY_SUBTRACT
96 BINARY_SUBTRACT
98 LOAD_FAST 1 ( n )
100 LOAD_CONST 12 ( 2 )
102 BINARY_SUBSCR
104 BINARY_SUBTRACT
106 BINARY_SUBTRACT
108 BINARY_SUBTRACT
110 LOAD_FAST 1 ( n )
112 BINARY_SUBTRACT
114 BINARY_SUBTRACT
116 BINARY_SUBTRACT
118 BINARY_SUBTRACT
120 LOAD_FAST 1 ( n )
122 BINARY_SUBTRACT
124 BINARY_SUBTRACT
126 BINARY_SUBTRACT
128 LOAD_FAST 1 ( n )
130 LOAD_CONST 12 ( 2 )
132 BINARY_SUBTRACT
134 BINARY_SUBTRACT
136 BINARY_SUBTRACT
138 BINARY_SUBTRACT
140 BINARY_SUBTRACT
142 BINARY_SUBTRACT
144 BINARY_SUBTRACT
146 BINARY_SUBTRACT
148 LOAD_FAST 1 ( n )
150 BINARY_SUBTRACT
152 BINARY_SUBTRACT
154 BINARY_SUBTRACT
156 BINARY_SUBTRACT
158 BINARY_SUBTRACT
160 LOAD_FAST 1 ( n )
162 BINARY_SUBTRACT
164 BINARY_SUBTRACT
166 BINARY_SUBTRACT
168 BINARY_SUBTRACT
164 LOAD_FAST 1 ( n )
166 BINARY_SUBTRACT
168 BINARY_SUBTRACT
170 BINARY_SUBTRACT
172 BINARY_SUBTRACT

535 174 LOAD_FAST 1 ( n )
176 LOAD_CONST 13 ( 1 )

536 178 LOAD_FAST 1 ( n )

537 180 LOAD_FAST 1 ( n )
182 LOAD_CONST 14 ( 2 )
184 BINARY_SUBTRACT

538 186 LOAD_FAST 1 ( n )

539 188 LOAD_FAST 1 ( n )

540 190 LOAD_FAST 1 ( n )

539 192 LOAD_FAST 1 ( n )

542 194 LOAD_FAST 1 ( n )

543 196 LOAD_CONST 15 ( 2 )
