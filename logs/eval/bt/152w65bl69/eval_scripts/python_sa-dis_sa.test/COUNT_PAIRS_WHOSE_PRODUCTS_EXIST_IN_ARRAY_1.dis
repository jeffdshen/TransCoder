{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    result = 0\n    Hash = set ( )\n    for i in range ( n ) :\n        Hash.add ( arr [ i ] )\n    for i in range ( n ) :\n        for j in range ( i + 1 , n ) :\n            product = arr [ i ] * arr [ j ]\n            if product in ( Hash ) :\n                result += 1\n    return result\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([7, 10, 17, 17, 18, 20, 27, 28, 29, 29, 31, 32, 41, 43, 45, 46, 63, 66, 69, 69, 70, 75, 87, 95],17,),\n    ([-60],0,),\n    ([0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],9,),\n    ([52, 83, 36, 57, 93, 11, 32, 91, 52],8,),\n    ([-98, -94, -90, -88, -76, -76, -64, -62, -60, -50, -46, -32, -24, -22, -20, -16, -4, -2, 6, 10, 20, 28, 30, 32, 34, 38, 40, 42, 54, 64, 72, 76, 82, 82, 86, 92, 92, 98, 98],22,),\n    ([0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0],42,),\n    ([2, 3, 10, 12, 15, 23, 26, 28, 29, 30, 31, 31, 33, 33, 35, 41, 45, 48, 50, 50, 53, 53, 56, 65, 66, 67, 68, 68, 72, 72, 75, 76, 79, 82, 90, 94, 94, 95, 97, 99],35,),\n    ([14, 36, -54, -54],3,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],12,),\n    ([5, 69, 37, 80, 21, 98, 70, 70, 74, 95, 6, 67, 44, 55, 52, 89, 84, 99, 65, 52],12,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countPairs ( arr , n ) :\n    result = 0\n    Hash = set ( )\n    for i in range ( n ) :\n        Hash.add ( arr [ i ] )\n    for i in range ( n ) :\n        for j in range ( i + 1 , n ) :\n            product = arr [ i ] * arr [ j ]\n            if product in ( Hash ) :\n                result += 1\n    return result\n"}
Disassembly of <code object countPairs at 0x7f816a683c00, file "<dis>", line 64>:
65 0 LOAD_GLOBAL 0 ( Hash )
2 CALL_FUNCTION 0
4 STORE_FAST 1 ( n )

66 6 LOAD_FAST 1 ( n )
8 LOAD_CONST 1 ( 0 )
10 BINARY_SUBSCR
12 STORE_FAST 2 ( count )

67 14 SETUP_LOOP 44 ( to 54 )
16 LOAD_GLOBAL 1 ( range )
18 LOAD_FAST 0 ( arr )
20 CALL_FUNCTION 1
22 GET_ITER
>> 24 FOR_ITER 34 ( to 52 )
26 STORE_FAST 3 ( i )

68 28 LOAD_FAST 2 ( count )
30 LOAD_CONST 2 ( 1 )
32 BINARY_SUBTRACT
34 LOAD_FAST 1 ( n )
36 LOAD_CONST 3 ( 2 )
38 BINARY_POWER
40 BINARY_SUBTRACT
42 LOAD_FAST 1 ( n )
44 LOAD_CONST 4 ( 2 )
46 BINARY_POWER
48 BINARY_MULTIPLY
50 LOAD_FAST 1 ( n )
52 LOAD_CONST 5 ( 3 )
54 BINARY_POWER
56 BINARY_MULTIPLY
58 BINARY_ADD
60 LOAD_FAST 1 ( n )
62 LOAD_CONST 6 ( 2 )
64 BINARY_POWER
66 BINARY_MULTIPLY
68 BINARY_ADD
70 STORE_FAST 4 ( i )

69 72 LOAD_FAST 2 ( count )
74 LOAD_CONST 7 ( 1 )
76 BINARY_SUBTRACT
78 LOAD_FAST 1 ( n )
80 LOAD_CONST 8 ( 2 )
82 BINARY_POWER
84 BINARY_MULTIPLY
86 BINARY_ADD
88 LOAD_FAST 1 ( n )
90 LOAD_CONST 9 ( 2 )
92 BINARY_POWER
94 BINARY_MULTIPLY
96 BINARY_ADD
98 LOAD_FAST 1 ( n )
100 LOAD_CONST 10 ( 2 )
102 BINARY_POWER
104 BINARY_MULTIPLY
106 BINARY_ADD
108 LOAD_FAST 1 ( n )
110 LOAD_CONST 11 ( 2 )
112 BINARY_POWER
114 BINARY_ADD
116 LOAD_FAST 1 ( n )
118 LOAD_CONST 12 ( 2 )
120 BINARY_POWER
122 BINARY_ADD
124 LOAD_FAST 1 ( n )
126 LOAD_CONST 13 ( 2 )
128 BINARY_POWER
130 BINARY_MULTIPLY
132 BINARY_ADD
134 LOAD_FAST 1 ( n )
136 LOAD_CONST 14 ( 2 )
138 BINARY_POWER
140 BINARY_MULTIPLY
142 BINARY_ADD
144 BINARY_ADD
146 LOAD_FAST 1 ( n )
148 LOAD_CONST 15 ( 2 )
150 BINARY_POWER
152 BINARY_MULTIPLY
154 BINARY_ADD
156 LOAD_FAST 1 ( n )
158 LOAD_CONST 16 ( 2 )
160 BINARY_POWER
162 BINARY_ADD
164 LOAD_FAST 1 ( n )
166 BINARY_MULTIPLY
168 BINARY_ADD
170 LOAD_FAST 1 ( n )
172 BINARY_MULTIPLY
174 BINARY_ADD
176 BINARY_ADD
178 CALL_FUNCTION 1
180 POP_TOP

67 >> 94 LOAD_FAST 1 ( n )
96 RETURN_VALUE

