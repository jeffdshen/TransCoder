{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( num ) :\n    series = [ 1 , 3 , 2 , - 1 , - 3 , - 2 ] ;\n    series_index = 0 ;\n    result = 0 ;\n    for i in range ( ( len ( num ) - 1 ) , - 1 , - 1 ) :\n        digit = ord ( num [ i ] ) - 48 ;\n        result += digit * series [ series_index ] ;\n        series_index = ( series_index + 1 ) % 6 ;\n        result %= 7 ;\n    if ( result < 0 ) :\n        result = ( result + 7 ) % 7 ;\n    return result ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ('K',),\n    ('850076',),\n    ('00111',),\n    ('X',),\n    ('1',),\n    ('10010001100',),\n    (' pgPeLz',),\n    ('53212456821275',),\n    ('101',),\n    ('V',)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def remainderWith7 ( num ) :\n    series = [ 1 , 3 , 2 , - 1 , - 3 , - 2 ] ;\n    series_index = 0 ;\n    result = 0 ;\n    for i in range ( ( len ( num ) - 1 ) , - 1 , - 1 ) :\n        digit = ord ( num [ i ] ) - 48 ;\n        result += digit * series [ series_index ] ;\n        series_index = ( series_index + 1 ) % 6 ;\n        result %= 7 ;\n    if ( result < 0 ) :\n        result = ( result + 7 ) % 7 ;\n    return result ;\n"}
Disassembly of <code object remainderWith7 at 0x7f816a6e4b70, file "<dis>", line 7>:
8 0 LOAD_CONST 1 ( 1 )
2 LOAD_CONST 2 ( 2 )
4 LOAD_CONST 3 ( 3 )
6 LOAD_CONST 4 ( 4 )
8 LOAD_CONST 5 ( 6 )
10 LOAD_CONST 6 ( 7 )
12 LOAD_CONST 7 ( 8 )
14 LOAD_CONST 8 ( 10 )
16 LOAD_CONST 9 ( 4 )
18 LOAD_CONST 10 ( 9 )
20 LOAD_CONST 7 ( 8 )
22 LOAD_CONST 10 ( 9 )
24 LOAD_CONST 11 ( 10 )
26 LOAD_CONST 12 ( 11 )
28 LOAD_CONST 12 ( 12 )
30 LOAD_CONST 13 ( 12 )
32 LOAD_CONST 14 ( 13 )
34 LOAD_CONST 15 ( 14 )
36 LOAD_CONST 16 ( 9 )
38 LOAD_CONST 17 ( 10 )
40 LOAD_CONST 18 ( 11 )
42 LOAD_CONST 18 ( 12 )
44 LOAD_CONST 19 ( 13 )
46 LOAD_CONST 20 ( 14 )
48 LOAD_CONST 21 ( 16 )
50 LOAD_CONST 22 ( 15 )
52 LOAD_CONST 22 ( 14 )
54 LOAD_CONST 23 ( 16 )
56 LOAD_CONST 22 ( 15 )
58 LOAD_CONST 24 ( 14 )
60 LOAD_CONST 23 ( 16 )
62 LOAD_CONST 22 ( 15 )
64 LOAD_CONST 24 ( 14 )
66 LOAD_CONST 23 ( 16 )
68 LOAD_CONST 24 ( 17 )
70 LOAD_CONST 26 ( 15 )
72 LOAD_CONST 25 ( 16 )
74 LOAD_CONST 26 ( 17 )
76 LOAD_CONST 28 ( 17 )
78 LOAD_CONST 30 ( 16 )
80 LOAD_CONST 29 ( 16 )
82 LOAD_CONST 30 ( 17 )
84 LOAD_CONST 28 ( 18 )
86 LOAD_CONST 30 ( 19 )
88 LOAD_CONST 29 ( 20 )
90 LOAD_CONST 30 ( 19 )
92 LOAD_CONST 30 ( 20 )
94 LOAD_CONST 31 31 31 )
96 LOAD_CONST 30 ( 19 )
98 LOAD_CONST 31 ( 20 )
100 LOAD_CONST 32 ( 19 )
102 LOAD_CONST 34 ( 20 )
104 LOAD_CONST 36 ( 19 )
106 LOAD_CONST 36 ( 20 )
108 LOAD_CONST 37 ( 20 )
110 LOAD_CONST 36 ( 21 )
112 LOAD_CONST 37 ( 20 )
114 LOAD_CONST 36 ( 21 )
116 LOAD_CONST 36 ( 20 )
118 LOAD_CONST 37 ( 21 )
120 LOAD_CONST 36 ( 20 )
122 LOAD_CONST 37 ( 22 )
124 LOAD_CONST 36 ( 20 )
126 LOAD_CONST 37 ( 20 )
128 LOAD_CONST 36 ( 21 )
130 LOAD_CONST 37 ( 20 )
132 LOAD_CONST 38 ( 21 )
134 LOAD_CONST 38 ( 20 )
136 LOAD_CONST 37 ( 21 )
138 LOAD_CONST 38 ( 20 )
140 LOAD_CONST 1 ( 1 )