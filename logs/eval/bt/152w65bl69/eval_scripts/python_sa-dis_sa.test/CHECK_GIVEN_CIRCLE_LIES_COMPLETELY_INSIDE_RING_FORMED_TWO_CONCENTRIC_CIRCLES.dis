{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( r , R , r1 , x1 , y1 ) :\n    dis = int ( math.sqrt ( x1 * x1 + y1 * y1 ) )\n    return ( dis - r1 >= R and dis + r1 <= r )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (8,4,2,6,0,),\n    (400,1,10,74,38,),\n    (1,400,10,74,38,),\n    (61,40,2,50,0,),\n    (60,49,68,77,71,),\n    (88,10,69,71,26,),\n    (60,79,92,29,38,),\n    (26,88,75,84,10,),\n    (33,65,57,21,61,),\n    (70,57,77,52,87,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def checkcircle ( r , R , r1 , x1 , y1 ) :\n    dis = int ( math.sqrt ( x1 * x1 + y1 * y1 ) )\n    return ( dis - r1 >= R and dis + r1 <= r )\n"}
Disassembly of <code object checkcircle at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 1 ( R )
2 LOAD_CONST 1 ( 2 )
4 BINARY_MULTIPLY
6 LOAD_FAST 0 ( r )
8 LOAD_CONST 2 ( - 1 )
10 BINARY_MULTIPLY
12 LOAD_FAST 0 ( r )
14 LOAD_CONST 3 ( - 1 )
16 BINARY_MULTIPLY
18 LOAD_FAST 0 ( r )
20 LOAD_CONST 4 ( - 1 )
22 BINARY_MULTIPLY
24 BINARY_ADD
26 LOAD_CONST 5 ( - 1 )
28 BINARY_MULTIPLY
30 BINARY_ADD
32 LOAD_CONST 6 ( - 1 )
34 BINARY_MULTIPLY
36 LOAD_FAST 0 ( r )
38 LOAD_CONST 7 ( - 1 )
40 BINARY_MULTIPLY
42 BINARY_ADD
44 LOAD_FAST 0 ( r )
46 LOAD_CONST 8 ( - 1 )
48 BINARY_MULTIPLY
50 BINARY_ADD
52 LOAD_FAST 0 ( r )
54 LOAD_CONST 9 ( - 1 )
56 BINARY_MULTIPLY
58 BINARY_ADD
60 BINARY_MULTIPLY
62 BINARY_ADD
64 LOAD_FAST 0 ( r )
66 LOAD_CONST 10 ( - 1 )
68 BINARY_MULTIPLY
70 BINARY_ADD
72 LOAD_CONST 11 ( - 1 )
74 BINARY_MULTIPLY
76 BINARY_ADD
78 LOAD_FAST 0 ( r )
80 LOAD_CONST 12 ( - 1 )
82 BINARY_MULTIPLY
84 BINARY_ADD
86 LOAD_CONST 13 ( - 1 )
88 BINARY_ADD
90 LOAD_CONST 14 ( - 1 )
92 BINARY_ADD
94 LOAD_CONST 15 ( - 1 )
96 BINARY_ADD
98 LOAD_CONST 16 ( - 1 )
100 BINARY_ADD
102 LOAD_CONST 17 ( - 1 )
104 BINARY_ADD
106 BINARY_ADD
108 LOAD_FAST 0 ( r )
110 LOAD_CONST 12 ( - 1 )
112 BINARY_ADD
114 LOAD_CONST 14 ( - 1 )
116 BINARY_ADD
118 BINARY_ADD
120 LOAD_CONST 15 ( - 1 )
122 BINARY_ADD
124 BINARY_ADD
126 LOAD_FAST 0 ( r )
128 LOAD_CONST 16 ( - 1 )
130 BINARY_ADD
132 BINARY_ADD
134 LOAD_CONST 17 ( - 1 )
136 BINARY_ADD
138 LOAD_CONST 18 ( - 1 )
140 BINARY_ADD
142 LOAD_CONST 19 ( - 1 )
144 BINARY_ADD
146 BINARY_ADD
148 LOAD_CONST 18 ( - 1 )
150 BINARY_ADD
152 BINARY_ADD
154 BINARY_MULTIPLY
156 BINARY_ADD

29 158 LOAD_FAST 0 ( r )
160 LOAD_CONST 16 ( - 1 )
162 BINARY_ADD
164 BINARY_ADD
166 LOAD_CONST 17 ( - 1 )
168 BINARY_ADD
170 BINARY_MULTIPLY
172 BINARY_ADD
174 LOAD_FAST 0 ( r )
176 LOAD_CONST 18 ( - 1 )
174 BINARY_ADD
176 BINARY_ADD
178 LOAD_CONST 19 ( - 1 )
180 BINARY_ADD
182 BINARY_ADD
180 LOAD_CONST 20 ( - 1 )
182 BINARY_ADD
184 LOAD_FAST 0 ( r )
