{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    if ( n == 0 or n == 1 ) :\n        return n\n    f1 , f2 , f3 = 0 , 1 , 1\n    while ( f3 <= n ) :\n        f1 = f2 ;\n        f2 = f3 ;\n        f3 = f1 + f2 ;\n    return f2 ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (54,),\n    (71,),\n    (64,),\n    (71,),\n    (96,),\n    (43,),\n    (70,),\n    (94,),\n    (95,),\n    (69,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def nearestSmallerEqFib ( n ) :\n    if ( n == 0 or n == 1 ) :\n        return n\n    f1 , f2 , f3 = 0 , 1 , 1\n    while ( f3 <= n ) :\n        f1 = f2 ;\n        f2 = f3 ;\n        f3 = f1 + f2 ;\n    return f2 ;\n"}
Disassembly of <code object nearestSmallEqFib at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 1 )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 12

27 8 LOAD_FAST 0 ( n )
10 LOAD_CONST 2 ( 2 )
12 COMPARE_OP 2 ( == )
14 POP_JUMP_IF_FALSE 28

28 >> 16 LOAD_CONST 3 ( 0 )
18 STORE_FAST 1 ( n )

29 20 LOAD_FAST 1 ( n )
22 LOAD_CONST 1 ( 1 )
24 COMPARE_OP 2 ( == )
26 POP_JUMP_IF_FALSE 28

30 28 LOAD_CONST 3 ( 0 )
30 STORE_FAST 1 ( n )

31 32 LOAD_FAST 1 ( n )
34 LOAD_CONST 4 ( 2 )
36 COMPARE_OP 2 ( == )
38 POP_JUMP_IF_FALSE 44

32 40 LOAD_CONST 3 ( 0 )
42 STORE_FAST 1 ( n )

33 44 LOAD_FAST 1 ( n )
46 LOAD_CONST 5 ( 1 )
48 COMPARE_OP 2 ( == )
50 POP_JUMP_IF_FALSE 44

34 52 LOAD_CONST 3 ( 0 )
54 STORE_FAST 1 ( n )

35 56 LOAD_FAST 1 ( n )
58 LOAD_CONST 6 ( 2 )
60 COMPARE_OP 2 ( == )
62 POP_JUMP_IF_FALSE 44

36 64 LOAD_FAST 1 ( n )
66 LOAD_CONST 7 ( 2 )
68 COMPARE_OP 2 ( == )
70 POP_JUMP_IF_FALSE 80

37 72 LOAD_CONST 3 ( 0 )
74 STORE_FAST 1 ( n )
76 JUMP_FORWARD 2 ( to 80 )

39 >> 78 LOAD_CONST 3 ( 0 )
80 STORE_FAST 1 ( n )

40 >> 82 LOAD_FAST 1 ( n )
84 LOAD_CONST 8 ( 2 )
86 COMPARE_OP 2 ( == )
88 POP_JUMP_IF_FALSE 80

41 90 LOAD_CONST 3 ( 0 )
92 STORE_FAST 1 ( n )

42 >> 94 LOAD_FAST 1 ( n )
96 LOAD_CONST 9 ( 2 )
98 COMPARE_OP 2 ( == )
100 POP_JUMP_IF_FALSE 80

43 102 LOAD_CONST 3 ( 0 )
104 STORE_FAST 1 ( n )

44 106 LOAD_FAST 1 ( n )
108 LOAD_CONST 10 ( 2 )
110 COMPARE_OP 2 ( == )
112 POP_JUMP_IF_FALSE 114

45 114 LOAD_FAST 1 ( n )
116 LOAD_CONST 11 ( 1 )
118 COMPARE_OP 2 ( == )
120 POP_JUMP_IF_FALSE 130

46 122 LOAD_CONST 3 ( 0 )
124 STORE_FAST 1 ( n )

47 >> 126 LOAD_FAST 1 ( n )
128 LOAD_CONST 12 ( 2 )
130 COMPARE_OP 2 ( == )
132 POP_JUMP_IF_FALSE 130

48 134 LOAD_FAST 1 ( n )
136 RETURN_VALUE

50