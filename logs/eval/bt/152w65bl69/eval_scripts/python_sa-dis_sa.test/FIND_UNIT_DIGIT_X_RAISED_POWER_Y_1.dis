{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( x , y ) :\n    x = x % 10\n    if y != 0 :\n        y = y % 4 + 4\n    return ( ( ( int ) ( math.pow ( x , y ) ) ) % 10 )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (37,17,),\n    (70,52,),\n    (26,23,),\n    (9,96,),\n    (82,71,),\n    (95,36,),\n    (43,40,),\n    (7,27,),\n    (19,56,),\n    (49,28,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def unitnumber ( x , y ) :\n    x = x % 10\n    if y != 0 :\n        y = y % 4 + 4\n    return ( ( ( int ) ( math.pow ( x , y ) ) ) % 10 )\n"}
Disassembly of <code object unitnumber at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 1 ( y )
2 LOAD_FAST 0 ( self )
4 COMPARE_OP 3 ( != )
6 POP_JUMP_IF_FALSE 12

27 8 LOAD_GLOBAL 0 ( int )
10 LOAD_FAST 1 ( y )
12 CALL_FUNCTION 1
14 LOAD_CONST 1 ( 10 )
16 COMPARE_OP 3 ( != )
18 POP_JUMP_IF_FALSE 28

28 20 LOAD_GLOBAL 1 ( int )
22 LOAD_FAST 1 ( y )
24 CALL_FUNCTION 1
26 LOAD_CONST 2 ( 1 )
28 COMPARE_OP 3 ( != )
30 POP_JUMP_IF_FALSE 28

29 32 LOAD_FAST 1 ( y )
34 LOAD_FAST 0 ( self )
36 COMPARE_OP 3 ( != )
38 POP_JUMP_IF_FALSE 44
40 LOAD_FAST 1 ( y )
42 LOAD_FAST 0 ( self )
44 COMPARE_OP 3 ( != )
46 POP_JUMP_IF_FALSE 44

30 48 LOAD_FAST 1 ( y )
50 LOAD_FAST 0 ( self )
52 COMPARE_OP 3 ( != )
54 POP_JUMP_IF_FALSE 44

31 56 LOAD_FAST 1 ( y )
58 LOAD_FAST 0 ( self )
60 COMPARE_OP 3 ( != )
62 POP_JUMP_IF_FALSE 44

32 64 LOAD_FAST 1 ( y )
66 LOAD_FAST 0 ( self )
68 COMPARE_OP 3 ( != )
70 POP_JUMP_IF_FALSE 44

33 72 LOAD_FAST 1 ( y )
74 LOAD_FAST 0 ( self )
76 COMPARE_OP 3 ( != )
78 POP_JUMP_IF_FALSE 44

34 80 LOAD_FAST 1 ( y )
82 LOAD_FAST 0 ( self )
84 COMPARE_OP 3 ( != )
86 POP_JUMP_IF_FALSE 44

35 88 LOAD_FAST 1 ( y )
90 LOAD_FAST 0 ( self )
92 COMPARE_OP 3 ( != )
94 POP_JUMP_IF_FALSE 44

36 >> 96 LOAD_FAST 1 ( y )
98 LOAD_FAST 0 ( self )
100 COMPARE_OP 3 ( != )
102 POP_JUMP_IF_FALSE 44

37 104 LOAD_FAST 1 ( y )
106 LOAD_FAST 0 ( self )
108 COMPARE_OP 3 ( != )
110 POP_JUMP_IF_FALSE 112

38 >> 112 LOAD_FAST 1 ( y )
114 LOAD_FAST 0 ( self )
116 COMPARE_OP 3 ( != )
118 POP_JUMP_IF_FALSE 112

39 120 LOAD_FAST 1 ( y )
122 LOAD_FAST 0 ( self )
124 COMPARE_OP 3 ( != )
126 POP_JUMP_IF_FALSE 128
128 LOAD_FAST 1 ( y )
130 LOAD_FAST 0 ( self )
132 COMPARE_OP 3 ( != )
134 POP_JUMP_IF_FALSE 130
136 LOAD_FAST 1 ( y )
138 LOAD_FAST 0 ( self )
140 COMPARE_OP 3 ( != )
142 POP_JUMP_IF_FALSE 146

40 144 LOAD_FAST 1 ( y )
146 RETURN_VALUE

42 >> 148 LOAD_FAST 1 ( y )
150