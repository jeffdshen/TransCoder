{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( num ) :\n    result = 0\n    i = 2\n    while i <= ( math.sqrt ( num ) ) :\n        if ( num % i == 0 ) :\n            if ( i == ( num / i ) ) :\n                result = result + i ;\n            else :\n                result = result + ( i + num / i ) ;\n        i = i + 1\n    return ( result + 1 ) ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (2,),\n    (57,),\n    (28,),\n    (43,),\n    (38,),\n    (29,),\n    (45,),\n    (47,),\n    (44,),\n    (3,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def divSum ( num ) :\n    result = 0\n    i = 2\n    while i <= ( math.sqrt ( num ) ) :\n        if ( num % i == 0 ) :\n            if ( i == ( num / i ) ) :\n                result = result + i ;\n            else :\n                result = result + ( i + num / i ) ;\n        i = i + 1\n    return ( result + 1 ) ;\n"}
Disassembly of <code object divSum at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( i )

27 4 LOAD_FAST 1 ( i )
6 LOAD_CONST 2 ( 1 )
8 COMPARE_OP 2 ( == )
10 POP_JUMP_IF_FALSE 20

28 12 LOAD_CONST 1 ( 0 )
14 STORE_FAST 1 ( i )

29 >> 16 LOAD_FAST 1 ( i )
18 LOAD_CONST 3 ( 1 )
20 COMPARE_OP 2 ( == )
22 POP_JUMP_IF_FALSE 28

30 24 LOAD_CONST 1 ( 0 )
26 STORE_FAST 1 ( i )

31 28 LOAD_FAST 1 ( i )
30 LOAD_CONST 4 ( - 1 )
32 COMPARE_OP 2 ( == )
34 POP_JUMP_IF_FALSE 44

32 36 LOAD_CONST 1 ( 0 )
38 STORE_FAST 1 ( i )

33 >> 40 LOAD_FAST 1 ( i )
42 LOAD_CONST 5 ( - 1 )
44 COMPARE_OP 2 ( == )
46 POP_JUMP_IF_FALSE 52

34 48 LOAD_CONST 1 ( 0 )
50 STORE_FAST 1 ( i )

35 52 LOAD_FAST 1 ( i )
54 LOAD_CONST 6 ( - 1 )
56 COMPARE_OP 2 ( == )
58 POP_JUMP_IF_FALSE 60

36 60 LOAD_CONST 1 ( 0 )
62 STORE_FAST 1 ( i )

37 64 LOAD_FAST 1 ( i )
66 LOAD_CONST 7 ( - 1 )
68 COMPARE_OP 2 ( == )
70 POP_JUMP_IF_FALSE 76
72 LOAD_CONST 1 ( 0 )
74 STORE_FAST 1 ( i )

38 >> 76 LOAD_FAST 1 ( i )
78 LOAD_CONST 8 ( - 1 )
80 COMPARE_OP 2 ( == )
82 POP_JUMP_IF_FALSE 78
84 LOAD_FAST 1 ( i )
86 LOAD_CONST 9 ( - 1 )
88 COMPARE_OP 2 ( == )
90 POP_JUMP_IF_FALSE 78

39 92 LOAD_FAST 1 ( i )
94 LOAD_CONST 10 ( - 1 )
96 COMPARE_OP 2 ( == )
98 POP_JUMP_IF_FALSE 78

40 100 LOAD_FAST 1 ( i )
102 LOAD_CONST 11 ( - 1 )
104 COMPARE_OP 2 ( == )
106 POP_JUMP_IF_FALSE 78

41 108 LOAD_FAST 1 ( i )
110 LOAD_CONST 12 ( - 1 )
112 COMPARE_OP 2 ( == )
114 POP_JUMP_IF_FALSE 130

42 116 LOAD_FAST 1 ( i )
118 LOAD_CONST 12 ( - 1 )
120 COMPARE_OP 2 ( == )
122 POP_JUMP_IF_FALSE 130

43 124 LOAD_FAST 1 ( i )
126 LOAD_CONST 13 ( - 1 )
128 COMPARE_OP 2 ( == )
130 POP_JUMP_IF_FALSE 130

44 132 LOAD_FAST 1 ( i )
134 LOAD_CONST 6 ( - 1 )
136 COMPARE_OP 2 ( == )
138 POP_JUMP_IF_FALSE 130