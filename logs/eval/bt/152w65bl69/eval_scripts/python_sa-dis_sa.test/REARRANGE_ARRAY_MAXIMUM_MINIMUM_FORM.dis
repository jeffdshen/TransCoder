{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    temp = n * [ None ]\n    small , large = 0 , n - 1\n    flag = True\n    for i in range ( n ) :\n        if flag is True :\n            temp [ i ] = arr [ large ]\n            large -= 1\n        else :\n            temp [ i ] = arr [ small ]\n            small += 1\n        flag = bool ( 1 - flag )\n    for i in range ( n ) :\n        arr [ i ] = temp [ i ]\n    return arr\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([6, 8, 10, 11, 23, 25, 26, 34, 34, 37, 46, 51, 53, 56, 57, 57, 58, 62, 63, 68, 76, 77, 79, 80, 83, 85, 86, 88, 88, 93],25,),\n    ([-82, 66, -48, -56, -4, -48, 26, -66, 76, -22, 58, -12, -82, -90, 76, 94, 84, -16, -14, 0, 44, -28, 64, 54, 34, -76, 30, -68, 66, 44, 92, -76, 6, -14, -16, -36, -2, 28, -94, 72, -34, 38, -76, -32, 58, -98],39,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],14,),\n    ([12, 52, 67, 11, 17, 66, 25, 62, 98, 77, 6, 34, 13, 33, 48, 55, 51, 4, 4, 72, 1, 59, 80, 87, 61, 40, 1, 21, 9, 7, 19, 66, 78, 88, 57, 13, 54, 69, 72, 93, 32, 98, 85, 90, 56, 35, 70],34,),\n    ([-94, -82, -62, -48, -44, -18, -12, -12, 22, 46, 94],5,),\n    ([1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0],24,),\n    ([5, 38, 84, 86, 89, 96],4,),\n    ([-68, 80, 96, 34, -40, -24, 34, -32, 0, -50, -44, 54, 66, -2, -26, -74, -64, -70, -76, -98, -20, 82, 82, -66, -42, -64],22,),\n    ([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],9,),\n    ([13, 46, 67, 90, 7, 88, 25, 31, 4, 91, 54, 68, 30, 70, 19, 26, 82, 12, 73, 42, 52, 41],19,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def rearrange ( arr , n ) :\n    temp = n * [ None ]\n    small , large = 0 , n - 1\n    flag = True\n    for i in range ( n ) :\n        if flag is True :\n            temp [ i ] = arr [ large ]\n            large -= 1\n        else :\n            temp [ i ] = arr [ small ]\n            small += 1\n        flag = bool ( 1 - flag )\n    for i in range ( n ) :\n        arr [ i ] = temp [ i ]\n    return arr\n"}
Disassembly of <code object rearrange at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 1 ( n )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 STORE_FAST 2 ( n )

27 8 LOAD_FAST 2 ( n )
10 LOAD_CONST 2 ( 1 )
12 BINARY_SUBSCR
14 STORE_FAST 3 ( n )

28 16 LOAD_FAST 0 ( arr )
18 LOAD_CONST 3 ( 1 )
20 BINARY_SUBSCR
22 STORE_FAST 4 ( n )

29 24 LOAD_FAST 1 ( n )
26 LOAD_CONST 4 ( 1 )
28 BINARY_SUBSCR
30 LOAD_CONST 5 ( 1 )
32 BINARY_SUBSCR
34 LOAD_CONST 6 ( 2 )
36 BINARY_SUBSCR
38 STORE_FAST 5 ( n )

30 40 LOAD_FAST 0 ( arr )
42 LOAD_CONST 7 ( 1 )
44 BINARY_SUBSCR
46 LOAD_CONST 8 ( 2 )
48 BINARY_SUBSCR
50 LOAD_CONST 9 ( 1 )
52 BINARY_SUBSCR
54 LOAD_CONST 10 ( 2 )
56 BINARY_SUBSCR
58 LOAD_CONST 11 ( 3 )
60 BINARY_SUBSCR
62 LOAD_CONST 12 ( '                                                                                                                                                                                                                                                                                                                       