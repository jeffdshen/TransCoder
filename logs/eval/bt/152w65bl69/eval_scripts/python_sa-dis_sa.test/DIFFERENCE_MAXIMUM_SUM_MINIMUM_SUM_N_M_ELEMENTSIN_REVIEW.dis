{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n , m ) :\n    max = 0 ; min = 0\n    arr.sort ( ) ;\n    j = n - 1\n    for i in range ( m ) :\n        min += arr [ i ]\n        max += arr [ j ]\n        j = j - 1\n    return ( max - min )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([2, 3, 6, 16, 21, 22, 23, 27, 27, 28, 29, 29, 31, 31, 37, 37, 38, 40, 41, 43, 51, 52, 53, 55, 55, 56, 57, 63, 67, 67, 67, 72, 75, 79, 82, 84, 91, 92, 93, 96, 96, 97],21,25,),\n    ([58, -62, 24, -10, -30, -92, -50, -32, 54, -18, 94, -14, -40, -16, 48],8,12,),\n    ([0, 0],1,1,),\n    ([7, 51, 6, 71, 10, 29, 49, 63, 77, 13, 13, 56, 65, 34, 76, 16, 84, 2, 89, 83, 65, 1, 5, 99, 11, 59, 71, 54, 17, 9, 11, 48, 2, 65, 62, 77, 29, 80, 97, 83, 44, 91, 4, 44, 21, 12, 24],31,34,),\n    ([-90, -58, 6, 16, 20, 34, 36, 38, 48, 66, 82, 84, 86, 90, 90],14,8,),\n    ([0, 0, 1, 1, 0],3,2,),\n    ([7, 12, 15, 15, 21, 37, 40, 45, 50, 52, 53, 68, 68, 72, 75, 78, 86, 86, 88],16,18,),\n    ([22, -20, 94, -88, 72, 44],4,3,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],25,17,),\n    ([32, 63, 87, 26, 77, 4, 87, 60, 21, 25, 30, 65, 38, 96, 11, 75],12,15,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def find_difference ( arr , n , m ) :\n    max = 0 ; min = 0\n    arr.sort ( ) ;\n    j = n - 1\n    for i in range ( m ) :\n        min += arr [ i ]\n        max += arr [ j ]\n        j = j - 1\n    return ( max - min )\n"}
Disassembly of <code object find_difference at 0x7f8169febf60, file "<dis>", line 105>:
108 0 LOAD_GLOBAL 0 ( max )
2 LOAD_FAST 0 ( arr )
4 CALL_FUNCTION 1
6 STORE_FAST 1 ( n )

109 8 LOAD_FAST 1 ( n )
10 LOAD_CONST 1 ( 1 )
12 COMPARE_OP 4 ( > )
14 POP_JUMP_IF_FALSE 24

110 16 LOAD_FAST 1 ( n )
18 LOAD_CONST 2 ( 0 )
20 COMPARE_OP 4 ( > )
22 POP_JUMP_IF_FALSE 28

111 24 LOAD_FAST 1 ( n )
26 LOAD_CONST 3 ( 1 )
28 INPLACE_ADD
30 STORE_FAST 1 ( n )

112 >> 32 LOAD_FAST 1 ( n )
34 LOAD_CONST 4 ( 0 )
36 COMPARE_OP 4 ( > )
38 POP_JUMP_IF_FALSE 48

113 40 LOAD_FAST 1 ( n )
42 LOAD_CONST 5 ( 1 )
44 INPLACE_ADD
46 STORE_FAST 1 ( n )

114 48 LOAD_FAST 1 ( n )
50 LOAD_CONST 6 ( 2 )
52 INPLACE_ADD
54 STORE_FAST 1 ( n )

115 56 LOAD_FAST 1 ( n )
58 LOAD_CONST 7 ( 2 )
60 INPLACE_ADD
62 STORE_FAST 1 ( n )

116 64 LOAD_FAST 1 ( n )
66 LOAD_CONST 8 ( 2 )
68 INPLACE_ADD
70 STORE_FAST 1 ( n )

117 72 LOAD_FAST 1 ( n )
74 LOAD_CONST 9 ( 2 )
76 INPLACE_ADD
78 STORE_FAST 1 ( n )
80 JUMP_FORWARD 4 ( to 80 )

119 >> 82 LOAD_FAST 1 ( n )
84 LOAD_CONST 10 ( 2 )
86 INPLACE_ADD
88 STORE_FAST 1 ( n )

120 >> 90 LOAD_FAST 1 ( n )
92 LOAD_CONST 11 ( 2 )
94 INPLACE_ADD
96 STORE_FAST 1 ( n )

121 98 LOAD_FAST 1 ( n )
100 LOAD_CONST 12 ( 2 )
102 INPLACE_ADD
104 STORE_FAST 1 ( n )

122 106 LOAD_FAST 1 ( n )
108 LOAD_CONST 13 ( 2 )
110 INPLACE_ADD
112 STORE_FAST 1 ( n )

123 114 LOAD_FAST 1 ( n )
116 LOAD_CONST 14 ( 2 )
118 INPLACE_ADD
120 STORE_FAST 1 ( n )
122 JUMP_FORWARD 4 ( to 80 )

124 >> 124 LOAD_FAST 1 ( n )
126 LOAD_CONST 15 ( 2 )
128 INPLACE_ADD
130 STORE_FAST 1 ( n )

125 132 LOAD_FAST 1 ( n )
134 LOAD_CONST 15 ( 2 )
136 INPLACE_ADD
138 STORE_FAST 1 ( n )

126 >> 140 LOAD_FAST 1 ( n )
142 RETURN_VALUE

