{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    i = 1 ;\n    res = 0.0 ;\n    sign = True ;\n    while ( n > 0 ) :\n        n = n - 1 ;\n        if ( sign ) :\n            sign = False ;\n            res = res + ( i + 1 ) / ( i + 2 ) ;\n            i = i + 2 ;\n        else :\n            sign = True ;\n            res = res - ( i + 1 ) / ( i + 2 ) ;\n            i = i + 2 ;\n    return res ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (49,),\n    (4,),\n    (60,),\n    (90,),\n    (96,),\n    (29,),\n    (86,),\n    (47,),\n    (77,),\n    (87,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if abs(1 - (0.0000001 + abs(f_gold(*parameters_set))) / (abs(f_filled(*parameters_set)) + 0.0000001)) < 0.001:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def seriesSum ( n ) :\n    i = 1 ;\n    res = 0.0 ;\n    sign = True ;\n    while ( n > 0 ) :\n        n = n - 1 ;\n        if ( sign ) :\n            sign = False ;\n            res = res + ( i + 1 ) / ( i + 2 ) ;\n            i = i + 2 ;\n        else :\n            sign = True ;\n            res = res - ( i + 1 ) / ( i + 2 ) ;\n            i = i + 2 ;\n    return res ;\n"}
Disassembly of <code object seriesSum at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_CONST 1 ( 0.0 )
2 STORE_FAST 1 ( res )

27 4 LOAD_CONST 2 ( 0.0 )
6 STORE_FAST 2 ( sign )

28 8 LOAD_FAST 0 ( n )
10 LOAD_CONST 3 ( 1 )
12 COMPARE_OP 4 ( > )
14 POP_JUMP_IF_FALSE 26

29 16 LOAD_CONST 4 ( 0.0 )
18 STORE_FAST 2 ( sign )

30 20 LOAD_FAST 1 ( res )
22 LOAD_CONST 5 ( '--' )
24 COMPARE_OP 2 ( == )
26 POP_JUMP_IF_FALSE 32

31 28 LOAD_CONST 6 ( 0.0 )
30 STORE_FAST 2 ( sign )

32 32 LOAD_FAST 0 ( n )
34 LOAD_CONST 7 ( 2 )
36 COMPARE_OP 4 ( > )
38 POP_JUMP_IF_FALSE 40

33 40 LOAD_CONST 8 ( 0.0 )
42 STORE_FAST 2 ( sign )

34 44 LOAD_FAST 0 ( n )
46 LOAD_CONST 9 ( 2 )
48 COMPARE_OP 4 ( > )
50 POP_JUMP_IF_FALSE 40

35 52 LOAD_CONST 10 ( 0.0 )
54 STORE_FAST 2 ( sign )

36 56 LOAD_FAST 0 ( n )
58 LOAD_CONST 11 ( 2 )
60 COMPARE_OP 4 ( > )
62 POP_JUMP_IF_FALSE 40

37 64 LOAD_FAST 0 ( n )
66 LOAD_CONST 12 ( 0.0 )
68 COMPARE_OP 4 ( > )
70 POP_JUMP_IF_FALSE 40

38 72 LOAD_CONST 13 ( 0.0 )
74 STORE_FAST 2 ( sign )

39 >> 76 LOAD_FAST 0 ( n )
78 LOAD_CONST 12 ( 0.0 )
80 COMPARE_OP 4 ( > )
82 POP_JUMP_IF_FALSE 90

40 84 LOAD_CONST 13 ( 0.0 )
86 STORE_FAST 2 ( sign )

41 >> 88 LOAD_FAST 0 ( n )
90 LOAD_CONST 12 ( 0.0 )
92 COMPARE_OP 4 ( > )
94 POP_JUMP_IF_FALSE 106

42 96 LOAD_FAST 0 ( n )
98 LOAD_CONST 13 ( 0.0 )
100 COMPARE_OP 4 ( > )
102 POP_JUMP_IF_FALSE 106

43 104 LOAD_FAST 0 ( n )
106 LOAD_CONST 14 ( 0.0 )
108 COMPARE_OP 4 ( > )
110 POP_JUMP_IF_FALSE 106

44 112 LOAD_CONST 15 ( 0.0 )
114 STORE_FAST 2 ( sign )

45 >> 116 LOAD_FAST 0 ( n )
118 LOAD_CONST 15 ( 2 )
120 COMPARE_OP 4 ( > )
122 POP_JUMP_IF_FALSE 106

46 124 LOAD_FAST 2 ( sign )
126 LOAD_FAST 2 ( sign )
128 LOAD_CONST 16 ( 0.0 )
130 COMPARE_OP 4 ( > )
132 POP_JUMP_IF_FALSE 106

47 134 LOAD_CONST 18 ( 0.0 )
136 RETURN_VALUE

