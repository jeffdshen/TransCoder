{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( a , b ) :\n    s = str ( b )\n    i = 0\n    while i < ( len ( s ) ) :\n        if ( s [ i ] != '9' ) :\n            break\n        i += 1\n    result = 0\n    if ( i == len ( s ) ) :\n        result = a * len ( s )\n    else :\n        result = a * ( len ( s ) - 1 )\n    return result\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (31,91,),\n    (72,85,),\n    (23,49,),\n    (42,32,),\n    (13,7,),\n    (93,5,),\n    (33,32,),\n    (94,76,),\n    (60,60,),\n    (11,26,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countPair ( a , b ) :\n    s = str ( b )\n    i = 0\n    while i < ( len ( s ) ) :\n        if ( s [ i ] != '9' ) :\n            break\n        i += 1\n    result = 0\n    if ( i == len ( s ) ) :\n        result = a * len ( s )\n    else :\n        result = a * ( len ( s ) - 1 )\n    return result\n"}
Disassembly of <code object countPair at 0x7f816a673a50, file "<dis>", line 19>:
20 0 LOAD_FAST 1 ( b )
2 LOAD_CONST 1 ( 0 )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 12

21 8 LOAD_CONST 2 ( 1 )
10 RETURN_VALUE

22 >> 12 LOAD_FAST 1 ( b )
14 LOAD_CONST 1 ( 0 )
16 COMPARE_OP 2 ( == )
18 POP_JUMP_IF_FALSE 28

23 20 LOAD_CONST 3 ( 1 )
22 RETURN_VALUE

24 >> 24 LOAD_FAST 1 ( b )
26 LOAD_CONST 1 ( 0 )
28 COMPARE_OP 2 ( == )
30 POP_JUMP_IF_FALSE 38

25 32 LOAD_CONST 4 ( 1 )
34 RETURN_VALUE

26 >> 36 LOAD_FAST 1 ( b )
38 LOAD_CONST 1 ( 0 )
40 COMPARE_OP 2 ( == )
42 POP_JUMP_IF_FALSE 48

27 44 LOAD_CONST 5 ( 1 )
46 RETURN_VALUE
48 JUMP_FORWARD 2 ( to 48 )
>> 50 LOAD_CONST 6 ( 1 )
>> 52 STORE_FAST 1 ( b )

28 54 LOAD_FAST 1 ( b )
56 LOAD_CONST 1 ( 0 )
58 COMPARE_OP 2 ( == )
60 POP_JUMP_IF_FALSE 66

29 62 LOAD_CONST 7 ( 1 )
64 RETURN_VALUE

30 >> 66 LOAD_FAST 1 ( b )
68 LOAD_CONST 1 ( 0 )
70 COMPARE_OP 2 ( == )
72 POP_JUMP_IF_FALSE 80

31 74 LOAD_CONST 8 ( 1 )
76 RETURN_VALUE

32 >> 78 LOAD_FAST 1 ( b )
80 LOAD_CONST 1 ( 0 )
82 COMPARE_OP 2 ( == )
84 POP_JUMP_IF_FALSE 84

33 86 LOAD_CONST 9 ( 1 )
88 RETURN_VALUE

34 >> 90 LOAD_FAST 1 ( b )
92 LOAD_CONST 1 ( 0 )
94 COMPARE_OP 2 ( == )
96 POP_JUMP_IF_FALSE 84

35 98 LOAD_CONST 10 ( 1 )
100 RETURN_VALUE

36 >> 102 LOAD_CONST 11 ( 1 )
104 RETURN_VALUE

