{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( N ) :\n    if ( N <= 6 ) :\n        return N\n    screen = [ 0 ] * N\n    for n in range ( 1 , 7 ) :\n        screen [ n - 1 ] = n\n    for n in range ( 7 , N + 1 ) :\n        screen [ n - 1 ] = max ( 2 * screen [ n - 4 ] , max ( 3 * screen [ n - 5 ] , 4 * screen [ n - 6 ] ) ) ;\n    return screen [ N - 1 ]\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (41,),\n    (94,),\n    (80,),\n    (40,),\n    (76,),\n    (5,),\n    (43,),\n    (67,),\n    (24,),\n    (90,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findoptimal ( N ) :\n    if ( N <= 6 ) :\n        return N\n    screen = [ 0 ] * N\n    for n in range ( 1 , 7 ) :\n        screen [ n - 1 ] = n\n    for n in range ( 7 , N + 1 ) :\n        screen [ n - 1 ] = max ( 2 * screen [ n - 4 ] , max ( 3 * screen [ n - 5 ] , 4 * screen [ n - 6 ] ) ) ;\n    return screen [ N - 1 ]\n"}
Disassembly of <code object findoptimal at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( N )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 STORE_FAST 1 ( N )

27 8 LOAD_FAST 1 ( N )
10 LOAD_CONST 2 ( 1 )
12 BINARY_SUBSCR
14 STORE_FAST 2 ( N )

28 16 LOAD_FAST 1 ( N )
18 LOAD_CONST 3 ( 1 )
20 BINARY_SUBSCR
22 STORE_FAST 3 ( N )

29 24 LOAD_FAST 1 ( N )
26 LOAD_CONST 4 ( 2 )
28 BINARY_SUBSCR
30 STORE_FAST 4 ( N )

30 32 LOAD_FAST 1 ( N )
34 LOAD_CONST 5 ( 1 )
36 BINARY_SUBSCR
38 STORE_FAST 5 ( N )

31 40 LOAD_FAST 1 ( N )
42 LOAD_CONST 6 ( 2 )
44 BINARY_SUBSCR
46 STORE_FAST 6 ( N )

32 48 LOAD_FAST 1 ( N )
50 LOAD_CONST 7 ( 3 )
52 BINARY_SUBSCR
54 STORE_FAST 7 ( N )

33 56 LOAD_FAST 1 ( N )
58 LOAD_CONST 8 ( 2 )
60 BINARY_SUBSCR
62 STORE_FAST 8 ( N )

34 64 LOAD_FAST 1 ( N )
66 LOAD_FAST 2 ( N )
68 LOAD_CONST 9 ( 3 )
70 BINARY_SUBSCR
72 LOAD_FAST 4 ( N )
74 LOAD_CONST 10 ( 4 )
76 BINARY_SUBSCR
78 LOAD_FAST 3 ( N )
80 LOAD_CONST 11 ( 4 )
82 BINARY_SUBSCR
84 LOAD_FAST 7 ( N )
86 LOAD_CONST 12 ( ( 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' , 'N' ,