{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , n ) :\n    if ( n == 1 ) : return True\n    arr.sort ( )\n    d = arr [ 1 ] - arr [ 0 ]\n    for i in range ( 2 , n ) :\n        if ( arr [ i ] - arr [ i - 1 ] != d ) :\n            return False\n    return True\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([1,4,64,16],4,),\n    ([0, 12, 4, 8],4,),\n    ([-2, 2, 0, 4, 6],5,),\n    ([0,0,0,0,0,0,0,0,0,0,0,0],7,),\n    ([66,56,86,76,46],5,),\n    ([66,56,56,86,76,46],6,),\n    ([7, 9, 11, 21, 44, 45, 61, 67, 78, 97, 98, 99],11,),\n    ([66, -28, -26, 50, -18, 54, 84, -2, -70, -74, 6, -34, 44, -36, -4, 36, 14, 24, 64, 74, 86, -96, 54, -68, -84, -62, -36, 34, -36, 70, -50, 6, 62, -50, -34, -38, -28, 74, 78, -2, -12, -4],33,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],33,),\n    ([18, 93, 79, 20, 44, 36, 69, 37, 33, 82, 19, 51, 32, 22, 1, 54, 89, 20, 58, 35, 70, 70, 61, 63, 61, 57, 3, 95, 99, 45, 15, 17, 15, 5, 86, 46, 11, 64, 92, 14, 39, 67],40,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def checkIsAP ( arr , n ) :\n    if ( n == 1 ) : return True\n    arr.sort ( )\n    d = arr [ 1 ] - arr [ 0 ]\n    for i in range ( 2 , n ) :\n        if ( arr [ i ] - arr [ i - 1 ] != d ) :\n            return False\n    return True\n"}
Disassembly of <code object checkIsAP at 0x7f816a673a50, file "<dis>", line 105>:
108 0 LOAD_FAST 0 ( arr )
2 LOAD_CONST 1 ( 1 )
4 BINARY_SUBSCR
6 LOAD_CONST 2 ( 2 )
8 COMPARE_OP 2 ( == )
10 POP_JUMP_IF_FALSE 16

109 12 LOAD_FAST 0 ( arr )
14 LOAD_CONST 3 ( 1 )
16 BINARY_SUBSCR
18 LOAD_CONST 4 ( 2 )
20 COMPARE_OP 2 ( == )
22 POP_JUMP_IF_FALSE 28

110 24 LOAD_FAST 0 ( arr )
26 LOAD_CONST 5 ( 1 )
28 BINARY_SUBSCR
30 LOAD_CONST 6 ( 2 )
32 COMPARE_OP 2 ( == )
34 POP_JUMP_IF_FALSE 44

111 36 LOAD_FAST 0 ( arr )
38 LOAD_CONST 7 ( 2 )
40 BINARY_SUBSCR
42 LOAD_CONST 8 ( 3 )
44 COMPARE_OP 2 ( == )
46 POP_JUMP_IF_FALSE 52

112 48 LOAD_FAST 0 ( arr )
50 LOAD_CONST 9 ( 2 )
52 BINARY_SUBSCR
54 LOAD_CONST 10 ( 2 )
56 COMPARE_OP 2 ( == )
58 POP_JUMP_IF_FALSE 52

113 60 LOAD_FAST 0 ( arr )
62 LOAD_CONST 11 ( 3 )
64 COMPARE_OP 2 ( == )
66 POP_JUMP_IF_FALSE 68

114 68 LOAD_FAST 0 ( arr )
70 LOAD_CONST 12 ( 2 )
72 BINARY_SUBSCR
74 LOAD_CONST 13 ( 3 )
76 COMPARE_OP 2 ( == )
78 POP_JUMP_IF_FALSE 80

115 80 LOAD_FAST 0 ( arr )
82 LOAD_CONST 14 ( 3 )
84 BINARY_SUBSCR
86 LOAD_CONST 15 ( 3 )
88 COMPARE_OP 2 ( == )
90 POP_JUMP_IF_FALSE 80

116 92 LOAD_FAST 0 ( arr )
94 LOAD_CONST 16 ( 2 )
96 BINARY_SUBSCR
98 LOAD_CONST 17 ( 3 )
100 COMPARE_OP 2 ( == )
102 POP_JUMP_IF_FALSE 106

117 104 LOAD_FAST 0 ( arr )
106 LOAD_CONST 16 ( 2 )
108 BINARY_SUBSCR
110 LOAD_CONST 17 ( 3 )
112 COMPARE_OP 2 ( == )
114 POP_JUMP_IF_FALSE 106

118 116 LOAD_FAST 0 ( arr )
118 LOAD_CONST 18 ( 2 )
120 BINARY_SUBSCR
122 LOAD_CONST 19 ( 3 )
124 COMPARE_OP 2 ( == )
126 POP_JUMP_IF_FALSE 130

119 128 LOAD_FAST 0 ( arr )
130 LOAD_CONST 18 ( 2 )
132 BINARY_SUBSCR
134 LOAD_CONST 19 ( 3 )
136 COMPARE_OP 2 ( == )
138 POP_JUMP_IF_FALSE 130

120 140 LOAD_FAST 0 ( arr )
142 LOAD_CONST 20 ( 2 )
144 BINARY_SUBSCR
146 LOAD_CONST 21 ( 3 )
148 COMPARE_OP 2 ( == )
150 POP_JUMP_IF_FALSE 130

121 152 LOAD_FAST 0 ( arr )
154 LOAD_CONST 21 ( 3 )
156 COMPARE_OP 2 ( == )
158 POP_JUMP_IF_FALSE 130
