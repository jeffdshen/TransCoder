{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport sys\n\ndef f_gold ( arr , n ) :\n    res = - sys.maxsize\n    for i in range ( 0 , n ) :\n        curr_sum = 0\n        for j in range ( 0 , n ) :\n            index = int ( ( i + j ) % n )\n            curr_sum += j * arr [ index ]\n        res = max ( res , curr_sum )\n    return res\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([11, 12, 16, 26, 29, 40, 54, 59, 65, 70, 71, 73, 78, 81, 87, 87, 88, 90, 95, 97],11,),\n    ([-46, -32, 54, 96, -72, -58, -36, -44, 26, -2, -68, 42, 90, 26, -92, -96, 88, -42, -18, 46, -70, 24, 0, 24, 34, 34, -52, 50, 94, -60, 64, 58],22,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],33,),\n    ([48, 2, 79, 98, 28, 17, 41, 47, 61, 76, 82, 5, 74, 4, 80, 51, 22, 45, 91, 75, 91, 93, 42, 45, 69, 98, 76, 74, 83, 17, 30, 88, 53, 25, 35, 19, 26],20,),\n    ([-88, -84, -82, -74, -44, -34, -32, -20, -20, -14, 6, 6, 10, 12, 16, 24, 32, 34, 38, 46, 54, 54, 56, 60, 82, 88, 90, 94, 98],24,),\n    ([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1],7,),\n    ([10, 14, 14, 14, 19, 20, 22, 26, 35, 36, 40, 53, 54, 55, 55, 57, 57, 67, 72, 72, 77, 78, 83, 84, 95, 96],16,),\n    ([-80, 18, -76, 48, -52, -38, 52, -82, 40, -44, -90, 86, -86, -36, -32, -2, 56, -12, -88, 14, -16, 8, 52, 24, 46, 56, 84, -36, 84, -60, 72, -46, 32, -16, -20, 68, -86, -62, 58, 8, 78, -52, 22, -28, -22, -42, 12, -48],30,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],14,),\n    ([20, 94, 36, 2, 50, 62, 84, 50, 66, 75, 1, 18, 41, 48, 72, 61, 86, 22, 54, 6, 71, 46, 92, 68, 59, 51, 89, 31, 58, 78, 82, 84],25,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxSum ( arr , n ) :\n    res = - sys.maxsize\n    for i in range ( 0 , n ) :\n        curr_sum = 0\n        for j in range ( 0 , n ) :\n            index = int ( ( i + j ) % n )\n            curr_sum += j * arr [ index ]\n        res = max ( res , curr_sum )\n    return res\n"}
Disassembly of <code object maxSum at 0x7f816a673a50, file "<dis>", line 16>:
17 0 LOAD_CONST 1 ( - 1 )
2 STORE_FAST 3 ( i )

18 4 SETUP_LOOP 76 ( to 78 )
6 LOAD_GLOBAL 0 ( range )
8 LOAD_FAST 1 ( n )
10 CALL_FUNCTION 1
12 GET_ITER
>> 14 FOR_ITER 76 ( to 76 )
16 STORE_FAST 4 ( i )

19 18 LOAD_FAST 3 ( i )
20 LOAD_CONST 2 ( 0 )
22 BINARY_SUBSCR
24 LOAD_FAST 4 ( i )
26 LOAD_CONST 3 ( 1 )
28 BINARY_SUBTRACT
30 BINARY_MULTIPLY
32 BINARY_ADD
34 STORE_FAST 5 ( i )

20 36 LOAD_FAST 5 ( i )
38 LOAD_CONST 4 ( - 1 )
40 BINARY_SUBSCR
42 LOAD_FAST 4 ( i )
44 LOAD_CONST 5 ( - 1 )
46 BINARY_SUBSCR
48 LOAD_FAST 4 ( i )
50 LOAD_CONST 6 ( - 1 )
52 BINARY_SUBSCR
54 LOAD_FAST 4 ( i )
56 LOAD_CONST 7 ( - 1 )
58 BINARY_SUBSCR
60 BINARY_ADD
62 LOAD_FAST 5 ( i )
64 LOAD_CONST 8 ( - 1 )
66 BINARY_SUBSCR
68 BINARY_ADD
70 LOAD_FAST 4 ( i )
72 LOAD_CONST 9 ( - 1 )
74 BINARY_SUBSCR
76 BINARY_ADD
78 BUILD_SLICE 2
80 BINARY_SUBSCR
82 BINARY_ADD
84 STORE_FAST 6 ( i )

22 86 LOAD_FAST 5 ( i )
88 LOAD_CONST 10 ( - 1 )
90 BINARY_SUBSCR
92 LOAD_FAST 4 ( i )
94 LOAD_CONST 11 ( - 1 )
96 BINARY_SUBSCR
98 BINARY_ADD
100 LOAD_FAST 4 ( i )
102 LOAD_CONST 12 ( - 1 )
104 BINARY_SUBSCR
106 BINARY_ADD
108 LOAD_FAST 4 ( i )
110 LOAD_CONST 13 ( - 1 )
112 BINARY_SUBSCR
114 BINARY_ADD
116 LOAD_FAST 3 ( i )
118 LOAD_CONST 6 ( - 1 )
120 BINARY_SUBSCR
122 BINARY_ADD
124 LOAD_FAST 4 ( i )
126 LOAD_CONST 6 ( - 1 )
128 BINARY_SUBSCR
130 BINARY_ADD
132 LOAD_FAST 4 ( i )
134 LOAD_CONST 6 ( - 1 )
136 BINARY_SUBSCR
138 BINARY_ADD
140 BINARY_ADD
142 LOAD_FAST 4 ( i )
144 LOAD_CONST 6 ( - 1 )
146 BINARY_SUBSCR
148 BINARY_ADD
150 LOAD_FAST 3 ( i )
152 LOAD_CONST 6 ( - 1 )
154 BINARY_SUBSCR
156 BINARY_ADD
158 LOAD_FAST 4 ( i )
160 LOAD_CONST 7 ( - 1 )
162 BINARY_SUBSCR
164 BINARY_ADD
166 BINARY_ADD
168 LOAD_FAST 3 ( i )
170 LOAD_CONST 6 ( - 1 )
172 BINARY_SUBSCR
174 BINARY_ADD
176 LOAD_FAST 4 ( i )
178 LOAD_CONST 6 ( - 1 )