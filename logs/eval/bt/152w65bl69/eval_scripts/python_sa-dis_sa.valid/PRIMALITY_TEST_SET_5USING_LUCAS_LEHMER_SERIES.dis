{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( p ) :\n    checkNumber = 2 ** p - 1\n    nextval = 4 % checkNumber\n    for i in range ( 1 , p - 1 ) :\n        nextval = ( nextval * nextval - 2 ) % checkNumber\n    if ( nextval == 0 ) : return True\n    else : return False\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (11,),\n    (27,),\n    (31,),\n    (47,),\n    (3,),\n    (14,),\n    (41,),\n    (72,),\n    (39,),\n    (22,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def isPrime ( p ) :\n    checkNumber = 2 ** p - 1\n    nextval = 4 % checkNumber\n    for i in range ( 1 , p - 1 ) :\n        nextval = ( nextval * nextval - 2 ) % checkNumber\n    if ( nextval == 0 ) : return True\n    else : return False\n"}
Disassembly of <code object isPrime at 0x7f816a6e4b70, file "<dis>", line 27>:
28 0 LOAD_FAST 2 ( p )
2 LOAD_CONST 1 ( - 1 )
4 BINARY_SUBSCR
6 STORE_FAST 3 ( nextNumber )

29 8 LOAD_FAST 3 ( nextNumber )
10 LOAD_CONST 2 ( - 1 )
12 BINARY_SUBSCR
14 STORE_FAST 4 ( nextNumber )

30 16 LOAD_FAST 4 ( nextNumber )
18 LOAD_CONST 3 ( - 1 )
20 BINARY_SUBSCR
22 STORE_FAST 5 ( nextNumber )

31 24 LOAD_FAST 5 ( nextNumber )
26 LOAD_CONST 4 ( - 1 )
28 BINARY_SUBSCR
30 STORE_FAST 6 ( nextNumber )

32 32 LOAD_FAST 5 ( nextNumber )
34 LOAD_CONST 5 ( - 1 )
36 BINARY_SUBSCR
38 STORE_FAST 7 ( nextNumber )

33 40 LOAD_FAST 5 ( nextNumber )
42 LOAD_CONST 6 ( - 1 )
44 BINARY_SUBSCR
46 STORE_FAST 8 ( nextNumber )

34 48 LOAD_FAST 7 ( nextNumber )
50 LOAD_CONST 7 ( - 1 )
52 BINARY_SUBSCR
54 STORE_FAST 9 ( nextNumber )

35 56 LOAD_FAST 8 ( nextNumber )
58 LOAD_CONST 8 ( - 1 )
60 BINARY_SUBSCR
62 STORE_FAST 10 ( nextNumber )

36 64 LOAD_FAST 7 ( nextNumber )
66 LOAD_CONST 9 ( - 1 )
68 BINARY_SUBSCR
70 STORE_FAST 11 ( nextNumber )

37 72 LOAD_FAST 8 ( nextNumber )
74 LOAD_CONST 10 ( - 1 )
76 BINARY_SUBSCR
78 STORE_FAST 11 ( nextNumber )

38 80 LOAD_FAST 9 ( nextNumber )
82 LOAD_CONST 11 ( - 1 )
84 BINARY_SUBSCR
86 STORE_FAST 10 ( nextNumber )

39 88 LOAD_FAST 10 ( nextNumber )
90 LOAD_CONST 12 ( - 1 )
92 BINARY_SUBSCR
94 STORE_FAST 11 ( nextNumber )

40 96 LOAD_FAST 11 ( nextNumber )
98 LOAD_FAST 12 ( nextNumber )
100 LOAD_FAST 13 ( nextNumber )
102 BUILD_TUPLE 2
104 BINARY_SUBSCR
106 STORE_FAST 11 ( nextNumber )

41 108 LOAD_FAST 11 ( nextNumber )
110 LOAD_FAST 12 ( nextNumber )
112 BUILD_TUPLE 2
114 RETURN_VALUE

