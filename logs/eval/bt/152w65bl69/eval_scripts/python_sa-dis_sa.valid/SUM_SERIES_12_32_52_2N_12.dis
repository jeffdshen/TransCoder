{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    sum = 0\n    for i in range ( 1 , n + 1 ) :\n        sum = sum + ( 2 * i - 1 ) * ( 2 * i - 1 )\n    return sum\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (14,),\n    (61,),\n    (37,),\n    (86,),\n    (47,),\n    (98,),\n    (70,),\n    (24,),\n    (76,),\n    (24,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def sumOfSeries ( n ) :\n    sum = 0\n    for i in range ( 1 , n + 1 ) :\n        sum = sum + ( 2 * i - 1 ) * ( 2 * i - 1 )\n    return sum\n"}
Disassembly of <code object sumOfSeries at 0x7f816a6e4b70, file "<dis>", line 15>:
16 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 1 )
4 BINARY_SUBSCR
6 LOAD_CONST 2 ( 2 )
8 COMPARE_OP 2 ( == )
10 POP_JUMP_IF_FALSE 16

17 12 LOAD_FAST 0 ( n )
14 LOAD_CONST 3 ( 1 )
16 BINARY_SUBSCR
18 STORE_FAST 1 ( n )

18 >> 20 LOAD_FAST 1 ( n )
22 LOAD_CONST 4 ( 2 )
24 BINARY_SUBSCR
26 LOAD_CONST 5 ( 1 )
28 BINARY_SUBSCR
30 LOAD_CONST 6 ( 2 )
32 BINARY_SUBSCR
34 LOAD_CONST 7 ( 3 )
36 COMPARE_OP 2 ( == )
38 POP_JUMP_IF_FALSE 44

19 40 LOAD_FAST 1 ( n )
42 LOAD_CONST 4 ( 2 )
44 BINARY_SUBSCR
46 LOAD_CONST 8 ( 3 )
48 COMPARE_OP 2 ( == )
50 POP_JUMP_IF_FALSE 52

20 52 LOAD_FAST 1 ( n )
54 LOAD_CONST 4 ( 2 )
56 BINARY_SUBSCR
58 LOAD_CONST 9 ( 3 )
60 COMPARE_OP 2 ( == )
62 POP_JUMP_IF_FALSE 52

21 64 LOAD_FAST 1 ( n )
66 LOAD_CONST 10 ( 2 )
68 BINARY_SUBSCR
70 LOAD_CONST 11 ( 3 )
72 COMPARE_OP 2 ( == )
74 POP_JUMP_IF_FALSE 80

22 76 LOAD_FAST 1 ( n )
78 LOAD_CONST 12 ( 2 )
80 BINARY_SUBSCR
82 LOAD_CONST 13 ( 3 )
84 COMPARE_OP 2 ( == )
86 POP_JUMP_IF_FALSE 80

23 88 LOAD_FAST 1 ( n )
90 LOAD_CONST 12 ( 2 )
92 BINARY_SUBSCR
94 LOAD_CONST 13 ( 3 )
96 COMPARE_OP 2 ( == )
98 POP_JUMP_IF_FALSE 80

24 100 LOAD_FAST 1 ( n )
102 LOAD_CONST 6 ( 2 )
104 BINARY_SUBSCR
106 LOAD_CONST 7 ( 3 )
108 COMPARE_OP 2 ( == )
110 POP_JUMP_IF_FALSE 112

25 112 LOAD_FAST 1 ( n )
114 LOAD_CONST 6 ( 2 )
116 BINARY_SUBSCR
118 LOAD_CONST 8 ( 3 )
120 COMPARE_OP 2 ( == )
122 POP_JUMP_IF_FALSE 114

26 124 LOAD_FAST 1 ( n )
126 LOAD_CONST 6 ( 2 )
128 BINARY_SUBSCR
130 LOAD_CONST 7 ( 3 )
132 COMPARE_OP 2 ( == )
134 POP_JUMP_IF_FALSE 130

27 136 LOAD_FAST 1 ( n )
138 LOAD_CONST 6 ( 2 )
140 BINARY_SUBSCR
142 STORE_FAST 1 ( n )

28 >> 144 LOAD_FAST 1 ( n )
146 RETURN_VALUE

