{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , l , r , x ) :\n    if r >= l :\n        mid = l + ( r - l ) // 2\n        if arr [ mid ] == x :\n            return mid\n        elif arr [ mid ] > x :\n            return f_gold ( arr , l , mid - 1 , x )\n        else :\n            return f_gold ( arr , mid + 1 , r , x )\n    else :\n        return - 1\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([3, 4, 4, 8, 9, 13, 13, 15, 18, 27, 30, 32, 42, 48, 50, 52, 56, 66, 69, 69, 77, 84, 84, 93],19,12,22,),\n    ([52, -58, -22, -80, 44, -52, -34, 94, -34, -74, 42, 60, -62, 70, 98, 32, 10, 94, 26, 56, -48, -50, 42, 2, 46, 28, -68, -16, -96, -12, 66, -46, 74, -60, -52, 28, -92, -78, 32, 28, 16, 34, 30, -60, -14],40,35,44,),\n    ([0, 1],1,1,1,),\n    ([28, 84, 40, 81],2,2,2,),\n    ([-66, -62, -60, -56, -56, -2, 40, 44, 50, 74, 82, 94],8,6,8,),\n    ([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1],7,7,10,),\n    ([15, 26, 31, 36, 36, 61, 68, 72, 75, 79, 82, 98],6,7,8,),\n    ([0, -82, -94, 48, 48, -96, 14, 66, 76, -30, 86, 28, -28, -66, -64, 92, -94, -66, 86, 26, 8, 94, -82, -80, 4, -26, 76, -46, 72, 88, -6, 8, -30, 40, -88, 2, -40, -98, -22, -20, 4, -12, 54, -20, -36, 12],38,33,39,),\n    ([0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],12,10,6,),\n    ([81, 47],1,1,1,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def binarySearch ( arr , l , r , x ) :\n    if r >= l :\n        mid = l + ( r - l ) // 2\n        if arr [ mid ] == x :\n            return mid\n        elif arr [ mid ] > x :\n            return binarySearch ( arr , l , mid - 1 , x )\n        else :\n            return binarySearch ( arr , mid + 1 , r , x )\n    else :\n        return - 1\n"}
Disassembly of <code object binarySearch at 0x7f816a673a50, file "<dis>", line 68>:
69 0 LOAD_FAST 1 ( l )
2 LOAD_CONST 1 ( - 1 )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 12

70 8 LOAD_FAST 1 ( l )
10 LOAD_CONST 2 ( 0 )
12 BINARY_SUBSCR
14 LOAD_GLOBAL 0 ( binarySearch )
16 COMPARE_OP 2 ( == )
18 POP_JUMP_IF_FALSE 28

71 20 LOAD_GLOBAL 1 ( binarySearch )
22 LOAD_FAST 1 ( l )
24 LOAD_CONST 3 ( 1 )
26 BINARY_SUBSCR
28 CALL_FUNCTION 1
30 RETURN_VALUE

72 >> 32 LOAD_FAST 1 ( l )
34 LOAD_CONST 4 ( 2 )
36 BINARY_SUBSCR
38 RETURN_VALUE
40 LOAD_CONST 0 ( None )
42 RETURN_VALUE

