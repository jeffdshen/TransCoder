{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport sys\n\ndef f_gold ( arr , n ) :\n    min_ending_here = sys.maxsize\n    min_so_far = sys.maxsize\n    for i in range ( n ) :\n        if ( min_ending_here > 0 ) :\n            min_ending_here = arr [ i ]\n        else :\n            min_ending_here += arr [ i ]\n        min_so_far = min ( min_so_far , min_ending_here )\n    return min_so_far\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([2, 9, 13, 14, 15, 18, 19, 19, 25, 26, 29, 29, 29, 30, 31, 36, 37, 37, 38, 39, 39, 40, 40, 42, 42, 46, 50, 53, 58, 60, 62, 64, 65, 67, 68, 69, 72, 77, 78, 83, 85, 89, 90, 93, 95, 95, 97],24,),\n    ([14, -58, 8, 78, -26, -20, -60, 42, -64, -12],6,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],8,),\n    ([44, 88, 20, 47, 69, 42, 26, 49, 71, 91, 18, 95, 9, 66, 60, 37, 47, 29, 98, 63, 15, 9, 80, 66, 1, 9, 57, 56, 20, 2, 1],26,),\n    ([-78, -64, -62, -60, -52, 4, 8, 46, 72, 74],8,),\n    ([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1],11,),\n    ([3, 7, 16, 17, 23, 23, 23, 28, 29, 30, 34, 38, 40, 41, 43, 43, 44, 46, 51, 51, 51, 55, 57, 58, 61, 62, 66, 66, 67, 69, 70, 73, 75, 77, 79, 80, 85, 85, 87, 87, 93, 96],38,),\n    ([80, 22, 38, 26, 62, -48, -48, 46, -54, 4, 76, 46, 48, 40, -92, -98, -88, 12, -42, -94, 76, -16, -82, 62, 18, -24],22,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],13,),\n    ([85, 44, 1, 97, 50, 74, 62, 90, 3, 78, 8, 48, 96, 41, 36, 91, 57, 97, 85, 90, 78, 43, 28, 92, 85, 59, 29, 38, 34, 65, 20, 26, 27, 23, 71, 22, 47, 99, 68, 93, 67, 66, 69, 82, 98, 15, 44, 51, 65],45,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def smallestSumSubarr ( arr , n ) :\n    min_ending_here = sys.maxsize\n    min_so_far = sys.maxsize\n    for i in range ( n ) :\n        if ( min_ending_here > 0 ) :\n            min_ending_here = arr [ i ]\n        else :\n            min_ending_here += arr [ i ]\n        min_so_far = min ( min_so_far , min_ending_here )\n    return min_so_far\n"}
Disassembly of <code object smallestSumSubarr at 0x7f816a677930, file "<dis>", line 64>:
65 0 LOAD_GLOBAL 0 ( min_as_tuple )
2 LOAD_FAST 0 ( arr )
4 LOAD_FAST 1 ( n )
6 CALL_FUNCTION 2
8 STORE_FAST 2 ( min_as_tuple )

66 10 LOAD_FAST 2 ( min_as_tuple )
12 LOAD_CONST 1 ( 0 )
14 COMPARE_OP 4 ( > )
16 POP_JUMP_IF_FALSE 30

67 18 LOAD_FAST 2 ( min_as_tuple )
20 LOAD_FAST 0 ( arr )
22 LOAD_FAST 1 ( n )
24 BINARY_MULTIPLY
26 STORE_FAST 2 ( min_as_tuple )

68 >> 28 LOAD_FAST 2 ( min_as_tuple )
30 LOAD_FAST 0 ( arr )
32 LOAD_FAST 1 ( n )
34 LOAD_FAST 2 ( min_as_tuple )
36 LOAD_FAST 3 ( min_as_tuple )
38 LOAD_FAST 4 ( min_as_tuple )
40 LOAD_FAST 5 ( min_as_tuple )
42 LOAD_FAST 6 ( min_as_tuple )
44 LOAD_FAST 7 ( min_as_tuple )
46 LOAD_FAST 6 ( min_as_tuple )
48 LOAD_FAST 8 ( min_as_tuple )
50 LOAD_FAST 9 ( min_as_tuple )
52 LOAD_FAST 10 ( min_as_tuple )
54 LOAD_FAST 11 ( min_as_tuple )
56 LOAD_FAST 12 ( min_as_tuple )
58 LOAD_FAST 13 ( min_as_tuple )
60 LOAD_FAST 14 ( min_as_tuple )
62 LOAD_FAST 15 ( min_as_tuple )
64 LOAD_FAST 16 ( min_as_tuple )
66 LOAD_FAST 17 ( min_as_tuple )
68 LOAD_FAST 18 ( min_as_tuple )
70 LOAD_FAST 17 ( min_as_tuple )
72 LOAD_FAST 18 ( min_as_tuple )
74 LOAD_FAST 19 ( min_as_tuple )
76 LOAD_FAST 18 ( min_as_tuple )
78 LOAD_FAST 19 ( min_as_tuple )
80 LOAD_FAST 20 ( min_as_tuple )
82 LOAD_FAST 19 ( min_as_tuple )
84 LOAD_FAST 20 ( min_as_tuple )
86 LOAD_FAST 21 ( min_as_tuple )
88 LOAD_FAST 20 ( min_as_tuple )
90 LOAD_FAST 21 ( min_as_tuple )
92 LOAD_FAST 20 ( min_as_tuple )
94 LOAD_FAST 21 ( min_as_tuple )
96 LOAD_FAST 20 ( min_as_tuple )
98 LOAD_FAST 21 ( min_as_tuple )
100 LOAD_FAST 20 ( min_as_tuple )
102 LOAD_FAST 21 ( min_as_tuple )
104 LOAD_FAST 20 ( min_as_tuple )
106 LOAD_FAST 21 ( min_as_tuple )
108 LOAD_FAST 22 ( min_as_tuple )
110 LOAD_FAST 21 ( min_as_tuple )
112 LOAD_FAST 22 ( min_as_tuple )
114 LOAD_FAST 20 ( min_as_tuple )
116 LOAD_FAST 21 ( min_as_tuple )
118 LOAD_FAST 22 ( min_as_tuple )
120 LOAD_FAST 21 ( min_as_tuple )
122 LOAD_FAST 22 ( min_as_tuple )
124 LOAD_FAST 21 ( min_as_tuple )
126 LOAD_FAST 22 (