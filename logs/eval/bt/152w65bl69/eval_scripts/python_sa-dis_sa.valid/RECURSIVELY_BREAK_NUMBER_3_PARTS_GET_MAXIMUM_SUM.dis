{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    if ( n == 0 or n == 1 ) :\n        return n\n    return max ( ( f_gold ( n // 2 ) + f_gold ( n // 3 ) + f_gold ( n // 4 ) ) , n )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (39,),\n    (79,),\n    (7,),\n    (76,),\n    (48,),\n    (18,),\n    (58,),\n    (17,),\n    (36,),\n    (5,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def breakSum ( n ) :\n    if ( n == 0 or n == 1 ) :\n        return n\n    return max ( ( breakSum ( n // 2 ) + breakSum ( n // 3 ) + breakSum ( n // 4 ) ) , n )\n"}
Disassembly of <code object breakSum at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 1 )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 12

27 8 LOAD_GLOBAL 0 ( max )
10 LOAD_FAST 0 ( n )
12 CALL_FUNCTION 1
14 LOAD_CONST 2 ( 1 )
16 COMPARE_OP 2 ( == )
18 POP_JUMP_IF_FALSE 24

28 20 LOAD_GLOBAL 1 ( max )
22 LOAD_FAST 0 ( n )
24 CALL_FUNCTION 1
26 LOAD_CONST 3 ( 1 )
28 COMPARE_OP 2 ( == )
30 POP_JUMP_IF_FALSE 36

29 32 LOAD_FAST 0 ( n )
34 LOAD_CONST 4 ( 2 )
36 COMPARE_OP 2 ( == )
38 POP_JUMP_IF_FALSE 44
40 LOAD_FAST 0 ( n )
42 LOAD_CONST 5 ( 1 )
44 COMPARE_OP 2 ( == )
46 POP_JUMP_IF_FALSE 44

30 48 LOAD_FAST 0 ( n )
50 LOAD_CONST 6 ( 2 )
52 COMPARE_OP 2 ( == )
54 POP_JUMP_IF_FALSE 44

31 56 LOAD_FAST 0 ( n )
58 LOAD_CONST 7 ( 2 )
60 COMPARE_OP 2 ( == )
62 POP_JUMP_IF_FALSE 44

32 64 LOAD_FAST 0 ( n )
66 LOAD_CONST 8 ( 2 )
68 COMPARE_OP 2 ( == )
70 POP_JUMP_IF_FALSE 44

33 72 LOAD_FAST 0 ( n )
74 LOAD_CONST 9 ( 2 )
76 COMPARE_OP 2 ( == )
78 POP_JUMP_IF_FALSE 44

34 80 LOAD_FAST 0 ( n )
82 LOAD_CONST 10 ( 2 )
84 COMPARE_OP 2 ( == )
86 POP_JUMP_IF_FALSE 44

35 88 LOAD_FAST 0 ( n )
90 LOAD_CONST 11 ( 1 )
92 INPLACE_ADD
94 STORE_FAST 0 ( n )

36 >> 96 LOAD_FAST 0 ( n )
98 LOAD_CONST 12 ( 2 )
100 COMPARE_OP 2 ( == )
102 POP_JUMP_IF_FALSE 106

37 104 LOAD_FAST 0 ( n )
106 LOAD_CONST 13 ( 1 )
108 INPLACE_ADD
110 STORE_FAST 0 ( n )

38 >> 112 LOAD_FAST 0 ( n )
114 LOAD_CONST 14 ( 2 )
116 COMPARE_OP 2 ( == )
118 POP_JUMP_IF_FALSE 130

39 120 LOAD_FAST 0 ( n )
122 LOAD_CONST 15 ( 2 )
124 COMPARE_OP 2 ( == )
126 POP_JUMP_IF_FALSE 130

40 128 LOAD_FAST 0 ( n )
130 LOAD_FAST 0 ( n )
132 LOAD_CONST 15 ( 2 )
134 COMPARE_OP 2 ( == )
136 POP_JUMP_IF_FALSE 130

41 138 LOAD_FAST 0 ( n )
140 LOAD_CONST 16 ( 2 )
142 COMPARE_OP 2 ( == )
144 POP_JUMP_IF_FALSE 146

42 146 LOAD_FAST 0 ( n )
148 RETURN_VALUE

43