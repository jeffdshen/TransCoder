{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , low , high , x ) :\n    if ( low > high ) :\n        return - 1\n    if ( x >= arr [ high ] ) :\n        return high\n    mid = int ( ( low + high ) / 2 )\n    if ( arr [ mid ] == x ) :\n        return mid\n    if ( mid > 0 and arr [ mid - 1 ] <= x and x < arr [ mid ] ) :\n        return mid - 1\n    if ( x < arr [ mid ] ) :\n        return f_gold ( arr , low , mid - 1 , x )\n    return f_gold ( arr , mid + 1 , high , x )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([5, 11, 20, 42, 42, 55, 58, 98, 99],5,7,6,),\n    ([50, -90, -38, -46, -10, -22, -66, 72, -52, 38, 90, 34, -12, -44, -6, 0, -20, -38, 86, 26, 64, -24, 40, 90, -26, -2, -28, 12, 22, -14],26,28,23,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],11,9,18,),\n    ([69, 28, 68, 98, 24, 67, 86, 2, 18, 22, 44, 77, 52, 62, 24, 46],15,11,13,),\n    ([-96, -94, -88, -84, -68, -60, -52, -52, -42, -34, -32, -16, -12, -6, -6, -4, -2, 0, 16, 18, 38, 58, 70, 72, 76, 78, 90, 92, 98],22,27,20,),\n    ([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0],24,15,26,),\n    ([1, 6, 7, 9, 10, 11, 19, 19, 22, 22, 26, 34, 36, 37, 37, 38, 39, 40, 49, 54, 60, 62, 65, 67, 71, 76, 78, 79, 82, 82, 89, 95, 97],22,26,25,),\n    ([76, -32, -98, -18, -80, 74, -22, -82, 40, -64, 58, -18, -64, 34, -44, -82, -46, 62, -80, -76, 32, 44, -32, 98, -26, 62, 16, 86, -52, -72, -90, -30, 6],28,31,24,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],28,29,30,),\n    ([81, 69, 15, 52, 49, 54, 18, 92, 33, 21, 91, 21, 5, 25, 77, 92, 26, 58, 72, 55, 76, 18, 13, 59, 9, 12, 31, 24, 36, 33, 71, 87, 55, 19, 42, 25],35,19,33,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def floorSearch ( arr , low , high , x ) :\n    if ( low > high ) :\n        return - 1\n    if ( x >= arr [ high ] ) :\n        return high\n    mid = int ( ( low + high ) / 2 )\n    if ( arr [ mid ] == x ) :\n        return mid\n    if ( mid > 0 and arr [ mid - 1 ] <= x and x < arr [ mid ] ) :\n        return mid - 1\n    if ( x < arr [ mid ] ) :\n        return floorSearch ( arr , low , mid - 1 , x )\n    return floorSearch ( arr , mid + 1 , high , x )\n"}
Disassembly of <code object floorSearch at 0x7f816a673a50, file "<dis>", line 89>:
90 0 LOAD_FAST 0 ( arr )
2 LOAD_CONST 1 ( - 1 )
4 BINARY_SUBSCR
6 STORE_FAST 1 ( low )

91 8 LOAD_FAST 1 ( low )
10 LOAD_CONST 2 ( - 1 )
12 BINARY_SUBSCR
14 STORE_FAST 2 ( high )

92 16 LOAD_FAST 1 ( low )
18 LOAD_CONST 3 ( - 1 )
20 BINARY_SUBSCR
22 STORE_FAST 3 ( high )

93 24 LOAD_FAST 1 ( low )
26 LOAD_CONST 4 ( - 1 )
28 BINARY_SUBSCR
30 STORE_FAST 4 ( high )

94 32 LOAD_FAST 0 ( arr )
34 LOAD_CONST 5 ( - 1 )
36 BINARY_SUBSCR
38 STORE_FAST 5 ( high )

95 40 LOAD_FAST 1 ( low )
42 LOAD_CONST 6 ( - 1 )
44 BINARY_SUBSCR
46 STORE_FAST 6 ( high )

96 48 LOAD_FAST 1 ( low )
50 LOAD_CONST 7 ( - 1 )
52 BINARY_SUBSCR
54 STORE_FAST 7 ( low )

97 56 LOAD_FAST 2 ( high )
58 LOAD_CONST 8 ( - 1 )
60 BINARY_SUBSCR
62 STORE_FAST 8 ( high )

98 64 LOAD_FAST 1 ( low )
66 LOAD_FAST 4 ( high )
68 LOAD_CONST 9 ( - 1 )
70 BINARY_SUBSCR
72 LOAD_FAST 3 ( high )
74 LOAD_CONST 10 ( - 1 )
76 BINARY_SUBSCR
78 LOAD_FAST 3 ( high )
80 LOAD_CONST 11 ( - 1 )
82 BINARY_SUBSCR
84 LOAD_FAST 4 ( high )
86 LOAD_CONST 12 ( - 1 )
88 BINARY_SUBSCR
90 LOAD_FAST 5 ( high )
92 LOAD_CONST 13 ( - 1 )
94 BINARY_SUBSCR
96 LOAD_FAST 4 ( high )
98 LOAD_CONST 14 ( - 1 )
100 BINARY_SUBSCR
102 LOAD_FAST 5 ( high )
104 LOAD_CONST 15 ( - 1 )
106 BINARY_SUBSCR
108 LOAD_FAST 4 ( high )
110 LOAD_CONST 16 ( - 1 )
112 BINARY_SUBSCR
114 LOAD_FAST 5 ( high )
116 LOAD_CONST 17 ( - 1 )
118 BINARY_SUBSCR
120 LOAD_FAST 5 ( high )
122 LOAD_CONST 18 ( - 1 )
124 BINARY_SUBSCR
126 LOAD_FAST 4 ( high )
128 LOAD_CONST 19 ( - 1 )
130 BINARY_SUBSCR
132 LOAD_FAST 5 ( high )
134 LOAD_CONST 19 ( - 1 )
136 BINARY_SUBSCR
138 LOAD_FAST 5 ( high )
140 LOAD_CONST 19 ( - 1 )
142 BINARY_SUBSCR
144 LOAD_FAST 7 ( low )
146 LOAD_CONST 19 ( - 1 )
148 BINARY_SUBSCR
150 LOAD_FAST 8 ( high )
152 LOAD_CONST 21 ( - 1 )
154 STORE_SUBSCR

90 90 LOAD_FAST