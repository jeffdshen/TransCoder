{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( N , K ) :\n    ans = 0 ;\n    for i in range ( 1 , N + 1 ) :\n        ans += ( i % K ) ;\n    return ans ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (11,5,),\n    (36,69,),\n    (71,28,),\n    (74,1,),\n    (66,84,),\n    (38,14,),\n    (2,11,),\n    (73,87,),\n    (79,11,),\n    (30,55,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findSum ( N , K ) :\n    ans = 0 ;\n    for i in range ( 1 , N + 1 ) :\n        ans += ( i % K ) ;\n    return ans ;\n"}
Disassembly of <code object findSum at 0x7f816a677930, file "<dis>", line 25>:
26 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( N )

27 4 LOAD_FAST 1 ( N )
6 LOAD_CONST 2 ( 1 )
8 COMPARE_OP 2 ( == )
10 POP_JUMP_IF_FALSE 20

28 12 LOAD_CONST 3 ( '' )
14 STORE_FAST 1 ( N )

29 >> 16 LOAD_FAST 1 ( N )
18 LOAD_FAST 0 ( N )
20 COMPARE_OP 2 ( == )
22 POP_JUMP_IF_FALSE 28

30 24 LOAD_CONST 4 ( '' )
26 STORE_FAST 1 ( N )

31 >> 28 LOAD_FAST 1 ( N )
30 LOAD_FAST 0 ( N )
32 COMPARE_OP 2 ( == )
34 POP_JUMP_IF_FALSE 44

32 36 LOAD_CONST 5 ( '' )
38 STORE_FAST 1 ( N )

33 >> 40 LOAD_FAST 1 ( N )
42 LOAD_FAST 0 ( N )
44 COMPARE_OP 2 ( == )
46 POP_JUMP_IF_FALSE 50

34 48 LOAD_CONST 6 ( '' )
50 STORE_FAST 1 ( N )

35 >> 52 LOAD_FAST 1 ( N )
54 LOAD_FAST 0 ( N )
56 COMPARE_OP 2 ( == )
58 POP_JUMP_IF_FALSE 60

36 60 LOAD_CONST 7 ( '' )
62 STORE_FAST 1 ( N )

37 >> 64 LOAD_FAST 1 ( N )
66 LOAD_FAST 0 ( N )
68 COMPARE_OP 2 ( == )
70 POP_JUMP_IF_FALSE 76
72 LOAD_CONST 8 ( '' )
74 STORE_FAST 1 ( N )

38 >> 76 LOAD_FAST 1 ( N )
78 LOAD_FAST 0 ( N )
80 COMPARE_OP 2 ( == )
82 POP_JUMP_IF_FALSE 90

39 84 LOAD_CONST 9 ( '' )
86 STORE_FAST 1 ( N )

40 >> 88 LOAD_FAST 1 ( N )
90 LOAD_FAST 0 ( N )
92 COMPARE_OP 2 ( == )
94 POP_JUMP_IF_FALSE 94

41 96 LOAD_FAST 1 ( N )
98 LOAD_FAST 0 ( N )
100 COMPARE_OP 2 ( == )
102 POP_JUMP_IF_FALSE 94

42 104 LOAD_FAST 1 ( N )
106 LOAD_FAST 0 ( N )
108 COMPARE_OP 2 ( == )
110 POP_JUMP_IF_FALSE 94

43 112 LOAD_FAST 1 ( N )
114 LOAD_FAST 0 ( N )
116 COMPARE_OP 2 ( == )
118 POP_JUMP_IF_FALSE 94

44 120 LOAD_FAST 1 ( N )
122 LOAD_CONST 10 ( 1 )
124 COMPARE_OP 2 ( == )
126 POP_JUMP_IF_FALSE 130

45 128 LOAD_FAST 1 ( N )
130 RETURN_VALUE

46 >> 132 LOAD_CONST 11 ( '' )
134 RETURN_VALUE

