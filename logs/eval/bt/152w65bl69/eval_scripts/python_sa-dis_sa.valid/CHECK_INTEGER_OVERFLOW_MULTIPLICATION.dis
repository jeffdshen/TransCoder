{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( a , b ) :\n    if ( a == 0 or b == 0 ) :\n        return False\n    result = a * b\n    if ( result >= 9223372036854775807 or result <= - 9223372036854775808 ) :\n        result = 0\n    if ( a == ( result // b ) ) :\n        print ( result // b )\n        return False\n    else :\n        return True\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (37,80,),\n    (10000000000,-10000000000,),\n    (10000000000,10000000000,),\n    (999999999,999999999,),\n    (39,36,),\n    (92,56,),\n    (14,21,),\n    (19,38,),\n    (14,82,),\n    (88,41,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def isOverflow ( a , b ) :\n    if ( a == 0 or b == 0 ) :\n        return False\n    result = a * b\n    if ( result >= 9223372036854775807 or result <= - 9223372036854775808 ) :\n        result = 0\n    if ( a == ( result // b ) ) :\n        print ( result // b )\n        return False\n    else :\n        return True\n"}
Disassembly of <code object isOverflow at 0x7f816afab270, file "<dis>", line 10>:
11 0 LOAD_FAST 0 ( a )
2 LOAD_CONST 1 ( 0 )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 12

12 8 LOAD_CONST 2 ( - 1 )
10 RETURN_VALUE

14 >> 12 LOAD_FAST 0 ( a )
14 LOAD_CONST 1 ( 0 )
16 COMPARE_OP 2 ( == )
18 POP_JUMP_IF_FALSE 28

15 20 LOAD_CONST 3 ( True )
22 RETURN_VALUE

16 >> 24 LOAD_FAST 0 ( a )
26 LOAD_CONST 1 ( 0 )
28 COMPARE_OP 2 ( == )
30 POP_JUMP_IF_FALSE 34

17 32 LOAD_CONST 4 ( True )
34 RETURN_VALUE

18 >> 36 LOAD_FAST 0 ( a )
38 LOAD_CONST 1 ( 0 )
40 COMPARE_OP 2 ( == )
42 POP_JUMP_IF_FALSE 52

19 44 LOAD_CONST 5 ( True )
46 RETURN_VALUE
48 JUMP_FORWARD 2 ( to 52 )

20 >> 50 LOAD_FAST 0 ( a )
52 LOAD_CONST 1 ( 0 )
54 COMPARE_OP 2 ( == )
56 POP_JUMP_IF_FALSE 52

21 58 LOAD_CONST 6 ( - 1 )
60 RETURN_VALUE

22 >> 62 LOAD_CONST 7 ( - 1 )
64 RETURN_VALUE

