{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    count = 0\n    while ( n ) :\n        n &= ( n - 1 )\n        count += 1\n    return count\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (32,),\n    (94,),\n    (33,),\n    (99,),\n    (17,),\n    (64,),\n    (80,),\n    (42,),\n    (12,),\n    (86,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def countSetBits ( n ) :\n    count = 0\n    while ( n ) :\n        n &= ( n - 1 )\n        count += 1\n    return count\n"}
Disassembly of <code object countSetBits at 0x7f816a6e4ae0, file "<dis>", line 17>:
18 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( count )

19 4 SETUP_LOOP 44 ( to 46 )
6 LOAD_GLOBAL 0 ( xrange )
8 LOAD_FAST 0 ( n )
10 CALL_FUNCTION 1
12 GET_ITER
>> 14 FOR_ITER 44 ( to 46 )
16 STORE_FAST 2 ( i )

20 18 LOAD_FAST 1 ( count )
20 LOAD_CONST 2 ( 1 )
22 INPLACE_ADD
24 STORE_FAST 1 ( count )

21 26 LOAD_FAST 1 ( count )
28 LOAD_CONST 3 ( 1 )
30 INPLACE_ADD
32 STORE_FAST 1 ( count )

22 34 LOAD_FAST 1 ( count )
36 LOAD_CONST 4 ( 2 )
38 INPLACE_ADD
40 STORE_FAST 1 ( count )
42 JUMP_ABSOLUTE 14
>> 44 POP_BLOCK

23 >> 46 LOAD_FAST 1 ( count )
48 LOAD_CONST 5 ( 1 )
50 INPLACE_ADD
52 STORE_FAST 1 ( count )

24 54 LOAD_FAST 1 ( count )
56 LOAD_CONST 6 ( 2 )
58 INPLACE_ADD
60 STORE_FAST 1 ( count )

25 62 LOAD_FAST 1 ( count )
64 LOAD_CONST 7 ( 3 )
66 INPLACE_ADD
68 STORE_FAST 1 ( count )
70 JUMP_ABSOLUTE 14
>> 72 POP_BLOCK
>> 74 LOAD_CONST 0 ( None )
76 RETURN_VALUE

