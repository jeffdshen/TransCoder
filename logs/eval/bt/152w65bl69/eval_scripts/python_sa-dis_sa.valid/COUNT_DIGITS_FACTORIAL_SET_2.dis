{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( n ) :\n    if ( n < 0 ) :\n        return 0 ;\n    if ( n <= 1 ) :\n        return 1 ;\n    x = ( ( n * math.log10 ( n / math.e ) + math.log10 ( 2 * math.pi * n ) / 2.0 ) ) ;\n    return math.floor ( x ) + 1 ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (56,),\n    (92,),\n    (52,),\n    (96,),\n    (96,),\n    (63,),\n    (51,),\n    (79,),\n    (70,),\n    (9,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findDigits ( n ) :\n    if ( n < 0 ) :\n        return 0 ;\n    if ( n <= 1 ) :\n        return 1 ;\n    x = ( ( n * math.log10 ( n / math.e ) + math.log10 ( 2 * math.pi * n ) / 2.0 ) ) ;\n    return math.floor ( x ) + 1 ;\n"}
Disassembly of <code object findDigits at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 1 )
4 COMPARE_OP 2 ( == )
6 POP_JUMP_IF_FALSE 12

27 8 LOAD_GLOBAL 0 ( math )
10 LOAD_METHOD 1 ( log10 )
12 LOAD_CONST 2 ( 2 )
14 CALL_METHOD 1
16 POP_TOP

28 18 LOAD_GLOBAL 0 ( math )
20 LOAD_METHOD 2 ( floor )
22 LOAD_FAST 0 ( n )
24 LOAD_CONST 1 ( 1 )
26 BINARY_SUBTRACT
28 BINARY_MULTIPLY
30 LOAD_FAST 0 ( n )
32 LOAD_CONST 1 ( 1 )
34 BINARY_SUBTRACT
36 BINARY_MULTIPLY
38 CALL_METHOD 1
40 RETURN_VALUE

30 >> 42 LOAD_GLOBAL 0 ( math )
44 LOAD_METHOD 3 ( floor )
46 LOAD_FAST 0 ( n )
48 LOAD_CONST 1 ( 1 )
50 BINARY_SUBTRACT
52 BINARY_MULTIPLY
54 CALL_METHOD 1
56 RETURN_VALUE
58 LOAD_CONST 1 ( 1 )
60 RETURN_VALUE

