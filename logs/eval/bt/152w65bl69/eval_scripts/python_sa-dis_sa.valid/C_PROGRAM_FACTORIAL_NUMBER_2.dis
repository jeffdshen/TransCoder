{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    return 1 if ( n == 1 or n == 0 ) else n * f_gold ( n - 1 )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (66,),\n    (93,),\n    (39,),\n    (93,),\n    (68,),\n    (20,),\n    (37,),\n    (52,),\n    (52,),\n    (19,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def factorial ( n ) :\n    return 1 if ( n == 1 or n == 0 ) else n * factorial ( n - 1 )\n"}
Disassembly of <code object factorial at 0x7f816afaa150, file "<dis>", line 15>:
16 0 LOAD_FAST 1 ( n )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 LOAD_CONST 2 ( 1 )
8 COMPARE_OP 2 ( == )
10 POP_JUMP_IF_FALSE 20

17 12 LOAD_FAST 1 ( n )
14 LOAD_CONST 1 ( 0 )
16 BINARY_SUBSCR
18 LOAD_CONST 3 ( 1 )
20 COMPARE_OP 2 ( == )
22 POP_JUMP_IF_FALSE 28

18 24 LOAD_FAST 1 ( n )
26 LOAD_CONST 1 ( 0 )
28 COMPARE_OP 2 ( == )
30 POP_JUMP_IF_FALSE 28

19 32 LOAD_FAST 1 ( n )
34 LOAD_CONST 1 ( 0 )
36 COMPARE_OP 2 ( == )
38 POP_JUMP_IF_FALSE 44
40 LOAD_FAST 1 ( n )
42 LOAD_CONST 1 ( 0 )
44 COMPARE_OP 2 ( == )
46 POP_JUMP_IF_FALSE 44

20 48 LOAD_FAST 1 ( n )
50 LOAD_CONST 1 ( 0 )
52 COMPARE_OP 2 ( == )
54 POP_JUMP_IF_FALSE 44

21 56 LOAD_FAST 1 ( n )
58 LOAD_CONST 1 ( 0 )
60 COMPARE_OP 2 ( == )
62 POP_JUMP_IF_FALSE 44

22 64 LOAD_FAST 1 ( n )
66 LOAD_CONST 1 ( 0 )
68 COMPARE_OP 2 ( == )
70 POP_JUMP_IF_FALSE 80

23 72 LOAD_FAST 1 ( n )
74 LOAD_CONST 1 ( 0 )
76 COMPARE_OP 2 ( == )
78 POP_JUMP_IF_FALSE 80

24 80 LOAD_FAST 1 ( n )
82 LOAD_CONST 1 ( 0 )
84 COMPARE_OP 2 ( == )
86 POP_JUMP_IF_FALSE 80

25 88 LOAD_FAST 1 ( n )
90 LOAD_CONST 1 ( 0 )
92 COMPARE_OP 2 ( == )
94 POP_JUMP_IF_FALSE 80

26 >> 96 LOAD_FAST 1 ( n )
98 LOAD_CONST 1 ( 0 )
100 COMPARE_OP 2 ( == )
102 POP_JUMP_IF_FALSE 80

27 104 LOAD_FAST 1 ( n )
106 LOAD_CONST 1 ( 0 )
108 COMPARE_OP 2 ( == )
110 POP_JUMP_IF_FALSE 80

28 112 LOAD_FAST 1 ( n )
114 LOAD_CONST 1 ( 0 )
116 COMPARE_OP 2 ( == )
118 POP_JUMP_IF_FALSE 106

29 120 LOAD_FAST 1 ( n )
122 LOAD_CONST 1 ( 0 )
124 COMPARE_OP 2 ( == )
126 POP_JUMP_IF_FALSE 128

30 128 LOAD_FAST 1 ( n )
130 LOAD_CONST 1 ( 0 )
132 COMPARE_OP 2 ( == )
134 POP_JUMP_IF_FALSE 128

31 136 LOAD_FAST 1 ( n )
138 LOAD_CONST 1 ( 0 )
140 COMPARE_OP 2 ( == )
142 POP_JUMP_IF_FALSE 128

32 144 LOAD_FAST 1 ( n )
146 LOAD_CONST 1 ( 0 )
148 COMPARE_OP 2 ( == )
