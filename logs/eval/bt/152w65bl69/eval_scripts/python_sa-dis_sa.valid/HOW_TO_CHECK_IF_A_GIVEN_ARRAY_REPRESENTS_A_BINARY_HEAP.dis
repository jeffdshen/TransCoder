{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , i , n ) :\n    if i > int ( ( n - 2 ) / 2 ) :\n        return True\n    if ( arr [ i ] >= arr [ 2 * i + 1 ] and arr [ i ] >= arr [ 2 * i + 2 ] and f_gold ( arr , 2 * i + 1 , n ) and f_gold ( arr , 2 * i + 2 , n ) ) :\n        return True\n    return False\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([1, 2, 3, 5, 24, 24, 25, 25, 36, 37, 37, 39, 42, 44, 46, 50, 51, 54, 56, 60, 62, 70, 71, 73, 75, 80, 80, 85, 86, 89, 91, 95, 99],0,18,),\n    ([-44, -58, 88, -42, 42, -14, -44, 42, 64, 94, -46, -70, 34, -10, -46, -52, -6, -78, 64, 56, 74, 98, -34, -4, -92, 6, -52, -20, 78, -72, -40],0,27,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],0,20,),\n    ([10, 2, 1, 34, 21, 37, 49, 31, 70, 97, 87, 50, 76, 55],0,8,),\n    ([-94, -84, -82, -66, -64, -62, -56, -38, -24, -24, -4, 2, 4, 4, 8, 14, 16, 20, 30, 34, 34, 48, 58, 58, 70, 76, 78, 86, 88, 96, 98],0,26,),\n    ([1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0],12,11,),\n    ([5,20,30,5,10,21,5],0,7),\n    ([50,20,30,5,10,21,5],0,7),\n    ([50,20,30,5,10,21,5],2,7),\n    ([50,20,30,5,10,21,5],4,7),\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))\n", "ref": "def isHeap ( arr , i , n ) :\n    if i > int ( ( n - 2 ) / 2 ) :\n        return True\n    if ( arr [ i ] >= arr [ 2 * i + 1 ] and arr [ i ] >= arr [ 2 * i + 2 ] and isHeap ( arr , 2 * i + 1 , n ) and isHeap ( arr , 2 * i + 2 , n ) ) :\n        return True\n    return False\n"}
Disassembly of <code object isHeap at 0x7f816a673a50, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( arr )
2 LOAD_CONST 1 ( - 2 )
4 BINARY_SUBSCR
6 LOAD_CONST 2 ( 1 )
8 COMPARE_OP 2 ( == )
10 POP_JUMP_IF_FALSE 20

27 12 LOAD_FAST 0 ( arr )
14 LOAD_CONST 3 ( 1 )
16 BINARY_SUBSCR
18 LOAD_CONST 4 ( 2 )
20 COMPARE_OP 2 ( == )
22 POP_JUMP_IF_FALSE 28

28 24 LOAD_CONST 5 ( True )
26 RETURN_VALUE

29 >> 28 LOAD_CONST 6 ( False )
30 RETURN_VALUE
32 LOAD_CONST 0 ( None )
34 RETURN_VALUE

