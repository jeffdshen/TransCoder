{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( arr , low , high ) :\n    max = arr [ low ]\n    i = low\n    for i in range ( high + 1 ) :\n        if arr [ i ] > max :\n            max = arr [ i ]\n    return max\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([11, 15, 16, 19, 24, 25, 26, 28, 34, 34, 43, 61, 63, 66, 67, 72, 77, 79, 81, 83, 87, 94, 99],15,21,),\n    ([8, 92],1,1,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],23,15,),\n    ([84, 39, 92, 89, 38, 75, 18, 39, 83, 67, 41, 46, 49, 27],8,13,),\n    ([-98, -94, -88, -84, -74, -72, -58, -52, -48, -48, -46, -42, -42, -32, -30, -30, -18, -10, -8, -8, -6, -4, 4, 6, 28, 30, 34, 38, 44, 48, 56, 58, 60, 64, 86],31,34,),\n    ([0, 1, 0],2,2,),\n    ([5, 9, 10, 16, 18, 19, 23, 24, 26, 33, 37, 44, 46, 54, 55, 57, 58, 59, 63, 64, 70, 75, 77, 81, 83, 84, 85, 85, 88, 89, 96, 97, 99],20,31,),\n    ([86, 20, -50, 74, -78, 86],3,5,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],19,18,),\n    ([16, 57, 65, 61, 17, 63, 7, 35, 69, 91, 30, 44, 99, 80, 6, 80, 56, 8, 84, 95, 20, 73, 30, 62, 77, 26, 66, 61, 61, 45],28,22,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findMaximum ( arr , low , high ) :\n    max = arr [ low ]\n    i = low\n    for i in range ( high + 1 ) :\n        if arr [ i ] > max :\n            max = arr [ i ]\n    return max\n"}
Disassembly of <code object findMaximum at 0x7f816a673a50, file "<dis>", line 89>:
90 0 LOAD_FAST 1 ( low )
2 LOAD_FAST 0 ( arr )
4 COMPARE_OP 6 ( in )
6 POP_JUMP_IF_FALSE 20

91 8 LOAD_FAST 1 ( low )
10 LOAD_CONST 1 ( 0 )
12 COMPARE_OP 4 ( > )
14 POP_JUMP_IF_FALSE 20

92 16 LOAD_FAST 1 ( low )
18 LOAD_FAST 0 ( arr )
20 COMPARE_OP 6 ( in )
22 POP_JUMP_IF_FALSE 28

93 24 LOAD_FAST 1 ( low )
26 LOAD_FAST 0 ( arr )
28 COMPARE_OP 6 ( in )
30 POP_JUMP_IF_FALSE 34

94 32 LOAD_FAST 1 ( low )
34 LOAD_FAST 0 ( arr )
36 COMPARE_OP 6 ( in )
38 POP_JUMP_IF_FALSE 40

95 40 LOAD_FAST 1 ( low )
42 LOAD_FAST 0 ( arr )
44 COMPARE_OP 6 ( in )
46 POP_JUMP_IF_FALSE 40

96 48 LOAD_FAST 1 ( low )
50 LOAD_FAST 0 ( arr )
52 COMPARE_OP 6 ( in )
54 POP_JUMP_IF_FALSE 40

97 56 LOAD_FAST 1 ( low )
58 LOAD_FAST 0 ( arr )
60 LOAD_FAST 0 ( arr )
62 LOAD_FAST 0 ( arr )
64 LOAD_FAST 0 ( arr )
66 LOAD_FAST 0 ( arr )
68 LOAD_FAST 0 ( arr )
70 STORE_SUBSCR

98 >> 72 LOAD_FAST 1 ( low )
74 LOAD_FAST 0 ( arr )
76 LOAD_FAST 0 ( arr )
78 LOAD_FAST 0 ( arr )
80 LOAD_FAST 0 ( arr )
82 LOAD_FAST 0 ( arr )
84 LOAD_FAST 0 ( arr )
86 STORE_SUBSCR
88 LOAD_CONST 1 ( 0 )
90 COMPARE_OP 4 ( > )
92 POP_JUMP_IF_FALSE 94

99 94 LOAD_FAST 1 ( low )
96 LOAD_FAST 0 ( arr )
98 LOAD_FAST 0 ( arr )
100 LOAD_FAST 0 ( arr )
102 LOAD_FAST 0 ( arr )
104 LOAD_FAST 0 ( arr )
106 LOAD_FAST 0 ( arr )
108 LOAD_FAST 0 ( arr )
110 LOAD_FAST 0 ( arr )
112 LOAD_FAST 0 ( arr )
114 LOAD_FAST 0 ( arr )
116 LOAD_FAST 0 ( arr )
118 LOAD_FAST 0 ( arr )
120 LOAD_FAST 0 ( arr )
122 LOAD_FAST 0 ( arr )
124 LOAD_FAST 0 ( arr )
126 LOAD_FAST 0 ( arr )
128 LOAD_FAST 0 ( arr )
130 LOAD_FAST 0 ( arr )
132 LOAD_FAST 0 ( arr )
134 LOAD_FAST 0 ( arr )
136 BUILD_TUPLE 3
138 STORE_SUBSCR
140 LOAD_CONST 1 ( 0 )
142 RETURN_VALUE

