{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n , p ) :\n    ans = 0 ;\n    for x in range ( 1 , p ) :\n        if ( ( x * x ) % p == 1 ) :\n            last = x + p * ( n / p ) ;\n            if ( last > n ) :\n                last -= p ;\n            ans += ( ( last - x ) / p + 1 ) ;\n    return int ( ans ) ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (94,36,),\n    (11,79,),\n    (88,63,),\n    (85,43,),\n    (74,89,),\n    (96,33,),\n    (49,51,),\n    (50,24,),\n    (21,26,),\n    (81,19,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findCountOfSolutions ( n , p ) :\n    ans = 0 ;\n    for x in range ( 1 , p ) :\n        if ( ( x * x ) % p == 1 ) :\n            last = x + p * ( n / p ) ;\n            if ( last > n ) :\n                last -= p ;\n            ans += ( ( last - x ) / p + 1 ) ;\n    return int ( ans ) ;\n"}
Disassembly of <code object findCountOfSolutions at 0x7f816a6e4b70, file "<dis>", line 24>:
25 0 LOAD_CONST 1 ( 0 )
2 STORE_FAST 1 ( p )

26 4 LOAD_FAST 1 ( p )
6 LOAD_CONST 2 ( 1 )
8 COMPARE_OP 2 ( == )
10 POP_JUMP_IF_FALSE 20

27 12 LOAD_FAST 1 ( p )
14 LOAD_CONST 3 ( 1 )
16 INPLACE_ADD
18 STORE_FAST 1 ( p )

28 >> 20 LOAD_FAST 1 ( p )
22 LOAD_CONST 4 ( 1 )
24 INPLACE_ADD
26 STORE_FAST 1 ( p )
28 JUMP_FORWARD 10 ( to 34 )

29 >> 30 LOAD_FAST 1 ( p )
32 LOAD_CONST 5 ( 1 )
34 INPLACE_ADD
36 STORE_FAST 1 ( p )

30 38 LOAD_FAST 1 ( p )
40 LOAD_CONST 6 ( 2 )
42 INPLACE_ADD
44 STORE_FAST 1 ( p )

31 >> 46 LOAD_FAST 1 ( p )
48 LOAD_CONST 7 ( 1 )
50 INPLACE_ADD
52 STORE_FAST 1 ( p )

32 54 LOAD_FAST 1 ( p )
56 LOAD_CONST 8 ( 2 )
58 INPLACE_ADD
60 STORE_FAST 1 ( p )

33 62 LOAD_FAST 1 ( p )
64 LOAD_CONST 9 ( 2 )
66 INPLACE_ADD
68 STORE_FAST 1 ( p )

34 70 LOAD_FAST 1 ( p )
72 LOAD_CONST 10 ( 2 )
74 INPLACE_ADD
76 STORE_FAST 1 ( p )
78 JUMP_FORWARD 10 ( to 80 )

35 >> 80 LOAD_FAST 1 ( p )
82 LOAD_CONST 11 ( 2 )
84 INPLACE_ADD
86 STORE_FAST 1 ( p )

36 88 LOAD_FAST 1 ( p )
90 LOAD_CONST 12 ( 2 )
92 INPLACE_ADD
94 STORE_FAST 1 ( p )

37 >> 96 LOAD_FAST 1 ( p )
98 LOAD_CONST 13 ( 2 )
100 INPLACE_ADD
102 STORE_FAST 1 ( p )

38 104 LOAD_FAST 1 ( p )
106 LOAD_CONST 14 ( 2 )
108 INPLACE_ADD
110 STORE_FAST 1 ( p )

39 112 LOAD_FAST 1 ( p )
114 LOAD_CONST 15 ( 2 )
116 INPLACE_ADD
118 STORE_FAST 1 ( p )

40 120 LOAD_FAST 1 ( p )
122 LOAD_CONST 16 ( 2 )
124 INPLACE_ADD
126 STORE_FAST 1 ( p )

41 128 LOAD_FAST 1 ( p )
130 LOAD_CONST 17 ( 2 )
132 INPLACE_ADD
134 STORE_FAST 1 ( p )
136 JUMP_FORWARD 2 ( to 80 )

42 >> 138 LOAD_FAST 1 ( p )
140 RETURN_VALUE

