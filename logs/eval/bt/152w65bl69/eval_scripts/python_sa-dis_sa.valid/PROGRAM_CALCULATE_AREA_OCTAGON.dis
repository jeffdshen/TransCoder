{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( side ) :\n    return ( 2 * ( 1 + ( math.sqrt ( 2 ) ) ) * side * side )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (5859.798616323926,),\n    (-6381.210375893524,),\n    (2442.246292006922,),\n    (-9624.81536339737,),\n    (8679.436805247444,),\n    (-2682.3245401089525,),\n    (7216.9161613024435,),\n    (-5881.789859815442,),\n    (2497.776395789202,),\n    (-9598.912195459263,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if abs(1 - (0.0000001 + abs(f_gold(*parameters_set))) / (abs(f_filled(*parameters_set)) + 0.0000001)) < 0.001:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def areaOctagon ( side ) :\n    return ( 2 * ( 1 + ( math.sqrt ( 2 ) ) ) * side * side )\n"}
Disassembly of <code object areaOctagon at 0x7f816a673a50, file "<dis>", line 64>:
65 0 LOAD_CONST 1 ( 2 )
2 LOAD_CONST 2 ( 1 )
4 LOAD_CONST 3 ( 2 )
6 BINARY_MULTIPLY
8 LOAD_CONST 4 ( 3 )
10 BINARY_MULTIPLY
12 LOAD_CONST 5 ( 2 )
14 BINARY_MULTIPLY
16 LOAD_CONST 6 ( 3 )
18 LOAD_CONST 7 ( 4 )
20 BINARY_MULTIPLY
22 LOAD_CONST 8 ( 2 )
24 BINARY_MULTIPLY
26 LOAD_CONST 9 ( 3 )
28 LOAD_CONST 10 ( 4 )
30 BINARY_MULTIPLY
32 LOAD_CONST 11 ( 3 )
34 LOAD_CONST 12 ( 4 )
36 BINARY_MULTIPLY
38 LOAD_CONST 13 ( 3 )
40 LOAD_CONST 12 ( 4 )
42 BINARY_MULTIPLY
44 LOAD_CONST 14 ( 3 )
46 LOAD_CONST 15 ( 4 )
48 BINARY_MULTIPLY
50 LOAD_CONST 16 ( 4 )
52 BINARY_MULTIPLY
54 LOAD_CONST 17 ( 3 )
56 LOAD_CONST 16 ( 4 )
58 BINARY_MULTIPLY
60 LOAD_CONST 17 ( 3 )
62 LOAD_CONST 16 ( 4 )
64 BINARY_MULTIPLY
66 LOAD_CONST 17 ( 3 )
68 LOAD_CONST 18 ( 4 )
70 BINARY_MULTIPLY
72 LOAD_CONST 19 ( 3 )
74 LOAD_CONST 20 ( 4 )
76 BINARY_MULTIPLY
78 LOAD_CONST 21 ( 3 )
80 LOAD_CONST 22 ( 4 )
82 BINARY_MULTIPLY
84 LOAD_CONST 23 ( 3 )
86 LOAD_CONST 22 ( 4 )
88 LOAD_CONST 23 ( 3 )
90 LOAD_CONST 22 ( 4 )
92 LOAD_CONST 23 ( 3 )
94 LOAD_CONST 24 ( 4 )
96 LOAD_CONST 25 ( 4 )
98 LOAD_CONST 26 ( 4 )
100 LOAD_CONST 27 ( 4 )
102 LOAD_CONST 26 ( 4 )
104 LOAD_CONST 28 ( 4 )
106 LOAD_CONST 27 ( 3 )
108 LOAD_CONST 28 ( 4 )
110 LOAD_CONST 30 ( 4 )
112 LOAD_CONST 29 ( 3 )
114 LOAD_CONST 30 ( 4 )
116 LOAD_CONST 30 ( 4 )
118 LOAD_CONST 29 ( 3 )
120 LOAD_CONST 30 ( 4 )
122 LOAD_CONST 30 ( 4 )
124 LOAD_CONST 31 ( 4 )
126 LOAD_CONST 30 ( 4 )
128 LOAD_CONST 32 ( 4 )
130 LOAD_CONST 34 ( 4 )
132 LOAD_CONST 31 ( 3 )
134 LOAD_CONST 30 ( 4 )
136 LOAD_CONST 31 ( 3 )
138 LOAD_CONST 32 ( 4 )
140 LOAD_CONST 34 ( 4 )
142 LOAD_CONST 35 ( 4 )
144 LOAD_CONST 36 ( 4 )
146 LOAD_CONST 35 ( 3 )
148 LOAD_CONST 36 ( 4 )
150 LOAD_CONST 37 ( 3 )
152 LOAD_CONST 38 ( 4 )
154 LOAD_CONST 40 ( 4 )
156 LOAD_CONST 1 ( 2 )
158