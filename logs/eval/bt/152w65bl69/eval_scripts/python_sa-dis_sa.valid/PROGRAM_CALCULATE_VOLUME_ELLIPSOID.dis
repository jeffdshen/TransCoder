{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\nimport math\n\ndef f_gold ( r1 , r2 , r3 ) :\n    return 1.33 * math.pi * r1 * r2 * r3\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (3287.4842316041018,4503.332888443404,8590.24729914204,),\n    (-3707.427510963942,-6671.335781753231,-2780.4954870801926,),\n    (8980.643174783816,3584.781688607942,2818.469507143102,),\n    (-2698.0187368852694,-1004.7289573934537,-9602.530725071243,),\n    (8627.156664162168,9572.27618966978,4783.930377855004,),\n    (-7316.329924623669,-6591.043206581106,-9760.465488363216,),\n    (7857.3846206400485,3671.761679299217,2534.5825334137794,),\n    (-6502.657905007728,-1412.2240121470609,-6135.238350044512,),\n    (4468.400513325576,2272.1999139470304,4753.075799180736,),\n    (-7231.864791620428,-8036.087711033032,-6456.263512521035,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if abs(1 - (0.0000001 + abs(f_gold(*parameters_set))) / (abs(f_filled(*parameters_set)) + 0.0000001)) < 0.001:\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def volumeOfEllipsoid ( r1 , r2 , r3 ) :\n    return 1.33 * math.pi * r1 * r2 * r3\n"}
Disassembly of <code object volumeOfEllipsoid at 0x7f816a6e4b70, file "<dis>", line 30>:
31 0 LOAD_CONST 1 ( 1.33 )
2 LOAD_CONST 2 ( 1.33 )
4 LOAD_CONST 3 ( 1.33 )
6 LOAD_CONST 4 ( 1.33 )
8 LOAD_CONST 5 ( 1.33 )
10 LOAD_CONST 6 ( 1.33 )
12 LOAD_CONST 7 ( 1.33 )
14 LOAD_CONST 8 ( 1.33 )
16 LOAD_CONST 9 ( 1.35 )
18 LOAD_CONST 10 ( 1.35 )
20 LOAD_CONST 11 ( 1.35 )
22 LOAD_CONST 12 ( 1.35 )
24 LOAD_CONST 13 ( 1.35 )
26 LOAD_CONST 14 ( 1.35 )
28 LOAD_CONST 15 ( 1.35 )
30 LOAD_CONST 16 ( 1.35 )
32 LOAD_CONST 17 ( 1.35 )
34 LOAD_CONST 18 ( 1.35 )
36 LOAD_CONST 19 ( 1.35 )
38 LOAD_CONST 20 ( 1.35 )
40 LOAD_CONST 19 ( 1.35 )
42 LOAD_CONST 20 ( 1.35 )
44 LOAD_CONST 21 ( 1.35 )
46 LOAD_CONST 22 ( 1.35 )
48 LOAD_CONST 23 ( 1.35 )
50 LOAD_CONST 22 ( 1.35 )
52 LOAD_CONST 24 ( 1.35 )
54 LOAD_CONST 23 ( 1.35 )
56 LOAD_CONST 22 ( 1.35 )
58 LOAD_CONST 23 ( 1.35 )
60 LOAD_CONST 24 ( 1.35 )
62 LOAD_CONST 25 ( 1.35 )
64 LOAD_CONST 26 ( 1.35 )
66 LOAD_CONST 25 ( 1.35 )
68 LOAD_CONST 26 ( 1.35 )
70 LOAD_CONST 27 ( 1.35 )
72 LOAD_CONST 28 ( 1.35 )
74 LOAD_CONST 29 ( 1.35 )
76 LOAD_CONST 30 ( 1.35 )
78 LOAD_CONST 28 ( 1.35 )
80 LOAD_CONST 29 ( 1.35 )
82 LOAD_CONST 30 ( 1.35 )
84 LOAD_CONST 29 ( 1.35 )
86 LOAD_CONST 30 ( 1.35 )
88 LOAD_CONST 31 ( 1.35 )
90 LOAD_CONST 30 ( 1.35 )
92 LOAD_CONST 32 ( 1.35 )
94 LOAD_CONST 34 ( 1.33 )
96 LOAD_CONST 33 ( 1.33 )
98 LOAD_CONST 34 ( 1.33 )
100 LOAD_CONST 35 ( 1.33 )
102 LOAD_CONST 36 ( 1.33 )
104 LOAD_CONST 36 ( 1.33 )
106 LOAD_CONST 37 ( 1.33 )
108 LOAD_CONST 36 ( 1.35 )
110 LOAD_CONST 37 ( 1.35 )
112 LOAD_CONST 36 ( 1.35 )
114 LOAD_CONST 37 ( 1.35 )
116 LOAD_CONST 38 ( 1.33 )
118 LOAD_CONST 37 ( 1.35 )
120 LOAD_CONST 38 ( 1.33 )
122 LOAD_CONST 37 ( 1.35 )