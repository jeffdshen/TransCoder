{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( a , n ) :\n    a.sort ( ) ;\n    s = [ ] ;\n    i = 0 ;\n    j = n - 1 ;\n    while ( i < j ) :\n        s.append ( ( a [ i ] + a [ j ] ) ) ;\n        i += 1 ;\n        j -= 1 ;\n    mini = min ( s ) ;\n    maxi = max ( s ) ;\n    return abs ( maxi - mini ) ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([11, 12, 14, 15, 20, 21, 28, 28, 30, 33, 39, 39, 42, 43, 44, 45, 48, 53, 53, 58, 59, 67, 68, 70, 70, 72, 74, 76, 76, 81, 87, 91],31,),\n    ([28, -42, -14, 0, -56, 42, 14, 52, 58, 58, 92, -62, -14, -12, -84, -30, -94, -70, 18, -44, 88, -60],11,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],19,),\n    ([90, 8, 24, 31, 70, 61, 78, 67, 49, 28, 31, 4, 64, 66, 21, 61, 6, 49, 10, 46, 34, 31, 48, 28, 78, 70, 44, 9, 38, 2, 4, 36, 76, 37, 32, 97, 46, 85, 76],37,),\n    ([-98, -78, -68, -58, -26, -10, 32, 42, 90, 96],8,),\n    ([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1],35,),\n    ([8, 17, 23, 25, 29, 32, 35, 35, 52, 56, 57, 59, 70, 71, 77, 88, 96],16,),\n    ([62, -10, 82, 18, 46],3,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],20,),\n    ([42, 71, 12, 33, 3, 58, 60, 60, 5, 52, 46, 53, 43, 50, 98, 53, 16, 82, 39, 93, 70, 13, 93, 69, 7, 92, 76, 11, 61, 48, 27, 28, 20, 76, 44, 24, 52, 56, 21, 82, 49, 5, 61, 76, 67],40,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def calculate ( a , n ) :\n    a.sort ( ) ;\n    s = [ ] ;\n    i = 0 ;\n    j = n - 1 ;\n    while ( i < j ) :\n        s.append ( ( a [ i ] + a [ j ] ) ) ;\n        i += 1 ;\n        j -= 1 ;\n    mini = min ( s ) ;\n    maxi = max ( s ) ;\n    return abs ( maxi - mini ) ;\n"}
Disassembly of <code object calculate at 0x7f8169feb660, file "<dis>", line 21>:
22 0 LOAD_FAST 0 ( a )
2 LOAD_FAST 1 ( n )
4 BINARY_MULTIPLY
6 LOAD_FAST 2 ( i )
8 BINARY_MULTIPLY
10 LOAD_FAST 3 ( alpha )
12 BINARY_MULTIPLY
14 LOAD_FAST 4 ( alpha )
16 BINARY_MULTIPLY
18 BINARY_ADD
20 LOAD_FAST 2 ( i )
22 BINARY_MULTIPLY
24 BINARY_ADD
26 LOAD_FAST 1 ( n )
28 BINARY_MULTIPLY
30 BINARY_ADD
32 BINARY_MULTIPLY
34 RETURN_VALUE

