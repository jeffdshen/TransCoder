{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( limit ) :\n    if ( limit < 2 ) :\n        return 0\n    ef1 = 0\n    ef2 = 2\n    sm = ef1 + ef2\n    while ( ef2 <= limit ) :\n        ef3 = 4 * ef2 + ef1\n        if ( ef3 > limit ) :\n            break\n        ef1 = ef2\n        ef2 = ef3\n        sm = sm + ef2\n    return sm\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (67,),\n    (89,),\n    (12,),\n    (94,),\n    (96,),\n    (25,),\n    (49,),\n    (8,),\n    (33,),\n    (59,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def evenFibSum ( limit ) :\n    if ( limit < 2 ) :\n        return 0\n    ef1 = 0\n    ef2 = 2\n    sm = ef1 + ef2\n    while ( ef2 <= limit ) :\n        ef3 = 4 * ef2 + ef1\n        if ( ef3 > limit ) :\n            break\n        ef1 = ef2\n        ef2 = ef3\n        sm = sm + ef2\n    return sm\n"}
Disassembly of <code object evenFibSum at 0x7f816a673a50, file "<dis>", line 27>:
28 0 LOAD_FAST 0 ( limit )
2 LOAD_CONST 1 ( 2 )
4 BINARY_MULTIPLY
6 STORE_FAST 1 ( ef1 )

29 8 LOAD_FAST 1 ( ef1 )
10 LOAD_CONST 2 ( 3 )
12 BINARY_MULTIPLY
14 STORE_FAST 2 ( ef1 )

30 16 LOAD_FAST 0 ( limit )
18 LOAD_CONST 3 ( 4 )
20 BINARY_MULTIPLY
22 LOAD_FAST 2 ( ef1 )
24 BINARY_MULTIPLY
26 LOAD_FAST 1 ( ef1 )
28 BINARY_MULTIPLY
30 LOAD_FAST 2 ( ef1 )
32 BINARY_MULTIPLY
34 BINARY_ADD
36 LOAD_FAST 1 ( ef1 )
38 BINARY_MULTIPLY
40 BINARY_ADD
42 LOAD_FAST 2 ( ef1 )
44 BINARY_MULTIPLY
46 BINARY_ADD
48 STORE_FAST 3 ( ef1 )

31 50 LOAD_FAST 0 ( limit )
52 LOAD_CONST 4 ( 4 )
54 BINARY_MULTIPLY
56 LOAD_FAST 2 ( ef1 )
58 BINARY_MULTIPLY
60 BINARY_MULTIPLY
62 BINARY_ADD
64 LOAD_FAST 3 ( ef1 )
66 BINARY_MULTIPLY
68 BINARY_ADD
70 LOAD_FAST 2 ( ef1 )
72 BINARY_MULTIPLY
74 BINARY_ADD
76 LOAD_FAST 3 ( ef1 )
78 BINARY_MULTIPLY
80 BINARY_ADD
82 BINARY_MULTIPLY
84 BINARY_ADD
86 STORE_FAST 4 ( ef1 )

32 88 LOAD_FAST 0 ( limit )
90 RETURN_VALUE

