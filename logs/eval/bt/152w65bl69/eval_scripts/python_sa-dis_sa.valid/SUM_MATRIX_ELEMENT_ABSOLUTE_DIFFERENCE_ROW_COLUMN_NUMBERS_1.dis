{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n ) :\n    sum = 0\n    for i in range ( n ) :\n        sum += i * ( n - i )\n    return 2 * sum\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (63,),\n    (72,),\n    (28,),\n    (35,),\n    (6,),\n    (70,),\n    (20,),\n    (8,),\n    (8,),\n    (35,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def findSum ( n ) :\n    sum = 0\n    for i in range ( n ) :\n        sum += i * ( n - i )\n    return 2 * sum\n"}
Disassembly of <code object findSum at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 0 ( n )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 STORE_FAST 1 ( sum )

27 8 LOAD_FAST 1 ( sum )
10 LOAD_CONST 2 ( 1 )
12 BINARY_SUBSCR
14 LOAD_CONST 3 ( 2 )
16 COMPARE_OP 2 ( == )
18 POP_JUMP_IF_FALSE 24

28 20 LOAD_FAST 1 ( sum )
22 LOAD_CONST 2 ( 1 )
24 BINARY_SUBSCR
26 LOAD_CONST 4 ( 2 )
28 COMPARE_OP 2 ( == )
30 POP_JUMP_IF_FALSE 36

29 32 LOAD_FAST 1 ( sum )
34 LOAD_CONST 5 ( 3 )
36 COMPARE_OP 2 ( == )
38 POP_JUMP_IF_FALSE 44
40 LOAD_FAST 1 ( sum )
42 LOAD_CONST 6 ( 1 )
44 BINARY_SUBSCR
46 LOAD_CONST 7 ( 3 )
48 COMPARE_OP 2 ( == )
50 POP_JUMP_IF_FALSE 52

30 52 LOAD_FAST 1 ( sum )
54 LOAD_CONST 8 ( 1 )
56 BINARY_SUBSCR
58 LOAD_CONST 9 ( 1 )
60 BINARY_SUBSCR
62 LOAD_CONST 10 ( 2 )
64 COMPARE_OP 2 ( == )
66 POP_JUMP_IF_FALSE 52

31 68 LOAD_FAST 1 ( sum )
70 LOAD_CONST 10 ( 2 )
72 BINARY_SUBSCR
74 LOAD_CONST 11 ( 1 )
76 BINARY_SUBSCR
78 LOAD_CONST 12 ( 2 )
80 BINARY_SUBSCR
82 LOAD_CONST 13 ( 1 )
84 BINARY_SUBSCR
86 LOAD_CONST 14 ( 2 )
88 COMPARE_OP 2 ( == )
90 POP_JUMP_IF_FALSE 92

32 92 LOAD_FAST 1 ( sum )
94 LOAD_CONST 7 ( 3 )
96 BINARY_SUBSCR
98 LOAD_CONST 6 ( 1 )
100 BINARY_SUBSCR
102 LOAD_CONST 6 ( 1 )
104 BINARY_SUBSCR
106 LOAD_CONST 6 ( 1 )
108 BINARY_SUBSCR
110 LOAD_CONST 7 ( 3 )
112 COMPARE_OP 2 ( == )
114 POP_JUMP_IF_FALSE 116

33 116 LOAD_FAST 1 ( sum )
118 LOAD_CONST 6 ( 1 )
120 BINARY_SUBSCR
122 LOAD_CONST 6 ( 1 )
124 BINARY_SUBSCR
126 LOAD_CONST 7 ( 3 )
128 COMPARE_OP 2 ( == )
130 POP_JUMP_IF_FALSE 130

34 132 LOAD_FAST 1 ( sum )
134 LOAD_CONST 6 ( 1 )
136 BINARY_SUBSCR
138 LOAD_CONST 7 ( 3 )
140 COMPARE_OP 2 ( == )
142 POP_JUMP_IF_FALSE 130

35 144 LOAD_FAST 1 ( sum )
146 LOAD_CONST 6 ( 1 )
148 BINARY_SUBSCR
150 LOAD_CONST 8 ( 1 )
152 BINARY_SUBSCR
154 LOAD_CONST 9 ( 1 )
156 BINARY_SUBSCR
158 LOAD_CONST 10 ( 2 )
160 BUILD_SLICE 2
162 BINARY_SUBSCR
164 LOAD_CONST 9 ( 1 )
166 BINARY_SUBSCR
168 RETURN_VALUE

36 >> 170 LOAD_FAST 1 (