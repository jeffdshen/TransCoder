{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( n , k ) :\n    if ( n + 1 >= k ) :\n        return ( k - 1 )\n    else :\n        return ( 2 * n + 1 - k )\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    (90,74,),\n    (86,36,),\n    (92,38,),\n    (72,71,),\n    (25,57,),\n    (11,53,),\n    (94,80,),\n    (91,75,),\n    (66,58,),\n    (34,88,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def find ( n , k ) :\n    if ( n + 1 >= k ) :\n        return ( k - 1 )\n    else :\n        return ( 2 * n + 1 - k )\n"}
Disassembly of <code object find at 0x7f816a673a50, file "<dis>", line 27>:
28 0 LOAD_FAST 0 ( self )
2 LOAD_ATTR 0 ( n )
4 LOAD_CONST 1 ( 1 )
6 COMPARE_OP 2 ( == )
8 POP_JUMP_IF_FALSE 14

29 10 LOAD_FAST 0 ( self )
12 LOAD_ATTR 1 ( n )
14 LOAD_CONST 2 ( 0 )
16 COMPARE_OP 2 ( == )
18 POP_JUMP_IF_FALSE 28

30 20 LOAD_FAST 0 ( self )
22 LOAD_ATTR 2 ( n )
24 LOAD_CONST 3 ( 2 )
26 COMPARE_OP 2 ( == )
28 POP_JUMP_IF_FALSE 28

31 30 LOAD_FAST 0 ( self )
32 LOAD_ATTR 3 ( n )
34 LOAD_CONST 4 ( 1 )
36 COMPARE_OP 2 ( == )
38 POP_JUMP_IF_FALSE 48

32 40 LOAD_FAST 0 ( self )
42 LOAD_ATTR 4 ( n )
44 LOAD_CONST 5 ( 1 )
46 INPLACE_ADD
48 STORE_FAST 0 ( self )
50 JUMP_FORWARD 10 ( to 48 )

33 >> 52 LOAD_FAST 0 ( self )
54 LOAD_ATTR 5 ( n )
56 LOAD_CONST 6 ( 2 )
58 COMPARE_OP 2 ( == )
60 POP_JUMP_IF_FALSE 66

34 62 LOAD_FAST 0 ( self )
64 LOAD_ATTR 6 ( n )
66 LOAD_CONST 7 ( 1 )
68 INPLACE_ADD
70 STORE_FAST 0 ( self )
72 JUMP_FORWARD 10 ( to 48 )

35 >> 74 LOAD_FAST 0 ( self )
76 LOAD_ATTR 7 ( n )
78 LOAD_CONST 8 ( 2 )
80 INPLACE_ADD
82 STORE_FAST 0 ( self )
84 JUMP_FORWARD 10 ( to 48 )

36 >> 86 LOAD_FAST 0 ( self )
88 LOAD_ATTR 8 ( n )
90 LOAD_CONST 9 ( 2 )
92 INPLACE_ADD
94 STORE_FAST 0 ( self )
96 JUMP_FORWARD 10 ( to 48 )

37 >> 98 LOAD_FAST 0 ( self )
100 LOAD_ATTR 9 ( n )
102 LOAD_FAST 0 ( self )
104 LOAD_ATTR 10 ( n )
106 INPLACE_ADD
108 ROT_TWO
110 STORE_ATTR 11 ( n )

38 >> 112 LOAD_FAST 0 ( self )
114 LOAD_ATTR 12 ( n )
116 LOAD_FAST 0 ( self )
118 LOAD_ATTR 13 ( n )
120 INPLACE_ADD
122 ROT_TWO
124 STORE_ATTR 14 ( n )
126 LOAD_CONST 10 ( None )
128 RETURN_VALUE

