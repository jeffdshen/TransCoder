{"script": "# Copyright (c) 2019-present, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the license found in the\n# LICENSE file in the root directory of this source tree.\n#\ndef f_gold ( high , low , n ) :\n    if ( n <= 0 ) :\n        return 0\n    return max ( high [ n - 1 ] + f_gold ( high , low , ( n - 2 ) ) , low [ n - 1 ] + f_gold ( high , low , ( n - 1 ) ) ) ;\n\n\n#TOFILL\n\nif __name__ == '__main__':\n    param = [\n    ([1, 3, 9, 10, 13, 14, 15, 15, 17, 22, 23, 28, 30, 31, 37, 42, 45, 62, 62, 68, 68, 68, 78, 79, 82, 84, 87, 90, 99],[5, 10, 11, 14, 16, 22, 24, 30, 34, 35, 37, 37, 39, 41, 42, 42, 43, 55, 57, 63, 71, 76, 83, 83, 85, 90, 91, 97, 99],18,),\n    ([-78, -12, 26, 80, 50, 4, -80, 86, 12, -2, 18, -50, -90, 56, -50, 88, -62, 96, -44, -82, 56],[-44, -14, 14, 0, 30, 78, 40, -12, -44, -16, 60, -12, -50, -66, 70, -98, -56, 48, -82, 94, 14],16,),\n    ([1],[1],0,),\n    ([21, 28, 13, 48, 26, 49, 16, 70, 81, 35, 74, 12, 97, 61, 10, 84, 94, 78, 40, 30, 30, 84, 41, 4, 95, 79, 38, 29, 9],[49, 88, 25, 93, 24, 56, 47, 44, 33, 27, 86, 57, 21, 25, 64, 44, 37, 99, 36, 54, 17, 29, 37, 17, 26, 43, 61, 27, 21],25,),\n    ([-80, -36, -32, -20, -14, -12, 10, 12, 72],[-76, -54, -50, -28, 0, 58, 70, 78, 90],4,),\n    ([1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1],[0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1],24,),\n    ([1, 7, 9, 10, 13, 14, 15, 20, 23, 24, 24, 24, 26, 27, 29, 31, 32, 33, 34, 35, 46, 48, 49, 51, 51, 53, 53, 56, 56, 60, 62, 64, 64, 70, 73, 73, 73, 74, 77, 78, 79, 79, 79, 80, 86, 89, 89, 92, 98],[1, 3, 3, 4, 8, 8, 10, 10, 10, 12, 12, 15, 15, 22, 23, 28, 28, 30, 31, 33, 34, 35, 36, 36, 36, 42, 44, 44, 51, 54, 57, 58, 59, 59, 63, 65, 66, 68, 69, 71, 73, 76, 77, 78, 79, 79, 86, 87, 93],31,),\n    ([56, 48, 40, -56, 44, -86, -28, -32, -34, 4, -94, -14, 28, -74],[82, -40, -16, -64, 12, -6, 60, 48, -58, -4, 42, -28, 24, -58],8,),\n    ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],16,),\n    ([85, 13, 35, 57, 8, 48, 65, 54, 88, 7, 66, 30, 47, 51],[1, 42, 42, 89, 3, 21, 49, 98, 4, 59, 26, 85, 53, 34],8,)\n        ]\n    n_success = 0\n    for i, parameters_set in enumerate(param):\n        if f_filled(*parameters_set) == f_gold(*parameters_set):\n            n_success+=1\n    print(\"#Results: %i, %i\" % (n_success, len(param)))", "ref": "def maxTasks ( high , low , n ) :\n    if ( n <= 0 ) :\n        return 0\n    return max ( high [ n - 1 ] + maxTasks ( high , low , ( n - 2 ) ) , low [ n - 1 ] + maxTasks ( high , low , ( n - 1 ) ) ) ;\n"}
Disassembly of <code object maxTasks at 0x7f816a6e4b70, file "<dis>", line 25>:
26 0 LOAD_FAST 1 ( low )
2 LOAD_CONST 1 ( 0 )
4 BINARY_SUBSCR
6 STORE_FAST 2 ( high )

27 8 LOAD_FAST 2 ( high )
10 LOAD_CONST 2 ( 1 )
12 BINARY_SUBSCR
14 STORE_FAST 3 ( high )

28 16 LOAD_FAST 1 ( low )
18 LOAD_CONST 3 ( 1 )
20 BINARY_SUBSCR
22 STORE_FAST 4 ( high )

29 24 LOAD_FAST 1 ( low )
26 LOAD_CONST 4 ( 1 )
28 BINARY_SUBSCR
30 STORE_FAST 5 ( high )

30 32 LOAD_FAST 1 ( low )
34 LOAD_CONST 5 ( 1 )
36 BINARY_SUBSCR
38 STORE_FAST 6 ( high )

31 40 LOAD_FAST 1 ( low )
42 LOAD_FAST 2 ( high )
44 LOAD_CONST 6 ( 1 )
46 BINARY_SUBSCR
48 LOAD_FAST 5 ( high )
50 LOAD_CONST 7 ( 1 )
52 BINARY_SUBSCR
54 LOAD_FAST 6 ( high )
56 LOAD_CONST 8 ( 1 )
58 BINARY_SUBSCR
60 BINARY_SUBTRACT
62 LOAD_FAST 6 ( high )
64 LOAD_CONST 9 ( 1 )
66 BINARY_SUBSCR
68 BINARY_SUBTRACT
70 LOAD_FAST 5 ( high )
72 LOAD_CONST 10 ( 1 )
74 BINARY_SUBSCR
76 BINARY_SUBTRACT
78 LOAD_FAST 6 ( high )
80 BINARY_SUBTRACT
82 BINARY_SUBTRACT
84 LOAD_FAST 6 ( high )
86 LOAD_CONST 11 ( 1 )
88 BINARY_SUBSCR
90 BINARY_SUBTRACT
92 BINARY_SUBTRACT
94 LOAD_FAST 6 ( high )
96 LOAD_CONST 12 ( 1 )
98 BINARY_SUBSCR
100 BINARY_SUBTRACT
102 LOAD_FAST 6 ( high )
104 BINARY_SUBTRACT
106 BINARY_SUBTRACT
108 LOAD_FAST 6 ( high )
110 LOAD_CONST 13 ( 1 )
112 BINARY_SUBTRACT
114 BINARY_SUBTRACT
116 BINARY_SUBTRACT
118 BINARY_SUBTRACT
120 LOAD_FAST 6 ( high )
122 BINARY_SUBTRACT
124 BINARY_SUBTRACT
126 BINARY_SUBTRACT
128 BINARY_SUBTRACT
130 LOAD_FAST 6 ( high )
132 BINARY_SUBTRACT
134 BINARY_SUBTRACT
136 BINARY_SUBTRACT
138 BINARY_SUBTRACT
140 BINARY_SUBTRACT
142 LOAD_FAST 6 ( high )
144 BINARY_SUBTRACT
146 BINARY_SUBTRACT
148 RETURN_VALUE

